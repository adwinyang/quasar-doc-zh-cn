"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[966],{966:(e,t,o)=>{o.r(t),o.d(t,{default:()=>p});var n=o(83673);const a=(0,n._)("p",null,"The QBtnToggle component is another basic element for user input, similar to QRadio but with buttons. You can use this to supply a way for the user to pick an option from multiple choices.",-1),i=(0,n._)("div",{class:"doc-note doc-note--tip"},[(0,n._)("p",{class:"doc-note__title"},"TIP"),(0,n._)("p",null,"Since QBtnToggle uses QBtn, you can use design related props of QBtn to style this component.")],-1),s=(0,n._)("p",null,[(0,n.Uk)("First QBtnToggle below has tooltips on each button. Second QBtnToggle has customized the content. Notice the "),(0,n._)("code",{class:"doc-token"},"slot"),(0,n.Uk)(" prop in the "),(0,n._)("code",{class:"doc-token"},"options"),(0,n.Uk)(" Object definition. When you use this "),(0,n._)("code",{class:"doc-token"},"slot"),(0,n.Uk)(" prop, you don’t necessary need the "),(0,n._)("code",{class:"doc-token"},"label"),(0,n.Uk)("/"),(0,n._)("code",{class:"doc-token"},"icon"),(0,n.Uk)(" props in "),(0,n._)("code",{class:"doc-token"},"options"),(0,n.Uk)(".")],-1),c=(0,n._)("p",null,[(0,n.Uk)("When dealing with a native form which has an "),(0,n._)("code",{class:"doc-token"},"action"),(0,n.Uk)(" and a "),(0,n._)("code",{class:"doc-token"},"method"),(0,n.Uk)(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),(0,n._)("code",{class:"doc-token"},"name"),(0,n.Uk)(" property on QBtnToggle, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1);function l(e,t,o,l,d,g){const u=(0,n.up)("doc-api"),r=(0,n.up)("doc-example"),p=(0,n.up)("doc-page");return(0,n.wg)(),(0,n.j4)(p,{"meta-title":l.metaTitle,title:"Button Toggle",related:l.related,toc:l.toc,"meta-desc":l.metaDesc},{default:(0,n.w5)((()=>[a,(0,n._)("h2",{id:"qbtntoggle-api",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=e=>l.copyHeading("qbtntoggle-api"))},"QBtnToggle API"),(0,n.Wm)(u,{file:"QBtnToggle"}),(0,n._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:t[1]||(t[1]=e=>l.copyHeading("usage"))},"Usage"),(0,n._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:t[2]||(t[2]=e=>l.copyHeading("basic"))},"Basic"),(0,n.Wm)(r,{title:"Basic",file:"QBtnToggle/Basic"}),(0,n._)("h3",{id:"design",class:"doc-heading doc-h3",onClick:t[3]||(t[3]=e=>l.copyHeading("design"))},"Design"),i,(0,n.Wm)(r,{title:"Some design examples",file:"QBtnToggle/Design"}),(0,n.Wm)(r,{title:"Spread horizontally",file:"QBtnToggle/Spread"}),(0,n.Wm)(r,{title:"On a dark background",file:"QBtnToggle/Dark",dark:""}),(0,n._)("h3",{id:"custom-content",class:"doc-heading doc-h3",onClick:t[4]||(t[4]=e=>l.copyHeading("custom-content"))},"Custom content"),s,(0,n.Wm)(r,{title:"Custom buttons content",file:"QBtnToggle/CustomContent"}),(0,n._)("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=e=>l.copyHeading("disable-and-readonly"))},"Disable and readonly"),(0,n.Wm)(r,{title:"Disable and readonly",file:"QBtnToggle/DisableReadonly"}),(0,n._)("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=e=>l.copyHeading("native-form-submit"))},"Native form submit"),c,(0,n.Wm)(r,{title:"Native form",file:"QBtnToggle/NativeForm"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var d=o(17536);const g={name:"DocMarkdownPage",setup(){return{metaTitle:"Button Toggle",metaDesc:"The QBtnToggle Vue component is a basic element for user input, similar to QRadio but with buttons.",related:[{name:"按钮",category:"按钮",path:"/vue-components/button"},{name:"标签",category:"Vue 组件",path:"/vue-components/tabs"},{name:"选项组",category:"表单组件",path:"/vue-components/option-group"},{name:"单选框",category:"表单组件",path:"/vue-components/radio"},{name:"复选框",category:"表单组件",path:"/vue-components/checkbox"},{name:"切换开关",category:"表单组件",path:"/vue-components/toggle"}],toc:[{id:"qbtntoggle-api",title:"QBtnToggle API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"design",title:"Design",sub:!0},{id:"custom-content",title:"Custom content",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],copyHeading:d.Et}}};var u=o(74260);const r=(0,u.Z)(g,[["render",l]]),p=r}}]);