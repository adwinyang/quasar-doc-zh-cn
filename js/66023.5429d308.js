"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[66023],{66023:(e,o,i)=>{i.r(o),i.d(o,{default:()=>R});var t=i(83673);const a=(0,t._)("p",null,"The QRadio component is another basic element for user input. You can use this to supply a way for the user to pick an option from multiple choices.",-1),n={class:"doc-note doc-note--tip"},d=(0,t._)("p",{class:"doc-note__title"},"TIP",-1),s=(0,t.Uk)("Please also refer to the "),l=(0,t.Uk)("QOptionGroup"),c=(0,t.Uk)(" on other possibilities for creating groups of Radios."),r=(0,t._)("p",null,[(0,t.Uk)("In the second row in the example below, the property "),(0,t._)("code",{class:"doc-token"},"keep-color"),(0,t.Uk)(" is being used to retain the passed in color when the radio button is not in a toggled state.")],-1),p=(0,t._)("p",null,[(0,t.Uk)("Apart from the standard sizes below, you can define your own through the "),(0,t._)("code",{class:"doc-token"},"size"),(0,t.Uk)(" property (last one is a custom size).")],-1),u={class:"doc-note doc-note--tip"},h=(0,t._)("p",{class:"doc-note__title"},"TIP",-1),g=(0,t.Uk)("You can also use "),m=(0,t.Uk)("QOptionGroup"),k=(0,t.Uk)(", which simplifies the usage when you have groups of radios, like in example below."),b=(0,t._)("p",null,[(0,t.Uk)("In the example below, we are rendering a "),(0,t._)("code",{class:"doc-token"},"<label>"),(0,t.Uk)(" tag (notice "),(0,t._)("code",{class:"doc-token"},'tag="label"'),(0,t.Uk)(") so the QRadio will respond to clicks on QItems to change toggle state.")],-1),f=(0,t._)("p",null,[(0,t.Uk)("When dealing with a native form which has an "),(0,t._)("code",{class:"doc-token"},"action"),(0,t.Uk)(" and a "),(0,t._)("code",{class:"doc-token"},"method"),(0,t.Uk)(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),(0,t._)("code",{class:"doc-token"},"name"),(0,t.Uk)(" property on QRadio, otherwise formData will not contain it (if it should) - all value are converted to string (native behaviour, so do not use Object values):")],-1);function _(e,o,i,_,w,y){const v=(0,t.up)("doc-link"),Q=(0,t.up)("doc-api"),R=(0,t.up)("doc-example"),U=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(U,{"meta-title":_.metaTitle,title:"Radio",related:_.related,toc:_.toc,"meta-desc":_.metaDesc},{default:(0,t.w5)((()=>[a,(0,t._)("div",n,[d,(0,t._)("p",null,[s,(0,t.Wm)(v,{to:"/vue-components/option-group"},{default:(0,t.w5)((()=>[l])),_:1}),c])]),(0,t._)("h2",{id:"qradio-api",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=e=>_.copyHeading("qradio-api"))},"QRadio API"),(0,t.Wm)(Q,{file:"QRadio"}),(0,t._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:o[1]||(o[1]=e=>_.copyHeading("usage"))},"Usage"),(0,t._)("h3",{id:"standard",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=e=>_.copyHeading("standard"))},"Standard"),(0,t.Wm)(R,{title:"Standard",file:"QRadio/Standard"}),(0,t._)("h3",{id:"dense",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=e=>_.copyHeading("dense"))},"Dense"),(0,t.Wm)(R,{title:"Dense",file:"QRadio/Dense"}),(0,t._)("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=e=>_.copyHeading("coloring"))},"Coloring"),r,(0,t.Wm)(R,{title:"Coloring",file:"QRadio/Coloring"}),(0,t._)("h3",{id:"dark-and-disable",class:"doc-heading doc-h3",onClick:o[5]||(o[5]=e=>_.copyHeading("dark-and-disable"))},"Dark and disable"),(0,t.Wm)(R,{title:"On a dark background",file:"QRadio/OnDarkBackground",dark:""}),(0,t.Wm)(R,{title:"Disable",file:"QRadio/Disable"}),(0,t._)("h3",{id:"label-on-left-side",class:"doc-heading doc-h3",onClick:o[6]||(o[6]=e=>_.copyHeading("label-on-left-side"))},"Label on left-side"),(0,t.Wm)(R,{title:"Label on left side",file:"QRadio/LabelPosition"}),(0,t._)("h3",{id:"sizes",class:"doc-heading doc-h3",onClick:o[7]||(o[7]=e=>_.copyHeading("sizes"))},"Sizes"),p,(0,t.Wm)(R,{title:"Standard sizes",file:"QRadio/StandardSizes"}),(0,t._)("h3",{id:"with-qoptiongroup",class:"doc-heading doc-h3",onClick:o[8]||(o[8]=e=>_.copyHeading("with-qoptiongroup"))},"With QOptionGroup"),(0,t._)("div",u,[h,(0,t._)("p",null,[g,(0,t.Wm)(v,{to:"/vue-components/option-group"},{default:(0,t.w5)((()=>[m])),_:1}),k])]),(0,t.Wm)(R,{title:"Usage with QOptionGroup",file:"QRadio/OptionGroup"}),(0,t._)("h3",{id:"with-qitem",class:"doc-heading doc-h3",onClick:o[9]||(o[9]=e=>_.copyHeading("with-qitem"))},"With QItem"),b,(0,t.Wm)(R,{title:"With QItem",file:"QRadio/InaList"}),(0,t._)("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:o[10]||(o[10]=e=>_.copyHeading("native-form-submit"))},"Native form submit"),f,(0,t.Wm)(R,{title:"Native form",file:"QRadio/NativeForm"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var w=i(17536);const y={name:"DocMarkdownPage",setup(){return{metaTitle:"Radio",metaDesc:"The QRadio Vue component is a basic element for user input. It can be used to supply a way for the user to pick an option from multiple choices.",related:[{name:"选项组",category:"表单组件",path:"/vue-components/option-group"},{name:"按钮切换",category:"表单组件",path:"/vue-components/button-toggle"},{name:"复选框",category:"表单组件",path:"/vue-components/checkbox"},{name:"切换开关",category:"表单组件",path:"/vue-components/toggle"}],toc:[{id:"qradio-api",title:"QRadio API"},{id:"usage",title:"Usage"},{id:"standard",title:"Standard",sub:!0},{id:"dense",title:"Dense",sub:!0},{id:"coloring",title:"Coloring",sub:!0},{id:"dark-and-disable",title:"Dark and disable",sub:!0},{id:"label-on-left-side",title:"Label on left-side",sub:!0},{id:"sizes",title:"Sizes",sub:!0},{id:"with-qoptiongroup",title:"With QOptionGroup",sub:!0},{id:"with-qitem",title:"With QItem",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],copyHeading:w.Et}}};var v=i(74260);const Q=(0,v.Z)(y,[["render",_]]),R=Q}}]);