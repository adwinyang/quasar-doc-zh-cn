"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[2965],{2965:(n,a,s)=>{s.r(a),s.d(a,{default:()=>An});var e=s(83673);const c=(0,e._)("p",null,[(0,e.Uk)("本页引用到 "),(0,e._)("code",{class:"doc-token"},"src/index.js"),(0,e.Uk)(" 文件，它使用 "),(0,e._)("code",{class:"doc-token"},"quasar dev"),(0,e.Uk)(" 和 "),(0,e._)("code",{class:"doc-token"},"quasar build"),(0,e.Uk)(" 执行。这是你可以修改构建以满足应用程序扩展需求的主要过程。 例如，注册一个启动文件，修改 webpack 进程，注册 CSS，注册一个 UI 组件，注册一个 Quasar CLI 命令等。")],-1),t=(0,e._)("p",null,"文件的基本结构示例:",-1),o=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("module"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function-variable function"},"exports"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"api"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},'// "api " 对象的属性和方法描述如下'),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),p=(0,e._)("p",null,[(0,e.Uk)("与"),(0,e._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,e.Uk)("中的"),(0,e._)("code",{class:"doc-token"},"ctx"),(0,e.Uk)("相同。帮助你根据 "),(0,e._)("code",{class:"doc-token"},"quasar dev"),(0,e.Uk)(" 或 "),(0,e._)("code",{class:"doc-token"},"quasar build"),(0,e.Uk)(" 的运行环境做出决定。")],-1),i=(0,e._)("p",null,"例如, 如果仅在 Electron 模式中运行，你可能需要使用其中的一个 api 方法。",-1),k=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("ctx"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("dev "),(0,e._)("span",{class:"token operator"},"=="),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&&"),(0,e.Uk)(" api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("ctx"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("mode "),(0,e._)("span",{class:"token operator"},"=="),(0,e._)("span",{class:"token string"},"'electron'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"beforeDev"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"api"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 运行 quasar dev 和 Eelectron 模式中时做些什么..."),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),l=(0,e._)("p",null,"该应用扩展中(App Extension)包含的`ext-id’(String)。",-1),u=(0,e.Uk)("是一个对象，该对象具有安装此应用扩展时的提示答案。 有关提示的更多信息，请查看 "),_=(0,e.Uk)("Prompts API"),r=(0,e.Uk)(" 。"),d=(0,e._)("p",null,[(0,e.Uk)("解析运行此应用扩展所在的应用程序中的路径。无需自行导入"),(0,e._)("code",{class:"doc-token"},"path"),(0,e.Uk)("和解析路径。")],-1),U=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root 目录 (根目录)"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"app"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'src/my-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root/src 目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"src"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'my-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root/src-pwa  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"pwa"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"//  解析为 app 的 root/src-ssr  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"ssr"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 roo/src-cordova  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"cordova"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'config.xml'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 roo/electron 目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"electron"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),m=(0,e._)("p",null,"运行该应用扩展的 app 根目录的完整路径(String)。",-1),g=(0,e._)("p",null,"通过 semver 条件确保应用扩展(App Extension)与主机应用中安装的软件包兼容。",-1),f=(0,e._)("p",null,"如果不满足 semver 条件，那么 @quasar/app 就会出错并停止执行。",-1),h=(0,e._)("p",null,"semver 条件示例：`‘1.x || >=2.5.0 || 5.0.0 - 7.2.3’。",-1),b=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} packageName\n * @param {string} semverCondition\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"compatibleWith"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'@quasar/app'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'1.x'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),v=(0,e._)("p",null,"通过 semver 条件确定主机应用程序中是否安装了某些包。",-1),j=(0,e._)("p",null,"semver条件示例：`‘1.x || >=2.5.0 || 5.0.0 - 7.2.3’。",-1),x=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} packageName\n * @param {string} (optional) semverCondition\n * @return {boolean} 包已安装并满足可选的semver条件\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasPackage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'vuelidate'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，这个应用程序有它(任意版本)。"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasPackage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'quasar'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'^1.0.0'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，这个应用程序已经安装了v1版本"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),w=(0,e._)("p",null,"检查另一个应用扩展是否已安装 npm，并且 Quasar CLI 已调用它。",-1),C=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * 检查是否安装了另一个应用扩展\n *\n * @param {string} extId\n * @return {boolean} 是否安装并调用了该扩展？\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasExtension"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("extId"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，我们有它了"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),P=(0,e._)("p",null,"获取主机应用程序包的版本。",-1),y=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n*param {string} packageName\n* @return {string|undefined}应用程序包的版本\n  */"),(0,e.Uk)("\n  console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)(" api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getPackageVersion"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("packageName"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 输出示例。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 1.1.3"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 未定义 (当软件包未找到时)"),(0,e.Uk)("\n")])],-1),W=(0,e._)("p",null,"扩展 quasar.conf.js",-1),q=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n * (cfg: Object, ctx: Object) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendQuasarConf"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("conf"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 对 quasar.conf.js 做一些事情："),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 添加、更改任何内容"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),S=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("module"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function-variable function"},"exports"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ctx")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendQuasarConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("conf"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 确保我的启动文件被注册了"),(0,e.Uk)("\n    conf"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("boot"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'~quasar-app-extension-my-ext/src/boot/my-ext-bootfile.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"// 确保启动文件可以转存"),(0,e.Uk)("\n    conf"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("build"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("transpileDependencies"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token regex"},[(0,e._)("span",{class:"token regex-delimiter"},"/"),(0,e._)("span",{class:"token regex-source language-regex"},"quasar-app-extension-my-ext[/\\/]src[/\\/]boot"),(0,e._)("span",{class:"token regex-delimiter"},"/")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 如果 boot 文件导入了任何内容，请确保"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 上面的正则表达式也匹配这些文件！"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"//  确保my-ext css 能通过webpack"),(0,e.Uk)("\n    conf"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("css"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"push"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'~quasar-app-extension-my-ext/src/component/my-ext.sass'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),H=(0,e._)("div",{class:"doc-note doc-note--tip"},[(0,e._)("p",{class:"doc-note__title"},"TIP"),(0,e._)("p",null,[(0,e.Uk)("注意路径前面的波浪号("),(0,e._)("code",{class:"doc-token"},"~"),(0,e.Uk)(")。这告诉 Quasar CLI ，该路径是来自node_modules的依赖关系，而不是应用扩展(App Extension)索引脚本文件的相对路径。")])],-1),E=(0,e._)("p",null,"链式 webpack 配置",-1),I=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n * (chain: ChainObject, invoke: Object {isClient, isServer}) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"chainWebpack"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("chain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 添加/删除/更改链(Webpack链对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),D=(0,e.Uk)("该配置是一个 Webpack 链对象。它的API在 "),O=(0,e.Uk)("webpack-chain"),A=(0,e.Uk)(" 文档中有描述。"),Q=(0,e._)("p",null,"扩展 webpack 配置",-1),M=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (cfg: Object, invoke: Object {isClient, isServer}) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendWebpack"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("cfg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),R=(0,e._)("p",null,"Chain webpack config of the main electron process 在 Electron 主进程中进行链式 webpack 配置",-1),$=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (chain: ChainObject) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"chainWebpackMainElectronProcess"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("chain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),B=(0,e._)("p",null,"在 Electron 主进程中进行扩展 webpack 配置",-1),N=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (cfg: Object) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendWebpackMainElectronProcess"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("cfg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),T=(0,e._)("p",null,"在 Electron 预加载进程中进行链式 webpack 配置",-1),L=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (chain: ChainObject) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"chainWebpackPreloadElectronProcess"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("chain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),V=(0,e._)("p",null,"在 Electron 预加载进程中进行扩展 webpack 配置",-1),J=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (cfg: Object) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendWebpackPreloadElectronProcess"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("cfg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Z=(0,e._)("p",null,"SSR 服务端进行链式 Webpack 配置 (包括来自 /src-ssr/middleware 的 SRR 中间件)",-1),z=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (chain: ChainObject) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"chainWebpackWebserver"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("chain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},'// isClient 总是 "false", isServer 总是 "true"'),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),F=(0,e._)("p",null,"Extend webpack config Object of SSR webserver (includes the SSR middlewares from /src-ssr/middlewares) 扩展 SSR webserver的webpack配置对象(包括来自 /src-ssr/middleware 的 SRR 中间件)",-1),G=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (cfg: Object) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendWebpackWebserver"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("cfg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},'// isClient 总是 "false", isServer 总是 "true"'),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),K=(0,e._)("p",null,"使用 InjectManifest 时自定义 Service Worker 的链式 webpack 配置(/src-pwa/custom-service-worker.js 的内容)：",-1),X=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (cfg: ChainObject) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"chainWebpackCustomSW"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("cfg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Y=(0,e._)("p",null,"使用 InjectManifest 时为自定义 service worker 扩展 webpack 配置对象(/src-pwa/custom-service-worker.js 的内容)：",-1),nn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (chain: Object) => undefined\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendWebpackCustomSW"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("chain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" isClient"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" isServer "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" api")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 增加/删除/变更 cfg (Webpack 配置对象)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),an=(0,e._)("p",null,[(0,e.Uk)("Register a command that will become available as "),(0,e._)("code",{class:"doc-token"},"quasar run <ext-id> <cmd> [args]"),(0,e.Uk)(" (or the short form: "),(0,e._)("code",{class:"doc-token"},"quasar <ext-id> <cmd> [args]"),(0,e.Uk)("). 注册一个的命令，可以作为 "),(0,e._)("code",{class:"doc-token"},"quasar run <ext-id> <cmd> [args]"),(0,e.Uk)(" 形式使用(或缩写形式："),(0,e._)("code",{class:"doc-token"},"quasar <ext-id> <cmd> [args]"),(0,e.Uk)(")。")],-1),sn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} commandName (命令名称)\n * @param {function} fn\n *   ({ args: [ string, ... ], params: {object} }) => ?Promise\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"registerCommand"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'start'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" args"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" params "),(0,e._)("span",{class:"token punctuation"},"}")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这里做点什么"),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 这将注册“start”命令，并且在运行时执行此处理程序"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// $ quasar run <ext-id> start"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),en=(0,e._)("p",null,[(0,e.Uk)("Register an API file for "),(0,e._)("code",{class:"doc-token"},"$ quasar describe"),(0,e.Uk)(" command. 为 "),(0,e._)("code",{class:"doc-token"},"$quasar descripe"),(0,e.Uk)(" 命令注册一个API文件。")],-1),cn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} name\n * @param {string} relativePath\n *   (从进行此调用的文件开始的相对路径)\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"registerDescribeApi"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token string"},"'MyComponent'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token string"},"'./relative/path/to/my/component/file.json'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),tn=(0,e._)("p",null,[(0,e.Uk)("上述内容将响应 "),(0,e._)("code",{class:"doc-token"},"$ quasar describe MyComponent"),(0,e.Uk)(".")],-1),on=(0,e._)("p",null,[(0,e.Uk)("关于这样的JSON文件的语法，请查看"),(0,e._)("code",{class:"doc-token"},"/node_modules/quasar/dist/api"),(0,e.Uk)("(在你的项目文件夹中)。请注意，你JSON文件必须包含一个 "),(0,e._)("code",{class:"doc-token"},"type"),(0,e.Uk)(" 属性(“component”, “directive”, “plugin”)。例如：")],-1),pn=(0,e._)("pre",{class:"doc-code language-json"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},'"type"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"component"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},'"props"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  ...\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),kn=(0,e._)("div",{class:"doc-note doc-note--tip"},[(0,e._)("p",{class:"doc-note__title"},"TIP"),(0,e._)("p",null,[(0,e.Uk)("Always test with the "),(0,e._)("code",{class:"doc-token"},"quasar describe"),(0,e.Uk)(" command to ensure you got the syntax right and there are no errors. 始终用 "),(0,e._)("code",{class:"doc-token"},"quasar describe"),(0,e.Uk)(" 命令进行测试，以确保你的语法正确，并且没有错误。")])],-1),ln=(0,e._)("p",null,"获取该扩展的内部持久化配置。如果没有，则返回空对象。",-1),un=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @return {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getPersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),_n=(0,e._)("p",null,"设置该扩展的内部持久化配置。如果它已经存在，则会被覆盖。",-1),rn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"setPersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// ...."),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),dn=(0,e._)("p",null,"深度合并到该扩展的内部持久性配置中。如果扩展还未进行任何配置，则基本上等同于第一次设置它。",-1),Un=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"mergePersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// ...."),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),mn=(0,e._)("p",null,[(0,e.Uk)("在"),(0,e._)("code",{class:"doc-token"},"$ quasar dev"),(0,e.Uk)("命令运行前准备好一些外部服务，如启动一些后端或应用程序依赖的任何其他服务。")],-1),gn=(0,e._)("p",null,"可以使用 async/await 或直接返回一个Promise。",-1),fn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (api, { quasarConf }) => ?Promise\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"beforeDev"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" quasarConf "),(0,e._)("span",{class:"token punctuation"},"}")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这做些什么"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),hn=(0,e._)("p",null,[(0,e.Uk)("Quasar 开发服务器(dev server) 启动后运行的钩子("),(0,e._)("code",{class:"doc-token"},"$ quasar dev"),(0,e.Uk)(")。在开发服务器已经启动后，如果想做点什么，则可以使用它。")],-1),bn=(0,e._)("p",null,"可以使用 async/await 或直接返回一个Promise。",-1),vn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (api, { quasarConf }) => ?Promise\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"afterDev"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" quasarConf "),(0,e._)("span",{class:"token punctuation"},"}")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这做些什么"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),jn=(0,e._)("p",null,[(0,e.Uk)("构建 Quasar 应用程序之前运行的钩子 ("),(0,e._)("code",{class:"doc-token"},"$ quasar build"),(0,e.Uk)(")，此时，distributables 文件夹还没有创建好。")],-1),xn=(0,e._)("p",null,"可以使用 async/await 或直接返回一个Promise。",-1),wn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (api, { quasarConf }) => ?Promise\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"beforeBuild"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" quasarConf "),(0,e._)("span",{class:"token punctuation"},"}")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这做些什么"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Cn=(0,e._)("p",null,[(0,e.Uk)("构建 Quasar 应用程序之后运行的钩子 ("),(0,e._)("code",{class:"doc-token"},"$ quasar build"),(0,e.Uk)(")，此时，distributables 文件夹已创建好了，可以使用它进行某些操作。")],-1),Pn=(0,e._)("p",null,"可以使用 async/await 或直接返回一个Promise。",-1),yn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {function} fn\n *   (api, { quasarConf }) => ?Promise\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"afterBuild"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" quasarConf "),(0,e._)("span",{class:"token punctuation"},"}")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这做些什么"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Wn=(0,e._)("p",null,[(0,e.Uk)("如果需要发布("),(0,e._)("code",{class:"doc-token"},"$ quasar build -P"),(0,e.Uk)(")，则在构建生产使用的 Quasar 应用程序和执行 afterBuild 钩子(如果指定)之后运行的钩子。")],-1),qn=(0,e._)("p",null,"可以使用 async/await 或直接返回一个Promise。",-1),Sn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},'/**\n * @param {function} fn\n *   () => ?Promise\n * @param {object} opts\n *   * arg - 提供给 "--publish"/"-P" 的参数\n *   * distDir - 构建发行版的文件夹\n */'),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"onPublish"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" opts")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"=>"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 在这做些什么"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1);function Hn(n,a,s,Hn,En,In){const Dn=(0,e.up)("doc-link"),On=(0,e.up)("doc-page");return(0,e.wg)(),(0,e.j4)(On,{"meta-title":Hn.metaTitle,title:"应用程序扩展 API 索引",nav:Hn.nav,toc:Hn.toc,"meta-desc":Hn.metaDesc},{default:(0,e.w5)((()=>[c,t,o,(0,e._)("h2",{id:"api-ctx",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=n=>Hn.copyHeading("api-ctx"))},"api.ctx"),p,i,k,(0,e._)("h2",{id:"api-extid",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=n=>Hn.copyHeading("api-extid"))},"api.extId"),l,(0,e._)("h2",{id:"api-prompts",class:"doc-heading doc-h2",onClick:a[2]||(a[2]=n=>Hn.copyHeading("api-prompts"))},"api.prompts"),(0,e._)("p",null,[u,(0,e.Wm)(Dn,{to:"/app-extensions/development-guide/prompts-api"},{default:(0,e.w5)((()=>[_])),_:1}),r]),(0,e._)("h2",{id:"api-resolve",class:"doc-heading doc-h2",onClick:a[3]||(a[3]=n=>Hn.copyHeading("api-resolve"))},"api.resolve"),d,U,(0,e._)("h2",{id:"api-appdir",class:"doc-heading doc-h2",onClick:a[4]||(a[4]=n=>Hn.copyHeading("api-appdir"))},"api.appDir"),m,(0,e._)("h2",{id:"api-compatiblewith",class:"doc-heading doc-h2",onClick:a[5]||(a[5]=n=>Hn.copyHeading("api-compatiblewith"))},"api.compatibleWith"),g,f,h,b,(0,e._)("h2",{id:"api-haspackage",class:"doc-heading doc-h2",onClick:a[6]||(a[6]=n=>Hn.copyHeading("api-haspackage"))},"api.hasPackage"),v,j,x,(0,e._)("h2",{id:"api-hasextension",class:"doc-heading doc-h2",onClick:a[7]||(a[7]=n=>Hn.copyHeading("api-hasextension"))},"api.hasExtension"),w,C,(0,e._)("h2",{id:"api-getpackageversion",class:"doc-heading doc-h2",onClick:a[8]||(a[8]=n=>Hn.copyHeading("api-getpackageversion"))},"api.getPackageVersion"),P,y,(0,e._)("h2",{id:"api-extendquasarconf",class:"doc-heading doc-h2",onClick:a[9]||(a[9]=n=>Hn.copyHeading("api-extendquasarconf"))},"api.extendQuasarConf"),W,q,(0,e._)("h3",{id:"注册引导文件和css文件",class:"doc-heading doc-h3",onClick:a[10]||(a[10]=n=>Hn.copyHeading("注册引导文件和css文件"))},"注册引导文件和css文件"),S,H,(0,e._)("h2",{id:"api-chainwebpack",class:"doc-heading doc-h2",onClick:a[11]||(a[11]=n=>Hn.copyHeading("api-chainwebpack"))},"api.chainWebpack"),E,I,(0,e._)("p",null,[D,(0,e.Wm)(Dn,{to:"https://github.com/neutrinojs/webpack-chain"},{default:(0,e.w5)((()=>[O])),_:1}),A]),(0,e._)("h2",{id:"api-extendwebpack",class:"doc-heading doc-h2",onClick:a[12]||(a[12]=n=>Hn.copyHeading("api-extendwebpack"))},"api.extendWebpack"),Q,M,(0,e._)("h2",{id:"api-chainwebpackmainelectronprocess",class:"doc-heading doc-h2",onClick:a[13]||(a[13]=n=>Hn.copyHeading("api-chainwebpackmainelectronprocess"))},"api.chainWebpackMainElectronProcess"),R,$,(0,e._)("h2",{id:"api-extendwebpackmainelectronprocess",class:"doc-heading doc-h2",onClick:a[14]||(a[14]=n=>Hn.copyHeading("api-extendwebpackmainelectronprocess"))},"api.extendWebpackMainElectronProcess"),B,N,(0,e._)("h2",{id:"api-chainwebpackpreloadelectronprocess",class:"doc-heading doc-h2",onClick:a[15]||(a[15]=n=>Hn.copyHeading("api-chainwebpackpreloadelectronprocess"))},"api.chainWebpackPreloadElectronProcess"),T,L,(0,e._)("h2",{id:"api-extendwebpackpreloadelectronprocess",class:"doc-heading doc-h2",onClick:a[16]||(a[16]=n=>Hn.copyHeading("api-extendwebpackpreloadelectronprocess"))},"api.extendWebpackPreloadElectronProcess"),V,J,(0,e._)("h2",{id:"api-chainwebpackwebserver",class:"doc-heading doc-h2",onClick:a[17]||(a[17]=n=>Hn.copyHeading("api-chainwebpackwebserver"))},"api.chainWebpackWebserver"),Z,z,(0,e._)("h2",{id:"api-extendwebpackwebserver",class:"doc-heading doc-h2",onClick:a[18]||(a[18]=n=>Hn.copyHeading("api-extendwebpackwebserver"))},"api.extendWebpackWebserver"),F,G,(0,e._)("h2",{id:"api-chainwebpackcustomsw",class:"doc-heading doc-h2",onClick:a[19]||(a[19]=n=>Hn.copyHeading("api-chainwebpackcustomsw"))},"api.chainWebpackCustomSW"),K,X,(0,e._)("h2",{id:"api-extendwebpackcustomsw",class:"doc-heading doc-h2",onClick:a[20]||(a[20]=n=>Hn.copyHeading("api-extendwebpackcustomsw"))},"api.extendWebpackCustomSW"),Y,nn,(0,e._)("h2",{id:"api-registercommand",class:"doc-heading doc-h2",onClick:a[21]||(a[21]=n=>Hn.copyHeading("api-registercommand"))},"api.registerCommand"),an,sn,(0,e._)("h2",{id:"api-registerdescribeapi",class:"doc-heading doc-h2",onClick:a[22]||(a[22]=n=>Hn.copyHeading("api-registerdescribeapi"))},"api.registerDescribeApi"),en,cn,tn,on,pn,kn,(0,e._)("h2",{id:"api-getpersistentconf",class:"doc-heading doc-h2",onClick:a[23]||(a[23]=n=>Hn.copyHeading("api-getpersistentconf"))},"api.getPersistentConf"),ln,un,(0,e._)("h2",{id:"api-setpersistentconf",class:"doc-heading doc-h2",onClick:a[24]||(a[24]=n=>Hn.copyHeading("api-setpersistentconf"))},"api.setPersistentConf"),_n,rn,(0,e._)("h2",{id:"api-mergepersistentconf",class:"doc-heading doc-h2",onClick:a[25]||(a[25]=n=>Hn.copyHeading("api-mergepersistentconf"))},"api.mergePersistentConf"),dn,Un,(0,e._)("h2",{id:"api-beforedev",class:"doc-heading doc-h2",onClick:a[26]||(a[26]=n=>Hn.copyHeading("api-beforedev"))},"api.beforeDev"),mn,gn,fn,(0,e._)("h2",{id:"api-afterdev",class:"doc-heading doc-h2",onClick:a[27]||(a[27]=n=>Hn.copyHeading("api-afterdev"))},"api.afterDev"),hn,bn,vn,(0,e._)("h2",{id:"api-beforebuild",class:"doc-heading doc-h2",onClick:a[28]||(a[28]=n=>Hn.copyHeading("api-beforebuild"))},"api.beforeBuild"),jn,xn,wn,(0,e._)("h2",{id:"api-afterbuild",class:"doc-heading doc-h2",onClick:a[29]||(a[29]=n=>Hn.copyHeading("api-afterbuild"))},"api.afterBuild"),Cn,Pn,yn,(0,e._)("h2",{id:"api-onpublish",class:"doc-heading doc-h2",onClick:a[30]||(a[30]=n=>Hn.copyHeading("api-onpublish"))},"api.onPublish"),Wn,qn,Sn])),_:1},8,["meta-title","nav","toc","meta-desc"])}var En=s(17536);const In={name:"DocMarkdownPage",setup(){return{metaTitle:"应用程序扩展 API 索引",metaDesc:"Quasar 应用扩展 API 的索引脚本。提供访问 Quasar 上下文、注册新的CLI命令、扩展 Webpack 更多的配置。",nav:[{name:"安装 API",category:"开发指南",path:"/app-extensions/development-guide/install-api",dir:"left"},{name:"卸载 API",category:"开发指南",path:"/app-extensions/development-guide/uninstall-api",dir:"right"}],toc:[{id:"api-ctx",title:"api.ctx"},{id:"api-extid",title:"api.extId"},{id:"api-prompts",title:"api.prompts"},{id:"api-resolve",title:"api.resolve"},{id:"api-appdir",title:"api.appDir"},{id:"api-compatiblewith",title:"api.compatibleWith"},{id:"api-haspackage",title:"api.hasPackage"},{id:"api-hasextension",title:"api.hasExtension"},{id:"api-getpackageversion",title:"api.getPackageVersion"},{id:"api-extendquasarconf",title:"api.extendQuasarConf"},{id:"注册引导文件和css文件",title:"注册引导文件和css文件",sub:!0},{id:"api-chainwebpack",title:"api.chainWebpack"},{id:"api-extendwebpack",title:"api.extendWebpack"},{id:"api-chainwebpackmainelectronprocess",title:"api.chainWebpackMainElectronProcess"},{id:"api-extendwebpackmainelectronprocess",title:"api.extendWebpackMainElectronProcess"},{id:"api-chainwebpackpreloadelectronprocess",title:"api.chainWebpackPreloadElectronProcess"},{id:"api-extendwebpackpreloadelectronprocess",title:"api.extendWebpackPreloadElectronProcess"},{id:"api-chainwebpackwebserver",title:"api.chainWebpackWebserver"},{id:"api-extendwebpackwebserver",title:"api.extendWebpackWebserver"},{id:"api-chainwebpackcustomsw",title:"api.chainWebpackCustomSW"},{id:"api-extendwebpackcustomsw",title:"api.extendWebpackCustomSW"},{id:"api-registercommand",title:"api.registerCommand"},{id:"api-registerdescribeapi",title:"api.registerDescribeApi"},{id:"api-getpersistentconf",title:"api.getPersistentConf"},{id:"api-setpersistentconf",title:"api.setPersistentConf"},{id:"api-mergepersistentconf",title:"api.mergePersistentConf"},{id:"api-beforedev",title:"api.beforeDev"},{id:"api-afterdev",title:"api.afterDev"},{id:"api-beforebuild",title:"api.beforeBuild"},{id:"api-afterbuild",title:"api.afterBuild"},{id:"api-onpublish",title:"api.onPublish"}],copyHeading:En.Et}}};var Dn=s(74260);const On=(0,Dn.Z)(In,[["render",Hn]]),An=On}}]);