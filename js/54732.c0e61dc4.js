"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[54732],{54732:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Ln});var e=a(83673);const o=(0,e._)("p",null,"存在许多允许轻松部署应用程序的服务。 要列出所有这些服务是不可能的，所以我们将专注于一般的部署过程和一些常见服务的具体细节。",-1),t=(0,e._)("p",null,"如果你最喜欢的部署工具不见了，请随时在GitHub上创建一个拉动请求，将其添加到列表中。",-1),c=(0,e._)("p",null,"部署Quasar SPA的第一步总是建立一个生产就绪的文件捆绑包，它摆脱了开发声明并减少了你的源代码。",-1),p=(0,e._)("p",null,"使用 Quasar CLI 的以下命令来生成这样一个构建：",-1),l=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},"$ quasar build\n")],-1),k=(0,e._)("p",null,[(0,e.Uk)("这个命令将在SPA模式下构建你的项目，并将你的生产准备包输出到一个新创建的文件夹"),(0,e._)("code",{class:"doc-token"},"/dist/spa"),(0,e.Uk)("。")],-1),r=(0,e._)("p",null,[(0,e.Uk)("为了提供你的生产文件，"),(0,e._)("em",null,"必须"),(0,e.Uk)("使用一个Web服务器，所以要通过http(s)://协议提供服务。简单地从你的浏览器中打开"),(0,e._)("code",{class:"doc-token"},"index.html"),(0,e.Uk)("文件是不行的，因为它使用的是file://协议。")],-1),u=(0,e.Uk)("常用的网络服务器有"),_=(0,e.Uk)("nginx"),i=(0,e.Uk)(" 、"),d=(0,e.Uk)("Caddy"),U=(0,e.Uk)(" 、"),g=(0,e.Uk)("Apache"),h=(0,e.Uk)(" 、"),b=(0,e.Uk)("Express"),m=(0,e.Uk)(" ；但你应该能够使用任何你想要的网络服务器。"),y=(0,e._)("p",null,[(0,e.Uk)("网络服务器不需要特别的设置(除非你在"),(0,e._)("code",{class:"doc-token"},"quasar.conf.js"),(0,e.Uk)('中用Vue Router的 "历史 "模式构建)。主要的要求是能够为目录中的静态文件提供服务，所以请查阅你的网络服务器的文档，了解如何设置静态文件服务。')],-1),f=(0,e._)("p",null,"nginx的配置示例可能是这样的：",-1),v=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("server "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    listen "),(0,e._)("span",{class:"token number"},"80"),(0,e.Uk)(" http2"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    server_name quasar"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("myapp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("com"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    root "),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("home"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("user"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("quasar"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("myapp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("com"),(0,e._)("span",{class:"token operator"},"/"),(0,e._)("span",{class:"token keyword"},"public"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    add_header "),(0,e._)("span",{class:"token constant"},"X"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Frame"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Options "),(0,e._)("span",{class:"token string"},'"SAMEORIGIN"'),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    add_header "),(0,e._)("span",{class:"token constant"},"X"),(0,e._)("span",{class:"token operator"},"-"),(0,e._)("span",{class:"token constant"},"XSS"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Protection "),(0,e._)("span",{class:"token string"},'"1; mode=block"'),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    add_header "),(0,e._)("span",{class:"token constant"},"X"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Content"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Type"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("Options "),(0,e._)("span",{class:"token string"},'"nosniff"'),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    index index"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("html"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    charset utf"),(0,e._)("span",{class:"token operator"},"-"),(0,e._)("span",{class:"token number"},"8"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    location "),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        try_files $uri $uri"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("index"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("html"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n    location "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("robots"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("txt  "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" access_log off"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" log_not_found off"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n    access_log off"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    error_log  "),(0,e._)("span",{class:"token operator"},"/"),(0,e._)("span",{class:"token keyword"},"var"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("log"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("nginx"),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("quasar"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("myapp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("com"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("error"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("log error"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n    location "),(0,e._)("span",{class:"token operator"},"~"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"/"),(0,e.Uk)("\\"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"?"),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("well"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("known"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        deny all"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),j=(0,e._)("p",null,[(0,e.Uk)("重要的是，你不允许浏览器缓存"),(0,e._)("code",{class:"doc-token"},"index.html"),(0,e.Uk)("文件。因为不然的话，这个文件或你的应用程序的更新可能会被那些从缓存中加载index.html的浏览器漏掉。")],-1),w=(0,e._)("p",null,[(0,e.Uk)("这就是为什么你必须始终确保添加"),(0,e._)("code",{class:"doc-token"},'"Cache-Control": "no-cache"'),(0,e.Uk)("到"),(0,e._)("code",{class:"doc-token"},"index.html"),(0,e.Uk)("文件的标题中。")],-1),H=(0,e._)("p",null,[(0,e.Uk)("以Google Firebase为例，你可以在"),(0,e._)("code",{class:"doc-token"},"firebase.json"),(0,e.Uk)("配置中添加以下内容：")],-1),x=(0,e._)("pre",{class:"doc-code language-json"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},'"hosting"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token property"},'"headers"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token property"},'"source"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"/**"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token property"},'"headers"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("\n          "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n            "),(0,e._)("span",{class:"token property"},'"key"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"Cache-Control"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n            "),(0,e._)("span",{class:"token property"},'"value"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"no-cache, no-store, must-revalidate"'),(0,e.Uk)("\n          "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token property"},'"source"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"**/*.@(jpg|jpeg|gif|png|svg|webp|js|css|eot|otf|ttf|ttc|woff|woff2|font.css)"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token property"},'"headers"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("\n          "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n            "),(0,e._)("span",{class:"token property"},'"key"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"Cache-Control"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n            "),(0,e._)("span",{class:"token property"},'"value"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"max-age=604800"'),(0,e.Uk)("\n          "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),C=(0,e.Uk)("使用"),S=(0,e.Uk)("Vercel"),$=(0,e.Uk)("部署你的 Quasar 应用程序真的很容易。 你所要做的就是下载"),q=(0,e.Uk)("vercel-cli"),G=(0,e.Uk)("并通过运行登录。"),P=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},"$ vercel login\n")],-1),W=(0,e._)("p",null,"然后使用 “一般部署” 部分描述的步骤，继续构建你的 Quasar 应用程序。",-1),Q=(0,e._)("p",null,[(0,e.Uk)("构建完成后，改变目录到你的部署根目录(例如："),(0,e._)("code",{class:"doc-token"},"/dist/spa"),(0,e.Uk)(")并运行。")],-1),T=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e._)("span",{class:"token comment"},"# from /dist/spa (or your distDir)"),(0,e.Uk)("\n$ vercel\n")])],-1),V=(0,e._)("p",null,"Vercel CLI现在应该显示有关你的部署的信息，如URL。就这样了。你就完成了。",-1),A=(0,e._)("p",null,"你应该考虑向你的项目添加一些额外的配置。",-1),I=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("由于Vercel希望定义_build_脚本，你可以在"),(0,e._)("code",{class:"doc-token"},"package.json"),(0,e.Uk)("中添加以下脚本。")])],-1),L=(0,e._)("pre",{class:"doc-code language-json"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,e.Uk)("  "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    ..\n    "),(0,e._)("span",{class:"token property"},'"scripts"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      ...\n      "),(0,e._)("span",{class:"token property"},'"build"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"quasar build"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token property"},'"deploy"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"vercel"'),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),R=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("由于Vercel期望构建结果在"),(0,e._)("code",{class:"doc-token"},"/public"),(0,e.Uk)("目录下，而_ Quasar _默认将其放在"),(0,e._)("code",{class:"doc-token"},"/dist/spa"),(0,e.Uk)("目录下。 考虑相应地更新"),(0,e._)("code",{class:"doc-token"},"quasar.conf.js"),(0,e.Uk)("：")])],-1),D=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("module"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function-variable function"},"exports"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"ctx"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token operator"},"..."),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token literal-property property"},"build"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token operator"},"..."),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"distDir"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(" ctx"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("mode"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("spa "),(0,e._)("span",{class:"token operator"},"?"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'public'"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"null"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),E=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("为了在部署的应用程序中支持SPA路由，考虑在你的根文件夹中添加"),(0,e._)("code",{class:"doc-token"},"vercel.json"),(0,e.Uk)("文件：")])],-1),O=(0,e._)("pre",{class:"doc-code language-json"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},'"routes"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(),(0,e._)("span",{class:"token property"},'"handle"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"filesystem"'),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(),(0,e._)("span",{class:"token property"},'"src"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"/.*"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token property"},'"dest"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"/index.html"'),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),X=(0,e._)("p",null,"不幸的是，Heroku并不支持开箱即用的静态网站。但是不用担心，我们只需要在我们的项目中添加一个HTTP服务器，这样Heroku就可以为我们的 Quasar 应用提供服务。",-1),F=(0,e.Uk)("在这个示例中，我们将使用"),M=(0,e.Uk)("Express"),K=(0,e.Uk)("来创建一个Heroku可以使用的最小服务器。"),N=(0,e._)("p",null,"首先，我们需要为我们的项目安装必要的依赖项：",-1),Z=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ "),(0,e._)("span",{class:"token function"},"yarn"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"add"),(0,e.Uk)(" express serve-static connect-history-api-fallback\n")])],-1),z=(0,e._)("p",null,[(0,e.Uk)("现在我们已经安装了所需的依赖项，我们可以添加我们的服务器。在你项目的根目录下创建一个名为"),(0,e._)("code",{class:"doc-token"},"server.js"),(0,e.Uk)("的文件。")],-1),B=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)("\n  express "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"require"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'express'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  serveStatic "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"require"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'serve-static'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  history "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"require"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'connect-history-api-fallback'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  port "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" process"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("env"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token constant"},"PORT"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"||"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"5000"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" app "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"express"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\napp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"use"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"history"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\napp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"use"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"serveStatic"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("__dirname "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'/dist/spa'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\napp"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"listen"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("port"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),J=(0,e._)("p",null,[(0,e.Uk)("Heroku假定有一组npm脚本可用，所以我们必须改变我们的"),(0,e._)("code",{class:"doc-token"},"package.json"),(0,e.Uk)("，在"),(0,e._)("code",{class:"doc-token"},"script"),(0,e.Uk)("部分添加以下内容：")],-1),Y=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token string-property property"},'"build"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"quasar build"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n"),(0,e._)("span",{class:"token string-property property"},'"start"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"node server.js"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n"),(0,e._)("span",{class:"token string-property property"},'"heroku-postbuild"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"yarn && yarn build"'),(0,e.Uk)("\n")])],-1),nn=(0,e._)("p",null,"现在是时候通过运行Heroku创建一个应用程序了:",-1),sn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},"$ heroku create\n")],-1),an=(0,e._)("p",null,"并通过以下方式部署到Heroku。",-1),en=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ "),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)(" init\n$ heroku git:remote -a "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("heroku app name"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n\n$ "),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"add"),(0,e.Uk)(),(0,e._)("span",{class:"token builtin class-name"},"."),(0,e.Uk)("\n$ "),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)(" commit -am "),(0,e._)("span",{class:"token string"},'"make it better"'),(0,e.Uk)("\n$ "),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)(" push heroku master\n")])],-1),on=(0,e._)("p",null,"对于现有的Git仓库，只需添加heroku远程：",-1),tn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ heroku git:remote -a "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("heroku app name"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n")])],-1),cn=(0,e.Uk)("Surge"),pn=(0,e.Uk)(" 是一个流行的工具，用于托管和部署静态网站。"),ln=(0,e._)("p",null,"如果你想用Surge部署你的应用程序，你首先需要安装Surge CLI工具。",-1),kn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ "),(0,e._)("span",{class:"token function"},"npm"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"install"),(0,e.Uk)(" -g surge\n")])],-1),rn=(0,e._)("p",null,"接下来，我们将使用 Quasar CLI 来构建我们的应用程序：",-1),un=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},"$ quasar build\n")],-1),_n=(0,e._)("p",null,"现在我们可以通过调用Surge来部署我们的应用程序了：",-1),dn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},"$ surge dist/spa\n")],-1),Un=(0,e._)("p",null,"现在，你的应用程序应该使用Surge成功部署。你应该能够将本指南适用于任何其他静态网站部署工具。",-1),gn=(0,e._)("p",null,[(0,e.Uk)("要将 Quasar 应用程序部署到GitHub页面，第一步是在GitHub上创建一个特殊的仓库，名为"),(0,e._)("code",{class:"doc-token"},"<用户名>.github.io"),(0,e.Uk)("。克隆这个仓库到你的本地机器上。")],-1),hn=(0,e._)("p",null,[(0,e.Uk)('接下来，你需要按照 "一般部署部分 "中的描述构建你的 Quasar 应用程序。这将产生一个'),(0,e._)("code",{class:"doc-token"},"/dist/spa"),(0,e.Uk)("目录。把这个文件夹的内容复制到你的克隆版本库中。")],-1),bn=(0,e._)("p",null,[(0,e.Uk)("最后一步是在你的仓库中添加一个提交，并推送到GitHub。一段时间后，你应该可以在"),(0,e._)("code",{class:"doc-token"},"https://<username>.github.io/"),(0,e.Uk)("访问你的 Quasar 应用程序。")],-1),mn=(0,e.Uk)("请参阅"),yn=(0,e.Uk)("GitHub页面指南"),fn=(0,e.Uk)("，深入了解如何设置自定义域名。"),vn=(0,e.Uk)("手动复制所有文件到GitHub页面仓库是一项繁琐的工作。这个步骤可以通过使用 "),jn=(0,e.Uk)("push-dir"),wn=(0,e.Uk)(" 包来实现自动化。"),Hn=(0,e._)("p",null,"首先，用以下方式安装该软件包：",-1),xn=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("$ yarn add "),(0,e._)("span",{class:"token operator"},"--"),(0,e.Uk)("dev push"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("dir\n")])],-1),Cn=(0,e._)("p",null,[(0,e.Uk)("然后在你的"),(0,e._)("code",{class:"doc-token"},"package.json"),(0,e.Uk)("中添加一个"),(0,e._)("code",{class:"doc-token"},"deploy"),(0,e.Uk)("脚本命令:")],-1),Sn=(0,e._)("pre",{class:"doc-code language-json"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,e._)("span",{class:"token property"},'"scripts"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},'"deploy"'),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"push-dir --dir=dist/spa --remote=gh-pages --branch=master"'),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),$n=(0,e._)("p",null,[(0,e.Uk)("将你的GitHub Pages仓库添加为一个名为"),(0,e._)("code",{class:"doc-token"},"gh-pages"),(0,e.Uk)("的远程仓库：")],-1),qn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ "),(0,e._)("span",{class:"token function"},"git"),(0,e.Uk)(" remote "),(0,e._)("span",{class:"token function"},"add"),(0,e.Uk)(" gh-pages git@github.com:"),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("username"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("/"),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("username"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(".github.io.git\n")])],-1),Gn=(0,e._)("p",null,"现在，你可以使用以下方法构建和部署你的应用程序:",-1),Pn=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("$ quasar build\n$ "),(0,e._)("span",{class:"token function"},"yarn"),(0,e.Uk)(" deploy\n")])],-1),Wn=(0,e._)("p",null,"这将把构建目录的内容推送到 GitHub Pages 仓库的主干分支。",-1);function Qn(n,s,a,Qn,Tn,Vn){const An=(0,e.up)("doc-link"),In=(0,e.up)("doc-page");return(0,e.wg)(),(0,e.j4)(In,{"meta-title":Qn.metaTitle,title:"部署一个SPA",nav:Qn.nav,toc:Qn.toc,"meta-desc":Qn.metaDesc},{default:(0,e.w5)((()=>[o,t,(0,e._)("h2",{id:"一般部署",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=n=>Qn.copyHeading("一般部署"))},"一般部署"),c,p,l,k,r,(0,e._)("p",null,[u,(0,e.Wm)(An,{to:"https://www.nginx.com/"},{default:(0,e.w5)((()=>[_])),_:1}),i,(0,e.Wm)(An,{to:"https://caddyserver.com/"},{default:(0,e.w5)((()=>[d])),_:1}),U,(0,e.Wm)(An,{to:"https://httpd.apache.org/"},{default:(0,e.w5)((()=>[g])),_:1}),h,(0,e.Wm)(An,{to:"https://expressjs.com/"},{default:(0,e.w5)((()=>[b])),_:1}),m]),y,f,v,(0,e._)("h2",{id:"重要的主机配置",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=n=>Qn.copyHeading("重要的主机配置"))},"重要的主机配置"),j,w,H,x,(0,e._)("h2",{id:"使用vercel进行部署",class:"doc-heading doc-h2",onClick:s[2]||(s[2]=n=>Qn.copyHeading("使用vercel进行部署"))},"使用Vercel进行部署"),(0,e._)("p",null,[C,(0,e.Wm)(An,{to:"https://vercel.com/"},{default:(0,e.w5)((()=>[S])),_:1}),$,(0,e.Wm)(An,{to:"https://vercel.com/download#now-cli"},{default:(0,e.w5)((()=>[q])),_:1}),G]),P,W,Q,T,V,(0,e._)("h3",{id:"vercel-配置提示",class:"doc-heading doc-h3",onClick:s[3]||(s[3]=n=>Qn.copyHeading("vercel-配置提示"))},"Vercel 配置提示"),A,I,L,R,D,E,O,(0,e._)("h2",{id:"使用heroku进行部署",class:"doc-heading doc-h2",onClick:s[4]||(s[4]=n=>Qn.copyHeading("使用heroku进行部署"))},"使用Heroku进行部署"),X,(0,e._)("p",null,[F,(0,e.Wm)(An,{to:"https://expressjs.com/"},{default:(0,e.w5)((()=>[M])),_:1}),K]),N,Z,z,B,J,Y,nn,sn,an,en,on,tn,(0,e._)("h2",{id:"使用-surge-进行部署",class:"doc-heading doc-h2",onClick:s[5]||(s[5]=n=>Qn.copyHeading("使用-surge-进行部署"))},"使用 Surge 进行部署"),(0,e._)("p",null,[(0,e.Wm)(An,{to:"https://surge.sh/"},{default:(0,e.w5)((()=>[cn])),_:1}),pn]),ln,kn,rn,un,_n,dn,Un,(0,e._)("h2",{id:"在github页面上进行部署",class:"doc-heading doc-h2",onClick:s[6]||(s[6]=n=>Qn.copyHeading("在github页面上进行部署"))},"在GitHub页面上进行部署"),gn,hn,bn,(0,e._)("h3",{id:"为github页面添加自定义域名",class:"doc-heading doc-h3",onClick:s[7]||(s[7]=n=>Qn.copyHeading("为github页面添加自定义域名"))},"为GitHub页面添加自定义域名"),(0,e._)("p",null,[mn,(0,e.Wm)(An,{to:"https://help.github.com/articles/using-a-custom-domain-with-github-pages/"},{default:(0,e.w5)((()=>[yn])),_:1}),fn]),(0,e._)("h3",{id:"使用push-dir自动部署到github页面",class:"doc-heading doc-h3",onClick:s[8]||(s[8]=n=>Qn.copyHeading("使用push-dir自动部署到github页面"))},"使用push-dir自动部署到GitHub页面"),(0,e._)("p",null,[vn,(0,e.Wm)(An,{to:"https://github.com/L33T-KR3W/push-dir"},{default:(0,e.w5)((()=>[jn])),_:1}),wn]),Hn,xn,Cn,Sn,$n,qn,Gn,Pn,Wn])),_:1},8,["meta-title","nav","toc","meta-desc"])}var Tn=a(17536);const Vn={name:"DocMarkdownPage",setup(){return{metaTitle:"部署一个SPA",metaDesc:"如何发布由 Quasar CLI 构建的单页应用程序。",nav:[{name:"构建命令",category:"开发 SPA",path:"/quasar-cli/developing-spa/build-commands",dir:"left"},{name:"简介",category:"开发 SSR",path:"/quasar-cli/developing-ssr/introduction",dir:"right"}],toc:[{id:"一般部署",title:"一般部署"},{id:"重要的主机配置",title:"重要的主机配置"},{id:"使用vercel进行部署",title:"使用Vercel进行部署"},{id:"vercel-配置提示",title:"Vercel 配置提示",sub:!0},{id:"使用heroku进行部署",title:"使用Heroku进行部署"},{id:"使用-surge-进行部署",title:"使用 Surge 进行部署"},{id:"在github页面上进行部署",title:"在GitHub页面上进行部署"},{id:"为github页面添加自定义域名",title:"为GitHub页面添加自定义域名",sub:!0},{id:"使用push-dir自动部署到github页面",title:"使用push-dir自动部署到GitHub页面",sub:!0}],copyHeading:Tn.Et}}};var An=a(74260);const In=(0,An.Z)(Vn,[["render",Qn]]),Ln=In}}]);