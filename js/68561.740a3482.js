"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[68561],{68561:(t,e,o)=>{o.r(e),o.d(e,{default:()=>w});var n=o(83673);const i=(0,n._)("p",null,"Quasar has a component called QBtn which is a button with a few extra useful features. For instance, it comes in two shapes: rectangle (default) and round. It also has the material ripple effect baked in (which can be disabled).",-1),s=(0,n._)("p",null,"The button component also comes with a spinner or loading effect. You would use this for times when app execution may cause a delay and you want to give the user some feedback about that delay. When used, the button will display a spinning animation as soon as the user clicks the button.",-1),a=(0,n._)("p",null,[(0,n.Uk)("When not disabled or spinning, QBtn emits a "),(0,n._)("code",{class:"doc-token"},"@click"),(0,n.Uk)(" event, as soon as it is clicked or tapped.")],-1),l=(0,n._)("p",null,[(0,n.Uk)("The default padding is “xs md”. However, you can use "),(0,n._)("code",{class:"doc-token"},"padding"),(0,n.Uk)(" prop to customize it:")],-1),d=(0,n._)("p",null,[(0,n.Uk)("Some button actions involve contacting a server, so an asynchronous response. It’s best that you inform the user about a background process taking place until the asynchronous response is ready. QBtn offers this possibility through the "),(0,n._)("code",{class:"doc-token"},"loading"),(0,n.Uk)(" prop. This property will display a QSpinner (by default) instead of the icon and/or label of the button. Custom loading content can also be used (not only text or spinners).")],-1),c=(0,n._)("p",null,[(0,n.Uk)("Should you wish, you can also display a deterministic progress within the button by using the additional "),(0,n._)("code",{class:"doc-token"},"percentage"),(0,n.Uk)(" property along with what you’ve already learned about buttons with progress:")],-1),r=(0,n.Uk)("Handling navigation "),u=(0,n._)("div",{class:"doc-note doc-note--warning"},[(0,n._)("p",{class:"doc-note__title"},"UMD usage"),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Uk)("If you will be using "),(0,n._)("code",{class:"doc-token"},"to"),(0,n.Uk)(" & "),(0,n._)("code",{class:"doc-token"},"replace"),(0,n.Uk)(" props, make sure that you also inject Vue Router in your project. Otherwise use the alternative "),(0,n._)("code",{class:"doc-token"},"href"),(0,n.Uk)(" prop.")]),(0,n._)("li",null,"Due to the above, some of the QBtn below won’t work in Codepen/jsFiddle too.")])],-1),h=(0,n._)("div",{class:"doc-note doc-note--tip"},[(0,n._)("p",{class:"doc-note__title"},"TIP"),(0,n._)("p",null,[(0,n.Uk)("Prefer the Vue Router props over "),(0,n._)("code",{class:"doc-token"},"href"),(0,n.Uk)(" when you can, because with "),(0,n._)("code",{class:"doc-token"},"href"),(0,n.Uk)(" you will trigger a window navigation instead of an in-page Vue Router navigation.")])],-1),p=(0,n._)("p",null,[(0,n.Uk)("For more convoluted use-cases, you can also directly use the native Vue "),(0,n._)("code",{class:"doc-token"},"<router-link>"),(0,n.Uk)(" component to wrap a QBtn. This also gives the opportunity to control the state according to app’s current route:")],-1),g=(0,n._)("p",null,"When you have a button to submit a form’s input to the server, like a “Save” button, more often than not you will also want to give the user the ability to submit the form with a press of the ENTER key. If you would also like to give the user feedback of the saving process being in progress, and to prevent the user repeatedly pressing the button, you would need the button to show a loading spinner and be disabled from click events. QBtn allows this behavior if configured so.",-1),m=(0,n._)("div",{class:"doc-note doc-note--warning"},[(0,n._)("p",{class:"doc-note__title"},"WARNING"),(0,n._)("p",null,[(0,n.Uk)("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),(0,n._)("code",{class:"doc-token"},"@click"),(0,n.Uk)(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])],-1);function b(t,e,o,b,k,f){const y=(0,n.up)("doc-api"),_=(0,n.up)("doc-example"),w=(0,n.up)("q-badge"),v=(0,n.up)("doc-page");return(0,n.wg)(),(0,n.j4)(v,{"meta-title":b.metaTitle,title:"Button",related:b.related,toc:b.toc,"meta-desc":b.metaDesc},{default:(0,n.w5)((()=>[i,s,a,(0,n._)("h2",{id:"qbtn-api",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=t=>b.copyHeading("qbtn-api"))},"QBtn API"),(0,n.Wm)(y,{file:"QBtn"}),(0,n._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=t=>b.copyHeading("usage"))},"Usage"),(0,n._)("h3",{id:"standard",class:"doc-heading doc-h3",onClick:e[2]||(e[2]=t=>b.copyHeading("standard"))},"Standard"),(0,n.Wm)(_,{title:"Standard buttons",file:"QBtn/Standard"}),(0,n._)("h3",{id:"custom-colors",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=t=>b.copyHeading("custom-colors"))},"Custom colors"),(0,n.Wm)(_,{title:"Custom colors",file:"QBtn/CustomColor"}),(0,n._)("h3",{id:"with-icon",class:"doc-heading doc-h3",onClick:e[4]||(e[4]=t=>b.copyHeading("with-icon"))},"With icon"),(0,n.Wm)(_,{title:"With icon",file:"QBtn/WithIcons"}),(0,n._)("h3",{id:"round",class:"doc-heading doc-h3",onClick:e[5]||(e[5]=t=>b.copyHeading("round"))},"Round"),(0,n.Wm)(_,{title:"Round buttons",file:"QBtn/Round"}),(0,n._)("h3",{id:"custom-content",class:"doc-heading doc-h3",onClick:e[6]||(e[6]=t=>b.copyHeading("custom-content"))},"Custom content"),(0,n.Wm)(_,{title:"Custom content",file:"QBtn/CustomContent"}),(0,n.Wm)(_,{title:"Truncate label",file:"QBtn/TruncateLabel"}),(0,n._)("h3",{id:"design",class:"doc-heading doc-h3",onClick:e[7]||(e[7]=t=>b.copyHeading("design"))},"Design"),(0,n.Wm)(_,{title:"Button design",file:"QBtn/ButtonDesign"}),(0,n._)("h3",{id:"alignment",class:"doc-heading doc-h3",onClick:e[8]||(e[8]=t=>b.copyHeading("alignment"))},"Alignment"),(0,n.Wm)(_,{title:"Button alignment",file:"QBtn/ButtonAlignment"}),(0,n._)("h3",{id:"size",class:"doc-heading doc-h3",onClick:e[9]||(e[9]=t=>b.copyHeading("size"))},"Size"),(0,n.Wm)(_,{title:"Button size",file:"QBtn/ButtonSize"}),(0,n._)("h3",{id:"padding",class:"doc-heading doc-h3",onClick:e[10]||(e[10]=t=>b.copyHeading("padding"))},"Padding"),l,(0,n.Wm)(_,{title:"Button padding",file:"QBtn/ButtonPadding"}),(0,n._)("h3",{id:"progress-related",class:"doc-heading doc-h3",onClick:e[11]||(e[11]=t=>b.copyHeading("progress-related"))},"Progress related"),d,(0,n.Wm)(_,{title:"Indeterminate progress",file:"QBtn/IndeterminateProgress"}),c,(0,n.Wm)(_,{title:"Deterministic progress",file:"QBtn/DeterministicProgress"}),(0,n._)("h3",{id:"custom-ripple",class:"doc-heading doc-h3",onClick:e[12]||(e[12]=t=>b.copyHeading("custom-ripple"))},"Custom ripple"),(0,n.Wm)(_,{title:"Custom ripple",file:"QBtn/CustomRipple"}),(0,n._)("h3",{id:"handling-navigation",class:"doc-heading doc-h3",onClick:e[13]||(e[13]=t=>b.copyHeading("handling-navigation"))},[r,(0,n.Wm)(w,{align:"top",color:"brand-primary",label:"updated for v2.4+"})]),u,h,(0,n.Wm)(_,{title:"Links",file:"QBtn/Links","no-edit":""}),p,(0,n.Wm)(_,{title:"Scoped slot of RouterLink",file:"QBtn/RouterLinkExample","no-edit":""}),(0,n._)("h3",{id:"other-options",class:"doc-heading doc-h3",onClick:e[14]||(e[14]=t=>b.copyHeading("other-options"))},"Other options"),(0,n.Wm)(_,{title:"Other options",file:"QBtn/OtherOptions"}),(0,n._)("h3",{id:"disable",class:"doc-heading doc-h3",onClick:e[15]||(e[15]=t=>b.copyHeading("disable"))},"Disable"),(0,n.Wm)(_,{title:"Disable",file:"QBtn/Disabled"}),(0,n._)("h3",{id:"controlling-the-button-for-form-submission",class:"doc-heading doc-h3",onClick:e[16]||(e[16]=t=>b.copyHeading("controlling-the-button-for-form-submission"))},"Controlling the button for form submission"),g,m,(0,n.Wm)(_,{title:"Form Submission",file:"QBtn/FormSubmission"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var k=o(17536);const f={name:"DocMarkdownPage",setup(){return{metaTitle:"Button",metaDesc:"The QBtn Vue component is a button with features like shaping, loading state, ripple and more.",related:[{name:"按钮组",category:"按钮",path:"/vue-components/button-group"},{name:"按钮下拉",category:"按钮",path:"/vue-components/button-dropdown"},{name:"按钮切换",category:"表单组件",path:"/vue-components/button-toggle"}],toc:[{id:"qbtn-api",title:"QBtn API"},{id:"usage",title:"Usage"},{id:"standard",title:"Standard",sub:!0},{id:"custom-colors",title:"Custom colors",sub:!0},{id:"with-icon",title:"With icon",sub:!0},{id:"round",title:"Round",sub:!0},{id:"custom-content",title:"Custom content",sub:!0},{id:"design",title:"Design",sub:!0},{id:"alignment",title:"Alignment",sub:!0},{id:"size",title:"Size",sub:!0},{id:"padding",title:"Padding",sub:!0},{id:"progress-related",title:"Progress related",sub:!0},{id:"custom-ripple",title:"Custom ripple",sub:!0},{id:"handling-navigation",title:"Handling navigation",sub:!0},{id:"other-options",title:"Other options",sub:!0},{id:"disable",title:"Disable",sub:!0},{id:"controlling-the-button-for-form-submission",title:"Controlling the button for form submission",sub:!0}],copyHeading:k.Et}}};var y=o(74260);const _=(0,y.Z)(f,[["render",b]]),w=_}}]);