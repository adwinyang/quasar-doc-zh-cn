"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[49022],{49022:(n,e,s)=>{s.r(e),s.d(e,{default:()=>N});var a=s(83673);const o=(0,a._)("p",null,"Familiarize yourself with the list of available Icon Genie CLI commands inside a Quasar project folder:",-1),t=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a.Uk)("$ icongenie\n\n  Example usage\n    $ icongenie "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("command"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("options"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)("\n\n  Help "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" a "),(0,a._)("span",{class:"token builtin class-name"},"command"),(0,a.Uk)("\n    $ icongenie "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("command"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" --help\n    $ icongenie "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("command"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" -h\n\n  Options\n    --version, -v Print Quasar Icon Genie CLI version\n\n  Commands\n    generate, g   Generate App icons "),(0,a._)("span",{class:"token operator"},"&"),(0,a.Uk)(" splash screens\n    verify, "),(0,a._)("span",{class:"token function"},"v"),(0,a.Uk)("     Verify your Quasar app's icons "),(0,a._)("span",{class:"token operator"},"&"),(0,a.Uk)("\n                    splash screens\n    profile, p    Create Icon Genie profile files\n    help, h       Display this message\n")])],-1),c=(0,a._)("p",null,"See help for any command:",-1),p=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a.Uk)("$ icongenie "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("command_name"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(" --help\n")])],-1),i=(0,a._)("p",null,[(0,a.Uk)("The "),(0,a._)("code",{class:"doc-token"},"generate"),(0,a.Uk)(" command is used for generating app icons and splash screens. It’s at the heart of Icon Genie as it does the heavy lifting.")],-1),l=(0,a._)("p",null,[(0,a.Uk)("Take a look below at usage and some examples. The most important parameter to note is "),(0,a._)("code",{class:"doc-token"},"--icon"),(0,a.Uk)(" (or "),(0,a._)("code",{class:"doc-token"},"-i"),(0,a.Uk)("), which takes a transparent PNG as input for your app’s icons and splash screens. Minimum size of the PNG is 64x64px, but it is highly recommended to go above 1024x1024px.")],-1),r=(0,a._)("p",null,[(0,a.Uk)("For splash screens, you may want to combine it with the "),(0,a._)("code",{class:"doc-token"},"--background"),(0,a.Uk)(" (or "),(0,a._)("code",{class:"doc-token"},"-b"),(0,a.Uk)(") if you want your icon to be placed on top of a background.")],-1),k=(0,a.Uk)("You may also want to use the "),u=(0,a._)("code",{class:"doc-token"},"--profile",-1),_=(0,a.Uk)(" (or "),d=(0,a._)("code",{class:"doc-token"},"-p",-1),U=(0,a.Uk)(") parameter, which can run one or more Icon Genie "),f=(0,a.Uk)("profile files"),h=(0,a.Uk)("."),m=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a.Uk)("$ icongenie generate -h\n\n  Description\n    Generate App icons "),(0,a._)("span",{class:"token operator"},"&"),(0,a.Uk)(" splash screens\n\n  Usage\n    $ icongenie generate "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("options"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n\n    "),(0,a._)("span",{class:"token comment"},"# generate icons for all installed Quasar modes"),(0,a.Uk)("\n    $ icongenie generate -i /path/to/icon.png\n    $ icongenie g -i /path/to/icon.png\n\n    "),(0,a._)("span",{class:"token comment"},"# generate for (as example) PWA mode only"),(0,a.Uk)("\n    $ icongenie generate -m pwa --icon /path/to/icon.png\n\n    "),(0,a._)("span",{class:"token comment"},"# generate for (as example) Cordova & Capacitor mode only"),(0,a.Uk)("\n    $ icongenie g -m cordova,capacitor -i\n         /path/to/icon.png -b /path/to/background.png\n\n    "),(0,a._)("span",{class:"token comment"},"# generate by using a profile file"),(0,a.Uk)("\n    $ icongenie generate -p ./icongenie-profile.json\n\n    "),(0,a._)("span",{class:"token comment"},"# generate by using batch of profile files"),(0,a.Uk)("\n    $ icongenie generate -p ./folder-containing-profile-files\n\n  Options\n    --icon, -i            Required"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Path to "),(0,a._)("span",{class:"token builtin class-name"},"source"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" icon"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" must be:\n                            - a .png "),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)("\n                            - min resolution: 64x64 px "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("the higher the better"),(0,a._)("span",{class:"token operator"},"!"),(0,a._)("span",{class:"token operator"},"!"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                            - with transparency\n                          Best results are with a square image "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("height "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(" width"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                          Image will be trimmed automatically\n                            "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("also see "),(0,a._)("span",{class:"token string"},'"skip-trim"'),(0,a.Uk)(" and "),(0,a._)("span",{class:"token string"},'"padding"'),(0,a.Uk)(" param"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                          Path can be absolute, or relative to the root of the\n                            Quasar project folder\n                          Recommended min size: 1024x1024 px\n\n    --background, -b      Path to optional background "),(0,a._)("span",{class:"token builtin class-name"},"source"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("for splash screens"),(0,a._)("span",{class:"token punctuation"},")"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          must be:\n                            - a .png "),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)("\n                            - min resolution: 128x128 px "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("the higher the better"),(0,a._)("span",{class:"token operator"},"!"),(0,a._)("span",{class:"token operator"},"!"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                            - transparency is optional "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("but recommended "),(0,a._)("span",{class:"token keyword"},"if"),(0,a.Uk)(" you\n                              combine with the splashscreen-color param"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                          Path can be absolute, or relative to the root of the\n                            Quasar project folder\n                          Recommended min size: 1024x1024 px\n\n    --mode, -m            For "),(0,a._)("span",{class:"token function"},"which"),(0,a.Uk)(" Quasar mode"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("s"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" to generate the assets"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Default: all\n                            "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("all"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("spa"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("pwa"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("ssr"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("bex"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("cordova"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("capacitor"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("electron"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n                          Multiple can be specified, separated by "),(0,a._)("span",{class:"token string"},'","'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)("\n                            spa,cordova\n\n    --filter, -f          Filter the available generators"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" when used, it can\n                          generate only one "),(0,a._)("span",{class:"token builtin class-name"},"type"),(0,a.Uk)(" of asset instead of all\n                            "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("png"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("ico"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("icns"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("splashscreen"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("svg"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n\n    --quality             Quality of the files "),(0,a._)("span",{class:"token punctuation"},"["),(0,a._)("span",{class:"token number"},"1"),(0,a.Uk)(" - "),(0,a._)("span",{class:"token number"},"12"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("default: "),(0,a._)("span",{class:"token number"},"5"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                            - higher quality --"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" bigger filesize "),(0,a._)("span",{class:"token operator"},"&"),(0,a.Uk)(" slower to create\n                            - lower quality  --"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" smaller filesize "),(0,a._)("span",{class:"token operator"},"&"),(0,a.Uk)(" faster to create\n\n    --skip-trim           Do not trim the icon "),(0,a._)("span",{class:"token builtin class-name"},"source"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)("\n\n    --padding             Apply fixed padding to the icon after trimming it"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Syntax: "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("horiz: number"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(","),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("vert: number"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)("\n                          Default: "),(0,a._)("span",{class:"token number"},"0,0"),(0,a.Uk)("\n                          Example: "),(0,a._)("span",{class:"token string"},'"--padding 10,5"'),(0,a.Uk)(" means apply 10px padding to "),(0,a._)("span",{class:"token function"},"top"),(0,a.Uk)("\n                            10px to bottom, 5px to left side and 5px to rightside\n\n    --theme-color         Theme color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" all generators requiring a color"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          It gets overridden "),(0,a._)("span",{class:"token keyword"},"if"),(0,a.Uk)(" any generator color is also specified"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --svg-color           Color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the generated monochrome svgs\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": 1976D2\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --png-color           Background color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the png generator, when\n                          "),(0,a._)("span",{class:"token string"},'"background: true"'),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" the asset definition "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("like "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)("\n                          the cordova/capacitor iOS icons"),(0,a._)("span",{class:"token punctuation"},")"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": fff\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --splashscreen-color  Background color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the splashscreen generator"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": fff\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --splashscreen-icon-ratio  Ratio of icon size "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" respect to the width or height\n                               "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("whichever is smaller"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" of the resulting splashscreen"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                               Represents percentages"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" Valid values: "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)(" - "),(0,a._)("span",{class:"token number"},"100"),(0,a.Uk)("\n                               If "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"then"),(0,a.Uk)(" it doesn't "),(0,a._)("span",{class:"token function"},"add"),(0,a.Uk)(" the icon of "),(0,a._)("span",{class:"token function"},"top"),(0,a.Uk)(" of background\n                               Default: "),(0,a._)("span",{class:"token number"},"40"),(0,a.Uk)("\n\n    --profile, -p         Use JSON profile file"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("s"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(":\n                            - path to folder "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("absolute or relative to current folder"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                              that contains JSON profile files "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("icongenie-*.json"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                            - path to a single *.json profile "),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("absolute or relative\n                              to current folder"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                          Structure of a JSON profile file:\n                            "),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n                              "),(0,a._)("span",{class:"token string"},'"params"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n                                "),(0,a._)("span",{class:"token string"},'"include"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},".."),(0,a.Uk)(". "),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(", /* optional */\n                                "),(0,a._)("span",{class:"token punctuation"},".."),(0,a.Uk)(".\n                              "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)(",\n                              "),(0,a._)("span",{class:"token string"},'"assets"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)(" /* list of custom assets */ "),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n                            "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n\n    --help, -h            Displays this message\n")])],-1),g=(0,a._)("p",null,[(0,a.Uk)("The "),(0,a._)("code",{class:"doc-token"},"verify"),(0,a.Uk)(" command confirms that you have all required app icons and splash screens in the right place and that each file has the correct resolution in pixels.")],-1),y=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a.Uk)("$ icongenie -h\n\n  Description\n    Verifies your Quasar App's icons and splash screens\n    "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" all installed modes.\n\n  Usage\n    $ icongenie verify "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("options"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n\n    "),(0,a._)("span",{class:"token comment"},"# verify all Quasar modes"),(0,a.Uk)("\n    $ icongenie verify\n\n    "),(0,a._)("span",{class:"token comment"},"# verify specific mode"),(0,a.Uk)("\n    $ icongenie verify -m spa\n\n    "),(0,a._)("span",{class:"token comment"},"# verify with specific filter"),(0,a.Uk)("\n    $ icongenie verify -f ico\n\n    "),(0,a._)("span",{class:"token comment"},"# verify by using a profile file"),(0,a.Uk)("\n    $ icongenie verify -p ./icongenie-profile.json\n\n    "),(0,a._)("span",{class:"token comment"},"# verify by using batch of profile files"),(0,a.Uk)("\n    $ icongenie verify -p ./folder-containing-profile-files\n\n  Options\n    --mode, -m      For "),(0,a._)("span",{class:"token function"},"which"),(0,a.Uk)(" Quasar mode"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("s"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" to verify the assets"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                    Default: all\n                      "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("all"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("spa"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("pwa"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("ssr"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("bex"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("cordova"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("capacitor"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("electron"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n                    Multiple can be specified, separated by "),(0,a._)("span",{class:"token string"},'","'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)("\n                      spa,cordova,capacitor\n\n    --filter, -f    Filter the available generators"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" when used, it verifies\n                    only one "),(0,a._)("span",{class:"token builtin class-name"},"type"),(0,a.Uk)(" of asset instead of all\n                      "),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("png"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("ico"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("icns"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("splashscreen"),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("svg"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n\n    --profile       Use JSON profile file"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("s"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" to extract the asset list to verify:\n                      - path to folder "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("absolute or relative to current folder"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                        that contains JSON profile files "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("icongenie-*.json"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                      - path to a single *.json profile "),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("absolute or relative\n                        to current folder"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n                    Structure of a JSON profile file:\n                      "),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n                        "),(0,a._)("span",{class:"token string"},'"params"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n                          "),(0,a._)("span",{class:"token string"},'"include"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},".."),(0,a.Uk)(". "),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(", /* optional */\n                          "),(0,a._)("span",{class:"token punctuation"},".."),(0,a.Uk)(".\n                        "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)(",\n                        "),(0,a._)("span",{class:"token string"},'"assets"'),(0,a._)("span",{class:"token builtin class-name"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)(" /* list of custom assets */ "),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n                      "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n\n    --help, -h      Displays this message\n")])],-1),b=(0,a._)("p",null,[(0,a.Uk)("Icon Genie also supports profile files. These files are in JSON format and tell Icon Genie which images to generate and how to generate them. The "),(0,a._)("code",{class:"doc-token"},"profile"),(0,a.Uk)(" command is a helper to scaffold these profiles. They are very useful for automation, if needed.")],-1),w=(0,a._)("p",null,"The generic form of a JSON profile file is:",-1),x=(0,a._)("pre",{class:"doc-code language-json"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-json"},[(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token property"},'"params"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token property"},'"assets"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n")])],-1),v=(0,a.Uk)("You can also generate multiple profile files (with different params/settings). For more information please head on to the "),T=(0,a.Uk)("Profile files"),D=(0,a.Uk)(" page."),I=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a.Uk)("$ icongenie profile -h\n\n  Description\n    Helper "),(0,a._)("span",{class:"token builtin class-name"},"command"),(0,a.Uk)(" to easily bootstrap Icon Genie profile files.\n\n  Usage\n    $ icongenie profile -o "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("filename"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a.Uk)("options"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n\n    "),(0,a._)("span",{class:"token comment"},"# supplying params list"),(0,a.Uk)("\n    $ icongenie profile -o "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("filename"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" --include pwa,spa --quality "),(0,a._)("span",{class:"token number"},"7"),(0,a.Uk)("\n\n    "),(0,a._)("span",{class:"token comment"},"# supplying assets based on Icon Genie's internal list"),(0,a.Uk)("\n    $ icongenie profile -o "),(0,a._)("span",{class:"token operator"},"<"),(0,a.Uk)("filename"),(0,a._)("span",{class:"token operator"},">"),(0,a.Uk)(" --assets spa,bex\n\n  Options\n    --output, -o          Name of the new Icon Genie profile "),(0,a._)("span",{class:"token function"},"file"),(0,a.Uk)("\n\n    --assets, -a          Prefill the assets Array with Icon Genie"),(0,a._)("span",{class:"token string"},'\'s\n                          internal list, based on the modes that you indicate;\n                            [all|spa|pwa|ssr|bex|cordova|capacitor|electron]\n                          Multiple can be specified, separated by ",":\n                            spa,cordova\n\n    --icon, -i            Path to source file for icons; must be:\n                            - a .png file\n                            - min resolution: 64x64 px (the higher the better!!)\n                            - with transparency\n                          Best results are with a square image (height = width)\n                          Image will be trimmed automatically\n                            (also see "skip-trim" and "padding" param)\n                          Path can be absolute, or relative to the root of the\n                            Quasar project folder\n                          Recommended min size: 1024x1024 px\n\n    --background, -b      Path to optional background source file (for splash screens);\n                          must be:\n                            - a .png file\n                            - min resolution: 128x128 px (the higher the better!!)\n                            - transparency is optional (but recommended if you\n                              combine with the splashscreen-color param)\n                          Path can be absolute, or relative to the root of the\n                            Quasar project folder\n                          Recommended min size: 1024x1024 px\n\n    --include             Prefill the params.include property;\n                            [all|spa|pwa|ssr|bex|cordova|capacitor|electron]\n                          Multiple can be specified, separated by ",":\n                            spa,cordova\n\n    --filter, -f          Prefill the params.filter property;\n                            [png|ico|icns|splashscreen|svg]\n\n    --quality             Prefill in the params.quality property;\n                          Quality of the files [1 - 12] (default: 5)\n                            - higher quality --\x3e bigger filesize & slower to create\n                            - lower quality  --\x3e smaller filesize & faster to create\n\n    --skip-trim           Do not trim the icon source file\n\n    --padding             Apply fixed padding to the icon after trimming it;\n                          Syntax: <horiz: number>,<vert: number>\n                          Default: 0,0\n                          Example: "--padding 10,5" means apply 10px padding to top\n                            10px to bottom, 5px to left side and 5px to rightside\n\n    --theme-color         Prefill the params.themeColor property;\n                          Theme color to use for all generators requiring a color;\n                          It gets overridden if any generator color is also specified;\n                          The color must be in hex format (NOT hexa) without the leading\n                          \''),(0,a._)("span",{class:"token comment"},"#' character. Transparency not allowed."),(0,a.Uk)("\n                          Examples: 1976D2, eee\n\n    --svg-color           Prefill the params.svgColor property"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the generated monochrome svgs\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": 1976D2\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --png-color           Prefill the params.pngColor property"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Background color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the png generator, when\n                          "),(0,a._)("span",{class:"token string"},'"background: true"'),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" the asset definition "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("like "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)("\n                          the Cordova/Capacitor iOS icons"),(0,a._)("span",{class:"token punctuation"},")"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": fff\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --splashscreen-color  Prefill the params.splashscreenColor property"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Background color to use "),(0,a._)("span",{class:"token keyword"},"for"),(0,a.Uk)(" the splashscreen generator"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                          Default "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("if no theme-color is specified"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(": fff\n                          The color must be "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" hex "),(0,a._)("span",{class:"token function"},"format"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("NOT hexa"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" without the leading\n                          "),(0,a._)("span",{class:"token string"},"'#'"),(0,a.Uk)(" character. Transparency not allowed.\n                          Examples: 1976D2, eee\n\n    --splashscreen-icon-ratio  Prefill the params.splashscreenIconRatio property"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                               Ratio of icon size "),(0,a._)("span",{class:"token keyword"},"in"),(0,a.Uk)(" respect to the width or height\n                               "),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("whichever is smaller"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(" of the resulting splashscreen"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)("\n                               Represents percentages"),(0,a._)("span",{class:"token punctuation"},";"),(0,a.Uk)(" Valid values: "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)(" - "),(0,a._)("span",{class:"token number"},"100"),(0,a.Uk)("\n                               If "),(0,a._)("span",{class:"token number"},"0"),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"then"),(0,a.Uk)(" it doesn't "),(0,a._)("span",{class:"token function"},"add"),(0,a.Uk)(" the icon of "),(0,a._)("span",{class:"token function"},"top"),(0,a.Uk)(" of background\n                               Default: "),(0,a._)("span",{class:"token number"},"40"),(0,a.Uk)("\n")])],-1);function C(n,e,s,C,P,$){const O=(0,a.up)("doc-link"),G=(0,a.up)("doc-page");return(0,a.wg)(),(0,a.j4)(G,{"meta-title":C.metaTitle,title:"Icon Genie CLI Command List","meta-desc":C.metaDesc},{default:(0,a.w5)((()=>[o,t,c,p,(0,a._)("h2",{id:"generate",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=n=>C.copyHeading("generate"))},"Generate"),i,l,r,(0,a._)("p",null,[k,u,_,d,U,(0,a.Wm)(O,{to:"/icongenie/profile-files"},{default:(0,a.w5)((()=>[f])),_:1}),h]),m,(0,a._)("h2",{id:"verify",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=n=>C.copyHeading("verify"))},"Verify"),g,y,(0,a._)("h2",{id:"profile",class:"doc-heading doc-h2",onClick:e[2]||(e[2]=n=>C.copyHeading("profile"))},"Profile"),b,w,x,(0,a._)("p",null,[v,(0,a.Wm)(O,{to:"/icongenie/profile-files"},{default:(0,a.w5)((()=>[T])),_:1}),D]),I])),_:1},8,["meta-title","meta-desc"])}var P=s(17536);const $={name:"DocMarkdownPage",setup(){return{metaTitle:"Icon Genie CLI Command List",metaDesc:"Command list for Icon Genie CLI.",copyHeading:P.Et}}};var O=s(74260);const G=(0,O.Z)($,[["render",C]]),N=G}}]);