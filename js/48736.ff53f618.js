"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[48736],{48736:(e,s,t)=>{t.r(s),t.d(s,{default:()=>W});var o=t(83673);const n=(0,o._)("p",null,[(0,o.Uk)("When deploying as a SPA or PWA, the distributables folder that gets generated by Quasar CLI can be served by a static webserver. However, this not the case with a SSR (Server-side Render) build. Your distributables, in this case, contain your production webserver too – which can be tweaked from "),(0,o._)("code",{class:"doc-token"},"/src-ssr"),(0,o.Uk)(".")],-1),a=(0,o.Uk)("By default, the SSR distributables use "),r=(0,o.Uk)("Express"),l=(0,o.Uk)(", but you can replace it with your webserver of choice."),i=(0,o.Uk)("Serverless "),d=(0,o.Uk)("If you are deploying to a Serverless service, then please read about "),c=(0,o.Uk)("SSR Production Export"),p=(0,o.Uk)(" on how to prepare for it."),u=(0,o._)("p",null,[(0,o.Uk)("After building your app on SSR mode ("),(0,o._)("code",{class:"doc-token"},"$ quasar build -m ssr"),(0,o.Uk)(") the folder that gets generated contains a standalone webserver tweaked for serving with SSR.")],-1),k=(0,o._)("p",null,[(0,o.Uk)("You’ll notice that it contains a "),(0,o._)("code",{class:"doc-token"},"package.json"),(0,o.Uk)(" file of its own. It has an npm script defined, called “start”:")],-1),h=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token string-property property"},'"scripts"'),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token string-property property"},'"start"'),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},'"node index.js"'),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),_=(0,o._)("p",null,[(0,o.Uk)("So what you need to do when deploying is to copy this distributables folder on your server, yarn/npm install the dependencies inside it, then run "),(0,o._)("code",{class:"doc-token"},"$ yarn start"),(0,o.Uk)(". This boots up the webserver and starts listening for connections.")],-1),g=(0,o._)("div",{class:"doc-note doc-note--tip"},[(0,o._)("p",{class:"doc-note__title"},"TIP"),(0,o._)("p",null,[(0,o.Uk)("The distributables folder generated after building your app is standalone. It does NOT require the rest of your project folder to work and it does NOT depend on "),(0,o._)("code",{class:"doc-token"},"@quasar/cli"),(0,o.Uk)(" being installed.")])],-1),y=(0,o.Uk)("By default, the webserver runs on only one of the available server’s cores. What you could do is make it use all cores. There is a solution for this: "),b=(0,o.Uk)("PM2"),f=(0,o.Uk)("."),U=(0,o._)("p",null,"After installing PM2 on your server, your npm start script can look like this instead:",-1),v=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token string-property property"},'"scripts"'),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token string-property property"},'"start"'),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},'"pm2 start index.js"'),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),w=(0,o.Uk)("You can use "),m=(0,o.Uk)("Cleavr"),S=(0,o.Uk)(" to deploy Quasar SSR apps to several popular VPS providers. Cleavr will automatically set up PM2 with cluster mode enabled for your app."),j=(0,o._)("p",null,[(0,o.Uk)("Add a new "),(0,o._)("strong",null,"NodeJS SSR"),(0,o.Uk)(" site to Cleavr and then configure the web app settings with the following:")],-1),C=(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("strong",null,"Entry point:"),(0,o.Uk)(" index.js")]),(0,o._)("li",null,[(0,o._)("strong",null,"Build command:"),(0,o.Uk)(" npx quasar build --mode ssr")]),(0,o._)("li",null,[(0,o._)("strong",null,"Artifact path:"),(0,o.Uk)(" dist/ssr")])],-1);function T(e,s,t,T,P,R){const q=(0,o.up)("doc-link"),x=(0,o.up)("q-badge"),W=(0,o.up)("doc-page");return(0,o.wg)(),(0,o.j4)(W,{"meta-title":T.metaTitle,title:"Deploying SSR","meta-desc":T.metaDesc},{default:(0,o.w5)((()=>[n,(0,o._)("p",null,[a,(0,o.Wm)(q,{to:"https://expressjs.com/"},{default:(0,o.w5)((()=>[r])),_:1}),l]),(0,o._)("h2",{id:"serverless",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=e=>T.copyHeading("serverless"))},[i,(0,o.Wm)(x,{align:"top",color:"brand-primary",label:"@quasar/app v3.2+"})]),(0,o._)("p",null,[d,(0,o.Wm)(q,{to:"/quasar-cli/developing-ssr/ssr-production-export"},{default:(0,o.w5)((()=>[c])),_:1}),p]),(0,o._)("h2",{id:"the-distributables-folder",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=e=>T.copyHeading("the-distributables-folder"))},"The Distributables Folder"),u,k,h,_,g,(0,o._)("h2",{id:"enhancing-performance",class:"doc-heading doc-h2",onClick:s[2]||(s[2]=e=>T.copyHeading("enhancing-performance"))},"Enhancing Performance"),(0,o._)("p",null,[y,(0,o.Wm)(q,{to:"http://pm2.keymetrics.io/"},{default:(0,o.w5)((()=>[b])),_:1}),f]),U,v,(0,o._)("h2",{id:"deploying-with-cleavr",class:"doc-heading doc-h2",onClick:s[3]||(s[3]=e=>T.copyHeading("deploying-with-cleavr"))},"Deploying with Cleavr"),(0,o._)("p",null,[w,(0,o.Wm)(q,{to:"https://cleavr.io"},{default:(0,o.w5)((()=>[m])),_:1}),S]),j,C])),_:1},8,["meta-title","meta-desc"])}var P=t(17536);const R={name:"DocMarkdownPage",setup(){return{metaTitle:"Deploying SSR",metaDesc:"How to publish a Quasar server-side rendered app.",copyHeading:P.Et}}};var q=t(74260);const x=(0,q.Z)(R,[["render",T]]),W=x}}]);