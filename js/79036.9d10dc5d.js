"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[79036],{79036:(e,a,l)=>{l.r(a),l.d(a,{default:()=>h});var c=l(83673);const o=(0,c._)("p",null,"QPageScroller 组件有助于将它包裹的 DOM 元素/组件放置到 QPage 内容区域内的静态位置，无论用户在哪里滚动。",-1),t=(0,c._)("p",null,"这样做的最大好处是，由该组件包裹的元素永远不会与布局页眉、页脚或抽屉重叠，即使这些元素没有配置为固定的。在后一种情况下，位置将被偏移，以便不会发生重叠。 例如，尝试使用非固定页脚。当用户到达屏幕底部并且页脚进入视图时，组件将向上移动，因此它不会与页脚重叠。",-1),r=(0,c._)("p",null,[(0,c.Uk)("本质上，QPageScroller 与 QPageSticky 非常相似。 QPageSticky 组件始终可见，而 QPageScroller 组件仅在达到 "),(0,c._)("code",{class:"doc-token"},"scroll-offset"),(0,c.Uk)("(属性)后才会出现。一旦可见，用户可以点击它通过"),(0,c._)("code",{class:"doc-token"},"duration"),(0,c.Uk)("属性快速返回页面顶部。")],-1),d=(0,c._)("p",null,[(0,c.Uk)("<doc-api file="),(0,c._)("code",{class:"doc-token"},"QPageScroller"),(0,c.Uk)("/>")],-1),i=(0,c._)("div",{class:"doc-note doc-note--tip"},[(0,c._)("p",{class:"doc-note__title"},"TIP"),(0,c._)("p",null,"由于 QPageScroller 需要一个布局并且 QLayout 默认管理整个窗口，因此出于演示目的，我们将使用容器化的 QLayout。但请记住，您绝不需要为 QPageScroller 使用容器化的 QLayouts。")],-1),n=(0,c._)("div",{class:"doc-note doc-note--warning"},[(0,c._)("p",{class:"doc-note__title"},"WARNING"),(0,c._)("ul",null,[(0,c._)("li",null,"为了使 QPageScroller 能正常工作，必须将其放在 QLayout 组件中。"),(0,c._)("li",null,"QPageScroller 必须是其父级中的最后一个子元素，因此它可以显示在其他内容之上")])],-1);function s(e,a,l,s,g,p){const u=(0,c.up)("doc-example"),_=(0,c.up)("doc-page");return(0,c.wg)(),(0,c.j4)(_,{"meta-title":s.metaTitle,title:"QPageScroller 布局",related:s.related,nav:s.nav,toc:s.toc,"meta-desc":s.metaDesc},{default:(0,c.w5)((()=>[o,t,r,(0,c._)("h2",{id:"qpagescroller-api",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=e=>s.copyHeading("qpagescroller-api"))},"QPageScroller API"),d,(0,c._)("h2",{id:"用法",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=e=>s.copyHeading("用法"))},"用法"),i,n,(0,c._)("h3",{id:"基础",class:"doc-heading doc-h3",onClick:a[2]||(a[2]=e=>s.copyHeading("基础"))},"基础"),(0,c.Wm)(u,{title:"Basic",file:"QPageScroller/Basic"}),(0,c._)("h3",{id:"扩展",class:"doc-heading doc-h3",onClick:a[3]||(a[3]=e=>s.copyHeading("扩展"))},"扩展"),(0,c.Wm)(u,{title:"Expanded",file:"QPageScroller/Expanded"}),(0,c._)("h3",{id:"反向",class:"doc-heading doc-h3",onClick:a[4]||(a[4]=e=>s.copyHeading("反向"))},"反向"),(0,c.Wm)(u,{title:"Reverse",file:"QPageScroller/Reverse"})])),_:1},8,["meta-title","related","nav","toc","meta-desc"])}var g=l(17536);const p={name:"DocMarkdownPage",setup(){return{metaTitle:"QPageScroller 布局",metaDesc:"如何使用 QPageScroller 组件。 放置用户滚动页面后将出现在屏幕上的组件。",related:[{name:"布局",category:"布局和网格",path:"/layout/layout"},{name:"布局页面",category:"布局和网格",path:"/layout/page"}],nav:[{name:"页面粘性",category:"布局和网格",path:"/layout/page-sticky",dir:"left"},{name:"Ajax 状态栏",category:"Vue 组件",path:"/vue-components/ajax-bar",dir:"right"}],toc:[{id:"qpagescroller-api",title:"QPageScroller API"},{id:"用法",title:"用法"},{id:"基础",title:"基础",sub:!0},{id:"扩展",title:"扩展",sub:!0},{id:"反向",title:"反向",sub:!0}],copyHeading:g.Et}}};var u=l(74260);const _=(0,u.Z)(p,[["render",s]]),h=_}}]);