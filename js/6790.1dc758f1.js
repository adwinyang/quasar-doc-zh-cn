"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[6790],{6790:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Pn});var t=a(83673);const e=(0,t._)("p",null,"Quasar provides a set of useful functions to manipulate JS Date easily in most use cases, without the high additional cost of integrating dedicated libraries like Momentjs.",-1),o=(0,t.Uk)("Most Quasar date functions take as parameter either a Unix timestamp or a String representing a date which needs to be parsable by the native JS "),l=(0,t.Uk)("Date constructor"),c=(0,t.Uk)(". Some examples: "),k=(0,t._)("code",{class:"doc-token"},"1497159857411",-1),p=(0,t.Uk)(", "),u=(0,t._)("code",{class:"doc-token"},"Sun Jun 11 2017 08:44:42 GMT+0300",-1),_=(0,t.Uk)(", "),r=(0,t._)("code",{class:"doc-token"},"2017-06-16",-1),i=(0,t.Uk)("."),d=(0,t._)("p",null,"Returned values are all JS Dates.",-1),U=(0,t._)("p",null,"Get familiar with JS native Date class, which is very powerful, and remember that you don’t need solutions like Momentjs which add hundreds of minified KB to your bundle.",-1),m=(0,t._)("div",{class:"doc-note doc-note--tip"},[(0,t._)("p",{class:"doc-note__title"},"TIP"),(0,t._)("p",null,"Quasar date utils includes tree shaking, except for the UMD version.")],-1),g=(0,t._)("p",null,[(0,t.Uk)("You will notice all examples import "),(0,t._)("code",{class:"doc-token"},"date"),(0,t.Uk)(" Object from Quasar. However, if you need only one method from it, then you can use ES6 destructuring to help Tree Shaking embed only that method and not all of "),(0,t._)("code",{class:"doc-token"},"date"),(0,t.Uk)(".")],-1),y=(0,t._)("p",null,[(0,t.Uk)("Example with "),(0,t._)("code",{class:"doc-token"},"addToDate()"),(0,t.Uk)(":")],-1),w=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token comment"},"// we import all of `date`"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// destructuring to keep only what is needed"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" addToDate "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"addToDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"days"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"7"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"months"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),h={class:"doc-note doc-note--tip"},f=(0,t._)("p",{class:"doc-note__title"},"TIP",-1),b=(0,t.Uk)("For usage with the UMD build see "),D=(0,t.Uk)("here"),j=(0,t.Uk)("."),M=(0,t._)("p",null,"It takes a string of tokens and replaces them with their corresponding date values:",-1),T=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" timeStamp "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"now"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" formattedString "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"formatDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("timeStamp"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'YYYY-MM-DDTHH:mm:ss.SSSZ'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),S=(0,t._)("p",null,"For i18n, you can use a third parameter:",-1),x=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" formattedString "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"formatDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("timeStamp"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'MMMM - dddd'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"days"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Duminica'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Luni'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of days - remember starting with Sunday */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"daysShort"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Dum'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Lun'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of days - remember starting with Sunday */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"months"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Ianuarie'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Februarie'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of months */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"monthsShort"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Ian'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Feb'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of months */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),v=(0,t._)("p",null,"Available format tokens:",-1),Y=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Unit"),(0,t._)("th",{class:"text-left"},"Formats available")])],-1),q=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,"Year"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"YY"),(0,t.Uk)(": 70 71 … 29 30")]),(0,t._)("li",null,[(0,t._)("strong",null,"YYYY"),(0,t.Uk)(": 1970 1971 … 2029 2030")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Month"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"M"),(0,t.Uk)(": 1 2 … 11 12")]),(0,t._)("li",null,[(0,t._)("strong",null,"MM"),(0,t.Uk)(": 01 02 … 11 12")]),(0,t._)("li",null,[(0,t._)("strong",null,"MMM"),(0,t.Uk)(": Jan Feb … Nov Dec")]),(0,t._)("li",null,[(0,t._)("strong",null,"MMMM"),(0,t.Uk)(": January February … November December")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Quarter"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"Q"),(0,t.Uk)(": Quarter number 1 2 3 4")]),(0,t._)("li",null,[(0,t._)("strong",null,"Qo"),(0,t.Uk)(": Quarter number 1st 2nd 3rd 4th")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Day of Month"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"D"),(0,t.Uk)(": 1 2 … 30 31")]),(0,t._)("li",null,[(0,t._)("strong",null,"Do"),(0,t.Uk)(": 1st 2nd … 30th 31st")]),(0,t._)("li",null,[(0,t._)("strong",null,"DD"),(0,t.Uk)(": 01 02 … 30 31")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Day of Year"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"DDD"),(0,t.Uk)(": 1 2 … 364 365")]),(0,t._)("li",null,[(0,t._)("strong",null,"DDDD"),(0,t.Uk)(": 001 002 … 364 365")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Day of Week"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"d"),(0,t.Uk)(": 0 1 … 5 6")]),(0,t._)("li",null,[(0,t._)("strong",null,"dd"),(0,t.Uk)(": Su Mo … Fr Sa")]),(0,t._)("li",null,[(0,t._)("strong",null,"ddd"),(0,t.Uk)(": Sun Mon … Fri Sat")]),(0,t._)("li",null,[(0,t._)("strong",null,"dddd"),(0,t.Uk)(": Sunday Monday … Friday Saturday")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Day of Week (ISO)"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"E"),(0,t.Uk)(": 1 2 … 6 7")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Week of Year"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"w"),(0,t.Uk)(": 1 2 … 52 53")]),(0,t._)("li",null,[(0,t._)("strong",null,"ww"),(0,t.Uk)(": 01 02 … 52 53")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Hour"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"H"),(0,t.Uk)(": 0 1 … 22 23")]),(0,t._)("li",null,[(0,t._)("strong",null,"HH"),(0,t.Uk)(": 00 01 … 22 23")]),(0,t._)("li",null,[(0,t._)("strong",null,"h"),(0,t.Uk)(": 0 … 11 12")]),(0,t._)("li",null,[(0,t._)("strong",null,"hh"),(0,t.Uk)(": 01 02 … 11 12")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Minute"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"m"),(0,t.Uk)(": 0 1 … 58 59")]),(0,t._)("li",null,[(0,t._)("strong",null,"mm"),(0,t.Uk)(": 00 01 … 58 59")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Second"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"s"),(0,t.Uk)(": 0 1 … 58 59")]),(0,t._)("li",null,[(0,t._)("strong",null,"ss"),(0,t.Uk)(": 00 01 … 58 59")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Fractional Second"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"S"),(0,t.Uk)(": 0 1 … 8 9")]),(0,t._)("li",null,[(0,t._)("strong",null,"SS"),(0,t.Uk)(": 00 01 … 98 99")]),(0,t._)("li",null,[(0,t._)("strong",null,"SSS"),(0,t.Uk)(": 000 001 … 998 999")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Timezone offset"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"Z"),(0,t.Uk)(": -07:00 -06:00 … +06:00 +07:00")]),(0,t._)("li",null,[(0,t._)("strong",null,"ZZ"),(0,t.Uk)(": -0700 -0600 … +0600 +0700")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"AM/PM"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"A"),(0,t.Uk)(": AM, PM")]),(0,t._)("li",null,[(0,t._)("strong",null,"a"),(0,t.Uk)(": am, pm")]),(0,t._)("li",null,[(0,t._)("strong",null,"aa"),(0,t.Uk)(": a.m, p.m")])])])]),(0,t._)("tr",null,[(0,t._)("td",null,"Unix Timestamp"),(0,t._)("td",null,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("strong",null,"X"),(0,t.Uk)(": 1360013296")]),(0,t._)("li",null,[(0,t._)("strong",null,"x"),(0,t.Uk)(" (ms): 1360013296123")])])])])],-1),H=(0,t._)("p",null,[(0,t._)("strong",null,"Try to create dates with native JS Date class"),(0,t.Uk)(" like so:")],-1),F=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n")])],-1),C=(0,t._)("p",null,"The following method is just a wrapper to help you in cases where you just need current time but with a different year, or month, or second etc.",-1),W=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"buildDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"year"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2010"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"date"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"hours"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"15"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"milliseconds"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"123"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),J=(0,t._)("p",null,"You can pass a second argument (a boolean) for setting UTC time (true) instead of local time.",-1),O=(0,t._)("p",null,"The object literal provided can contain the following keys (all are optional):",-1),Q=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Key"),(0,t._)("th",{class:"text-left"},"Description")])],-1),E=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"milliseconds")]),(0,t._)("td",null,"for the milliseconds component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"seconds")]),(0,t._)("td",null,"for the seconds component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minutes")]),(0,t._)("td",null,"for the minutes component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hours")]),(0,t._)("td",null,"for the hours component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"date")]),(0,t._)("td",null,"for the day component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"month")]),(0,t._)("td",null,"for the month component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"year")]),(0,t._)("td",null,"for the year component of the date/time")])],-1),I=(0,t._)("p",null,"To check if a date string is valid use:",-1),A=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateString "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Wed, 09 Aug 1995 00:00:00 GMT'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isValid"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("dateString"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Do something with date string"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),B=(0,t._)("p",null,"To add/subtract some duration to/from a date use:",-1),G=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"7"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\nnewDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"addToDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"days"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"7"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"months"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `newDate` is now 2017-3-14 00:00:00"),(0,t.Uk)("\n\nnewDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"subtractFromDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"hours"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"24"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"milliseconds"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10000"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `newDate` is now 2017-3-12 23:59:50"),(0,t.Uk)("\n")])],-1),P=(0,t._)("p",null,"The object literal provided can contain the following keys (all are optional):",-1),Z=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Key"),(0,t._)("th",{class:"text-left"},"Description")])],-1),z=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"milliseconds")]),(0,t._)("td",null,"for a duration in milliseconds")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"seconds")]),(0,t._)("td",null,"for a duration in seconds")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minutes")]),(0,t._)("td",null,"for a duration in minutes")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hours")]),(0,t._)("td",null,"for a duration in hours")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"days")]),(0,t._)("td",null,"for a duration in days")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"months")]),(0,t._)("td",null,"for a duration in months")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"years")]),(0,t._)("td",null,"for a duration in years")])],-1),K=(0,t._)("p",null,"To set a specified unit(s) of date/time:",-1),L=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" adjustedDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"adjustDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"year"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2010"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"month"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `adjustedDate` is 2010-2-2"),(0,t.Uk)("\n")])],-1),N=(0,t._)("p",null,[(0,t.Uk)("You can pass a third argument (a Boolean) for setting UTC time ("),(0,t._)("code",{class:"doc-token"},"true"),(0,t.Uk)(") instead of local time.")],-1),R=(0,t._)("p",null,"The object literal provided can contain the following keys (all are optional):",-1),V=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Key"),(0,t._)("th",{class:"text-left"},"Description")])],-1),X=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"milliseconds")]),(0,t._)("td",null,"for the milliseconds component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"seconds")]),(0,t._)("td",null,"for the seconds component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minutes")]),(0,t._)("td",null,"for the minutes component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hours")]),(0,t._)("td",null,"for the hours component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"date")]),(0,t._)("td",null,"for the day component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"month")]),(0,t._)("td",null,"for the month component of the date/time")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"year")]),(0,t._)("td",null,"for the year component of the date/time")])],-1),$=(0,t._)("p",null,"To get the minimum/maximum date of a date set (i.e. array) use:",-1),nn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" min "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getMinDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"24"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"20"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"26"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `min` is 2017-5-20"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" max "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getMaxDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"24"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"20"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"26"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `max` is 2017-6-26"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// Or use an array:"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dates "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"24"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"20"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"26"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" min "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getMinDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token operator"},"..."),(0,t.Uk)("dates"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// `min` is 2017-5-20"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" max "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getMaxDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token operator"},"..."),(0,t.Uk)("dates"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// `max` is 2017-6-26"),(0,t.Uk)("\n")])],-1),sn=(0,t._)("p",null,"Note that the returning value is a timestamp.",-1),an=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t.Uk)("console"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("max"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 1497906000000"),(0,t.Uk)("\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("max"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// Wed Jul 26 2017 00:00:00 GMT+0300 (Eastern European Summer Time)"),(0,t.Uk)("\n")])],-1),tn=(0,t._)("p",null,"To check if a date is in a given date/time range use:",-1),en=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateTarget "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateFrom "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateTo "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// **strictly** (i.e. exclusive range)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isBetweenDates"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("dateTarget"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateFrom"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateTo"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Do something with dateTarget"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// including which margin you want"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isBetweenDates"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("dateTarget"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateFrom"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateTo"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"inclusiveFrom"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"inclusiveTo"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Do something with dateTarget"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// if you only care about comparing dates (year/month/day, regardless of time)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// then you could tip isBetweenDates() about it so it can perform best:"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isBetweenDates"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("dateTarget"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateFrom"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateTo"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"onlyDate"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Do something with dateTarget"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),on=(0,t._)("p",null,"To normalize a date in a given date/time range use:",-1),ln=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateMin "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2010"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"23"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateMax "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2012"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"12"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" dateNormalized "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDateBetween"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateMin"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" dateMax"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Returns `newDate` if it's between 2010-2-23 and 2012-4-12; `dateMin` if it's lower; `dateMax` if it's greater"),(0,t.Uk)("\n")])],-1),cn=(0,t._)("p",null,[(0,t.Uk)("To check if two dates’ unit are "),(0,t._)("strong",null,"equal"),(0,t.Uk)(" use:")],-1),kn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date1 "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date2 "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"8"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" unit "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'year'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isSameDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" date2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* optional */"),(0,t.Uk)(" unit"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// true because date1 and date2's year is the same"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),pn=(0,t._)("p",null,"Unit parameter can be omitted, in which case a full date/time comparison will occur, otherwise it allows to perform partial comparison:",-1),un=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Unit"),(0,t._)("th",{class:"text-left"},"Description")])],-1),_n=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"second")]),(0,t._)("td",null,"test if same second only")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minute")]),(0,t._)("td",null,"test if same minute only")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hour")]),(0,t._)("td",null,"test if same hour only")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"day")]),(0,t._)("td",null,"test if same day only")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"month")]),(0,t._)("td",null,"test if same month only")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"year")]),(0,t._)("td",null,"test if same year only")])],-1),rn=(0,t._)("p",null,"To compute the difference between two dates use:",-1),dn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date1 "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"12"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date2 "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"8"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" unit "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'days'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" diff "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDateDiff"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("date1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" date2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" unit"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// `diff` is 34 (days)"),(0,t.Uk)("\n")])],-1),Un=(0,t._)("p",null,[(0,t.Uk)("The unit parameter indicates the unit of measurement, if not specified then it is "),(0,t._)("code",{class:"doc-token"},"days"),(0,t.Uk)(" by default:")],-1),mn=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Unit"),(0,t._)("th",{class:"text-left"},"Description")])],-1),gn=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"seconds")]),(0,t._)("td",null,"distance in seconds (disregarding milliseconds)")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minutes")]),(0,t._)("td",null,"distance in minutes (disregarding seconds, …)")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hours")]),(0,t._)("td",null,"distance in hours (disregarding minutes, seconds, …)")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"days")]),(0,t._)("td",null,"distance in calendar days")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"months")]),(0,t._)("td",null,"distance in calendar months")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"years")]),(0,t._)("td",null,"distance in calendar years")])],-1),yn=(0,t.Uk)("To get the "),wn=(0,t.Uk)("ISO week number in year"),hn=(0,t.Uk)(" for a given date object use:"),fn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" week "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getWeekOfYear"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// `week` is 1"),(0,t.Uk)("\n")])],-1),bn=(0,t._)("p",null,"To get the day number in year for a given date object use:",-1),Dn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" day "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDayOfYear"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// `day` is 35"),(0,t.Uk)("\n")])],-1),jn=(0,t._)("p",null,"To get the day number in week for a given date object use:",-1),Mn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2017"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"9"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" day "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDayOfWeek"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// `day` is 4"),(0,t.Uk)("\n")])],-1),Tn=(0,t._)("p",null,"To get the number of days in the month for the specified date:",-1),Sn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" days "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"daysInMonth"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// e.g. 30"),(0,t.Uk)("\n")])],-1),xn=(0,t._)("p",null,"To mutate the original date object by setting it to the start of a unit of time use:",-1),vn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"let"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2000"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// set to beginning of year 2000 (January 1st, 2000, 00:00:00.000)"),(0,t.Uk)("\nnewDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"startOfDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'year'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// set to end of year 2000 (December 31st, 2000, 23:59:59.999)"),(0,t.Uk)("\nnewDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"endOfDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'year'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),Yn=(0,t._)("p",null,"The second parameter indicates a unit to reset to (beginning of it or end of it):",-1),qn=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{class:"text-left"},"Unit"),(0,t._)("th",{class:"text-left"},"Description")])],-1),Hn=(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"second")]),(0,t._)("td",null,"reset seconds")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"minute")]),(0,t._)("td",null,"reset minutes")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"hour")]),(0,t._)("td",null,"reset hours")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"day")]),(0,t._)("td",null,"reset days")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"month")]),(0,t._)("td",null,"reset months")]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",{class:"doc-token"},"year")]),(0,t._)("td",null,"reset years")])],-1),Fn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\ndate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"inferDateFormat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 'date'"),(0,t.Uk)("\ndate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"inferDateFormat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"35346363"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 'number'"),(0,t.Uk)("\ndate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"inferDateFormat"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'Mon Feb 05 2018 23:05:29'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// string"),(0,t.Uk)("\n")])],-1),Cn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" newDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"Date"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" clonedDate "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"clone"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\ndate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"addToDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"days"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\nconsole"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"log"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("newDate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"==="),(0,t.Uk)(" clonedDate"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// false"),(0,t.Uk)("\n")])],-1),Wn=(0,t._)("p",null,"Using locale set by current Quasar language pack, this allows you to parse any string into a date object based on the format passed:",-1),Jn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// Example 1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"extractDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'2019-10-29 --- 23:12'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'YYYY-MM-DD --- HH:mm'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// date is a new Date() object"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// Example 2"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"extractDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'21/03/1985'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'DD/MM/YYYY'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// date is a new Date() object"),(0,t.Uk)("\n")])],-1),On=(0,t._)("p",null,"With optional custom locale:",-1),Qn=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" date "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'quasar'"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"const"),(0,t.Uk)(" obj "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" date"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"extractDate"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'Month: Feb, Day: 11th, Year: 2018'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'[Month: ]MMM[, Day: ]Do[, Year: ]YYYY'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"days"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Duminica'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Luni'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of days - remember starting with Sunday */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"daysShort"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Dum'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Lun'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of days - remember starting with Sunday */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"months"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Ianuarie'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Februarie'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of months */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"monthsShort"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'Ian'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Feb'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* and all the rest of months */"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// date is a new Date() object"),(0,t.Uk)("\n")])],-1);function En(n,s,a,En,In,An){const Bn=(0,t.up)("doc-link"),Gn=(0,t.up)("q-markup-table"),Pn=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(Pn,{"meta-title":En.metaTitle,title:"Date Utils","meta-desc":En.metaDesc},{default:(0,t.w5)((()=>[e,(0,t._)("p",null,[o,(0,t.Wm)(Bn,{to:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"},{default:(0,t.w5)((()=>[l])),_:1}),c,k,p,u,_,r,i]),d,U,m,g,y,w,(0,t._)("div",h,[f,(0,t._)("p",null,[b,(0,t.Wm)(Bn,{to:"/start/umd#quasar-global-object"},{default:(0,t.w5)((()=>[D])),_:1}),j])]),(0,t._)("h2",{id:"format-for-display",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=n=>En.copyHeading("format-for-display"))},"Format for display"),M,T,S,x,v,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[Y,q])),_:1}),(0,t._)("h2",{id:"manipulate-dates",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=n=>En.copyHeading("manipulate-dates"))},"Manipulate dates"),(0,t._)("h3",{id:"create",class:"doc-heading doc-h3",onClick:s[2]||(s[2]=n=>En.copyHeading("create"))},"Create"),H,F,C,W,J,O,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[Q,E])),_:1}),(0,t._)("h3",{id:"validate",class:"doc-heading doc-h3",onClick:s[3]||(s[3]=n=>En.copyHeading("validate"))},"Validate"),I,A,(0,t._)("h3",{id:"add-subtract",class:"doc-heading doc-h3",onClick:s[4]||(s[4]=n=>En.copyHeading("add-subtract"))},"Add/Subtract"),B,G,P,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[Z,z])),_:1}),(0,t._)("h3",{id:"set-date-time",class:"doc-heading doc-h3",onClick:s[5]||(s[5]=n=>En.copyHeading("set-date-time"))},"Set date/time"),K,L,N,R,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[V,X])),_:1}),(0,t._)("h2",{id:"query-dates",class:"doc-heading doc-h2",onClick:s[6]||(s[6]=n=>En.copyHeading("query-dates"))},"Query dates"),(0,t._)("h3",{id:"minimum-maximum",class:"doc-heading doc-h3",onClick:s[7]||(s[7]=n=>En.copyHeading("minimum-maximum"))},"Minimum/Maximum"),$,nn,sn,an,(0,t._)("h3",{id:"time-range",class:"doc-heading doc-h3",onClick:s[8]||(s[8]=n=>En.copyHeading("time-range"))},"Time range"),tn,en,on,ln,(0,t._)("h3",{id:"equality",class:"doc-heading doc-h3",onClick:s[9]||(s[9]=n=>En.copyHeading("equality"))},"Equality"),cn,kn,pn,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[un,_n])),_:1}),(0,t._)("h3",{id:"difference",class:"doc-heading doc-h3",onClick:s[10]||(s[10]=n=>En.copyHeading("difference"))},"Difference"),rn,dn,Un,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[mn,gn])),_:1}),(0,t._)("h3",{id:"calendar",class:"doc-heading doc-h3",onClick:s[11]||(s[11]=n=>En.copyHeading("calendar"))},"Calendar"),(0,t._)("p",null,[yn,(0,t.Wm)(Bn,{to:"https://en.wikipedia.org/wiki/ISO_week_date"},{default:(0,t.w5)((()=>[wn])),_:1}),hn]),fn,bn,Dn,jn,Mn,Tn,Sn,(0,t._)("h3",{id:"start-end-of-time",class:"doc-heading doc-h3",onClick:s[12]||(s[12]=n=>En.copyHeading("start-end-of-time"))},"Start/End of time"),xn,vn,Yn,(0,t.Wm)(Gn,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,t.w5)((()=>[qn,Hn])),_:1}),(0,t._)("h2",{id:"other",class:"doc-heading doc-h2",onClick:s[13]||(s[13]=n=>En.copyHeading("other"))},"Other"),(0,t._)("h3",{id:"get-format",class:"doc-heading doc-h3",onClick:s[14]||(s[14]=n=>En.copyHeading("get-format"))},"Get Format"),Fn,(0,t._)("h3",{id:"cloning-date",class:"doc-heading doc-h3",onClick:s[15]||(s[15]=n=>En.copyHeading("cloning-date"))},"Cloning Date"),Cn,(0,t._)("h3",{id:"extract-date",class:"doc-heading doc-h3",onClick:s[16]||(s[16]=n=>En.copyHeading("extract-date"))},"Extract Date"),Wn,Jn,On,Qn])),_:1},8,["meta-title","meta-desc"])}var In=a(17536);const An={name:"DocMarkdownPage",setup(){return{metaTitle:"Date Utils",metaDesc:"A set of Quasar methods for manipulating JS Date objects without the high additional cost of dedicated libraries.",copyHeading:In.Et}}};var Bn=a(74260);const Gn=(0,Bn.Z)(An,[["render",En]]),Pn=Gn}}]);