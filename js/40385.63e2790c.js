"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[40385],{40385:(n,s,a)=>{a.r(s),a.d(s,{default:()=>B});var t=a(83673);const o=(0,t._)("p",null,"当你第一次在 Quasar 项目中加入Electron模式时，你会得到最新版本的Electron软件包。在某个时间点上，你会想要升级Electron的版本。",-1),e=(0,t._)("p",null,"在升级Electron之前，请参考它的发行说明。是否有突破性的变化？",-1),c=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t._)("span",{class:"token comment"},"# 从你的 Quasar 项目的根目录"),(0,t.Uk)("\n$ "),(0,t._)("span",{class:"token function"},"yarn"),(0,t.Uk)(" upgrade electron@latest\n"),(0,t._)("span",{class:"token comment"},"# 或: npm install electron@latest"),(0,t.Uk)("\n")])],-1),p=(0,t._)("p",null,"Quasar v2的Electron模式几乎完全颠覆了之前的版本，大大改善了开发者的体验。为了确保与Electron领域的最新发展相兼容，这里的一些变化是必须的(所以要为即将到来的上游变化做防弹处理)。",-1),l=(0,t._)("p",null,[(0,t._)("strong",null,"开箱即用的对Typescript的支持"),(0,t.Uk)("。只需将electron-main.js和electron-preload.js重命名为electron-main.ts和electron-preload.ts。")],-1),k=(0,t._)("ul",null,[(0,t._)("li",null,'支持Electron 11，并为即将到来的Electron 12+的变化准备开箱即用的支持(未来你不需要改变任何东西)。其中一个变化是我们将使用 "contextIsolation "而不是被废弃的 “Node Integration”。'),(0,t._)("li",null,[(0,t.Uk)("预加载脚本不再有旧的限制。你可以用相对路径导入其他js文件，因为该脚本现在被捆绑并通过Babel传递(所以你也可以使用"),(0,t._)("code",{class:"doc-token"},"import X from Y"),(0,t.Uk)("语法)。你也可以为它启用提示功能。")]),(0,t._)("li",null,"你也可以为主线程和预加载脚本启用提示功能。"),(0,t._)("li",null,"我们删除了默认的electron-main.dev.js支持，因为它似乎不再需要了。然而，你可以通过创建它并从electron-main中引用它来把它添加回来( Quasar CLI 不再自动检测它–因为我们不需要；稍后会有更多的内容)。")],-1),i=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t._)("span",{class:"token comment"},"# 旧的结构"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token builtin class-name"},"."),(0,t.Uk)("\n└── src-electron/\n          ├── icons/                 "),(0,t._)("span",{class:"token comment"},"# 适用于所有平台的应用程序图标"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.icns             "),(0,t._)("span",{class:"token comment"},"# Darwin (MacOS) 平台的图标文件"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.ico              "),(0,t._)("span",{class:"token comment"},"# win32 (Windows) 平台的图标文件"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   └── linux-512x512.png     "),(0,t._)("span",{class:"token comment"},"# Linux平台的图标文件（使用electron-builder时）"),(0,t.Uk)("\n    └── main-process/\n        ├── electron-preload.js   "),(0,t._)("span",{class:"token comment"},"# Electron预加载脚本（将Node.js内容注入渲染器线程）"),(0,t.Uk)("\n        ├── electron-main.dev.js  "),(0,t._)("span",{class:"token comment"},"# 主线程代码（仅在开发代码之前）"),(0,t.Uk)("\n              └── electron-main.js      "),(0,t._)("span",{class:"token comment"},"# 主线程代码（生产代码）"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"# 新的结构"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token builtin class-name"},"."),(0,t.Uk)("\n└── src-electron/\n          ├── icons/                 "),(0,t._)("span",{class:"token comment"},"# 适用于所有平台的应用程序图标"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.icns             "),(0,t._)("span",{class:"token comment"},"# Darwin (MacOS) 平台的图标文件"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.ico              "),(0,t._)("span",{class:"token comment"},"# win32 (Windows) 平台的图标文件"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   └── icon.png              "),(0,t._)("span",{class:"token comment"},"# 适用于所有平台（尤其是 Linux）的托盘图标文件"),(0,t.Uk)("\n    ├── electron-preload.js   "),(0,t._)("span",{class:"token comment"},"# （或 .ts）Electron 预加载脚本（将 Node.js 内容注入渲染器线程）"),(0,t.Uk)("\n          └── electron-main.js      "),(0,t._)("span",{class:"token comment"},"# （或 .ts）主线程代码"),(0,t.Uk)("\n")])],-1),r=(0,t._)("p",null,[(0,t.Uk)("注意，现在已经没有"),(0,t._)("code",{class:"doc-token"},"electron-main.dev.js"),(0,t.Uk)("文件了(不需要了)，"),(0,t._)("code",{class:"doc-token"},"electron-preload/main.js"),(0,t.Uk)("文件需要直接移到"),(0,t._)("code",{class:"doc-token"},"/src-electron"),(0,t.Uk)("下：")],-1),u=(0,t._)("p",null,"为了使我们能够向前兼容未来版本的Electron，你需要做一些小的(但很重要！)改动。",-1),_=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token comment"},"// 老方式"),(0,t.Uk)("\nmainWindow "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"BrowserWindow"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// ..."),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"webPreferences"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token literal-property property"},"nodeIntegration"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(" process"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("env"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token constant"},"QUASAR_NODE_INTEGRATION"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token literal-property property"},"nodeIntegrationInWorker"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(" process"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("env"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token constant"},"QUASAR_NODE_INTEGRATION"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// preload: path.resolve(__dirname, 'electron-preload.js')"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 新方式"),(0,t.Uk)("\nmainWindow "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"BrowserWindow"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// ..."),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"webPreferences"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 我们启用contextIsolation(反正Electron 12+已经默认启用了它)。"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token literal-property property"},"contextIsolation"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 我们使用一种新的方式来引用预加载脚本"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// (它将被需要，所以添加它并创建文件，如果它不在那里的话)"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token literal-property property"},"preload"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(" path"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"resolve"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("__dirname"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" process"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("env"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token constant"},"QUASAR_ELECTRON_PRELOAD"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])],-1),d=(0,t._)("p",null,"如果你还没有这个文件，你将需要它。如果没有的话，请创建它。没有它，你将无法在你的渲染器线程中使用Node.js的力量。",-1),U=(0,t.Uk)("更多信息："),m=(0,t.Uk)("预加载脚本"),g=(0,t.Uk)("。"),h=(0,t._)("div",{class:"doc-note doc-note--danger"},[(0,t._)("p",{class:"doc-note__title"},"WARNING"),(0,t._)("p",null,[(0,t.Uk)("你需要将所有Node.js的东西从你的渲染器线程(来自/src的UI代码)转移到预加载脚本。通过"),(0,t._)("code",{class:"doc-token"},"contextBridge"),(0,t.Uk)("提供同样的功能，如下图所示。")])],-1),w=(0,t._)("p",null,[(0,t.Uk)("这是"),(0,t._)("code",{class:"doc-token"},"electron-preload.js"),(0,t.Uk)("的默认内容：")],-1),j=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token comment"},"/**\n * 此文件专门用于安全原因。\n * 在这里你可以访问 Nodejs 的东西并将功能注入\n * 渲染器线程（可通过“window”对象访问）\n *\n * 警告！\n * 如果从 node_modules 中导入任何内容，请确保指定了包\n * 在 package.json > \"dependencies\" 而不是 \"devDependencies\"\n *\n * 示例（将 window.myAPI.doAThing() 注入渲染器线程）：\n *\n *   const { contextBridge } = require('electron')\n *\n *   contextBridge.exposeInMainWorld('myAPI', {\n *     doAThing: () => {}\n *   })\n */"),(0,t.Uk)("\n")])],-1),y=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token comment"},"// 老方法"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token literal-property property"},"electron"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 现在没有了(即将到来的上游突破性变化)。"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 被前面记载的electron-main.js中的一个变化所取代"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"nodeIntegration"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// remove me!"),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token comment"},"// 改名为 chainWebpackMain"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"chainWebpack"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"chain"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* ... */"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token comment"},"// 改名为 extendWebpackMain"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"extendWebpack"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"cfg"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* ... */"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 新方法"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token literal-property property"},"electron"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 已从 chainWebpack() 改名为"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"chainWebpackMain"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"chain"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 其内容的示例(增加了提示性的)。"),(0,t.Uk)("\n    chain"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"plugin"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'eslint-webpack-plugin'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"use"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ESLintPlugin"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"extensions"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'js'"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token comment"},"// 已从 extendWebpack() 改名为"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"extendWebpackMain"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"cfg"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* ... */"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token comment"},"// 新的!"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"chainWebpackPreload"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"chain"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 示例(增加了林特化)"),(0,t.Uk)("\n    chain"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"plugin"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'eslint-webpack-plugin'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"use"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ESLintPlugin"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token literal-property property"},"extensions"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token string"},"'js'"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token comment"},"// 新的!"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"extendWebpackPreload"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token parameter"},"cfg"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* ... */"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),v=(0,t.Uk)("$q对象"),b=(0,t.Uk)("不再包含"),f=(0,t._)("code",{class:"doc-token"},"electron",-1),E=(0,t.Uk)("属性。你将需要使用"),W=(0,t.Uk)("preload script"),I=(0,t.Uk)(" 来访问它，并将其提供给渲染器线程。"),x=(0,t.Uk)("此外，"),N=(0,t.Uk)("openURL"),q=(0,t.Uk)(" 工具不能再接入Electron来打开一个新窗口。你将需要从预加载脚本中提供你自己的util。"),C=(0,t._)("div",{class:"doc-note doc-note--danger"},[(0,t._)("p",{class:"doc-note__title"},"WARNING"),(0,t._)("p",null,[(0,t.Uk)("你需要将所有Node.js的东西从你的渲染器线程(来自/src的UI代码)转移到预加载脚本中。通过 "),(0,t._)("code",{class:"doc-token"},"contextBridge"),(0,t.Uk)(" 提供相同的功能，如上面预加载脚本部分所见。")])],-1),A=(0,t._)("p",null,"你可能还需要在你的electron-main.js中加入以下代码，以便在开发模式(或启用调试功能的prod)下自动打开devtools，并在生产构建(未启用调试功能)时禁用 devtools:",-1),D=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"createWindow"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  mainWindow "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"BrowserWindow"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"/* ... */"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("process"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("env"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token constant"},"DEBUGGING"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 如果在 DEV 或生产上，并启用了调试功能"),(0,t.Uk)("\n    mainWindow"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("webContents"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"openDevTools"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 我们在生产中，无法访问 devtools。"),(0,t.Uk)("\n    mainWindow"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("webContents"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"on"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'devtools-opened'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"=>"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      mainWindow"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("webContents"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"closeDevTools"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1);function T(n,s,a,T,Q,H){const P=(0,t.up)("doc-link"),R=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(R,{"meta-title":T.metaTitle,title:"关于Electron的升级指南",nav:T.nav,toc:T.toc,"meta-desc":T.metaDesc},{default:(0,t.w5)((()=>[(0,t._)("h2",{id:"升级electron",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=n=>T.copyHeading("升级electron"))},"升级Electron"),o,e,c,(0,t._)("h2",{id:"从quasar-v1升级",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=n=>T.copyHeading("从quasar-v1升级"))},"从Quasar v1升级"),p,(0,t._)("h3",{id:"改进的高度概括",class:"doc-heading doc-h3",onClick:s[2]||(s[2]=n=>T.copyHeading("改进的高度概括"))},"改进的高度概括"),l,k,(0,t._)("h3",{id:"-src-electron文件夹",class:"doc-heading doc-h3",onClick:s[3]||(s[3]=n=>T.copyHeading("-src-electron文件夹"))},"/src-electron文件夹"),i,r,(0,t._)("h3",{id:"electron-main-js文件",class:"doc-heading doc-h3",onClick:s[4]||(s[4]=n=>T.copyHeading("electron-main-js文件"))},"Electron -main.js文件"),u,_,(0,t._)("h3",{id:"electron-preload-js-文件",class:"doc-heading doc-h3",onClick:s[5]||(s[5]=n=>T.copyHeading("electron-preload-js-文件"))},"electron-preload.js 文件"),d,(0,t._)("p",null,[U,(0,t.Wm)(P,{to:"/quasar-cli/developing-electron-apps/electron-preload-script"},{default:(0,t.w5)((()=>[m])),_:1}),g]),h,w,j,(0,t._)("h3",{id:"quasar-conf-更改",class:"doc-heading doc-h3",onClick:s[6]||(s[6]=n=>T.copyHeading("quasar-conf-更改"))},"Quasar.conf 更改"),y,(0,t._)("h3",{id:"渲染器线程-src-",class:"doc-heading doc-h3",onClick:s[7]||(s[7]=n=>T.copyHeading("渲染器线程-src-"))},"渲染器线程(/src)"),(0,t._)("p",null,[(0,t.Wm)(P,{to:"/options/the-q-object"},{default:(0,t.w5)((()=>[v])),_:1}),b,f,E,(0,t.Wm)(P,{to:"/quasar-cli/developing-electron-apps/electron-preload-script"},{default:(0,t.w5)((()=>[W])),_:1}),I]),(0,t._)("p",null,[x,(0,t.Wm)(P,{to:"/quasar-utils/other-utils#open-external-url"},{default:(0,t.w5)((()=>[N])),_:1}),q]),C,(0,t._)("h3",{id:"浏览器-devtools",class:"doc-heading doc-h3",onClick:s[8]||(s[8]=n=>T.copyHeading("浏览器-devtools"))},"浏览器 Devtools"),A,D])),_:1},8,["meta-title","nav","toc","meta-desc"])}var Q=a(17536);const H={name:"DocMarkdownPage",setup(){return{metaTitle:"关于Electron的升级指南",metaDesc:"在 Quasar 中处理Electron时的升级说明。",nav:[{name:"简介",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/introduction",dir:"left"},{name:"准备工作",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/preparation",dir:"right"}],toc:[{id:"升级electron",title:"升级Electron"},{id:"从quasar-v1升级",title:"从Quasar v1升级"},{id:"改进的高度概括",title:"改进的高度概括",sub:!0},{id:"-src-electron文件夹",title:"/src-electron文件夹",sub:!0},{id:"electron-main-js文件",title:"Electron -main.js文件",sub:!0},{id:"electron-preload-js-文件",title:"electron-preload.js 文件",sub:!0},{id:"quasar-conf-更改",title:"Quasar.conf 更改",sub:!0},{id:"渲染器线程-src-",title:"渲染器线程(/src)",sub:!0},{id:"浏览器-devtools",title:"浏览器 Devtools",sub:!0}],copyHeading:Q.Et}}};var P=a(74260);const R=(0,P.Z)(H,[["render",T]]),B=R}}]);