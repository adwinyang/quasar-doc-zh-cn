"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[51648],{51648:(e,i,l)=>{l.r(i),l.d(i,{default:()=>N});var t=l(83673);const o=(0,t._)("p",null,"QFile is a component which handles the user interaction for picking file(s).",-1),n={class:"doc-note doc-note--tip"},a=(0,t._)("p",{class:"doc-note__title"},"TIP",-1),s=(0,t.Uk)("If you also want a component to handle the upload for you, please consider using "),c=(0,t.Uk)("QUploader"),d=(0,t.Uk)(" instead."),r=(0,t._)("div",{class:"doc-note doc-note--warning"},[(0,t._)("p",{class:"doc-note__title"},"WARNING"),(0,t._)("p",null,[(0,t.Uk)("For your QFile you can use only one of the main designs ("),(0,t._)("code",{class:"doc-token"},"filled"),(0,t.Uk)(", "),(0,t._)("code",{class:"doc-token"},"outlined"),(0,t.Uk)(", "),(0,t._)("code",{class:"doc-token"},"standout"),(0,t.Uk)(", "),(0,t._)("code",{class:"doc-token"},"borderless"),(0,t.Uk)("). You cannot use multiple as they are self-exclusive.")])],-1),p=(0,t._)("p",null,[(0,t.Uk)("As a helper, you can use "),(0,t._)("code",{class:"doc-token"},"clearable"),(0,t.Uk)(" prop so user can reset model to "),(0,t._)("code",{class:"doc-token"},"null"),(0,t.Uk)(" through an appended icon. The second QFile in the example below is the equivalent of using "),(0,t._)("code",{class:"doc-token"},"clearable"),(0,t.Uk)(".")],-1),u=(0,t._)("div",{class:"doc-note doc-note--warning"},[(0,t._)("p",{class:"doc-note__title"},"WARNING"),(0,t._)("p",null,[(0,t.Uk)("Under the hood, QFile uses a native input. Due to browser security policy, it is not allowed to programmatically fill such an input with a value. As a result, even if you set v-model from the beginning to a value, the component will show those file(s) but the input tag itself won’t be filled in with that value. A user interaction (click/tap/"),(0,t._)("kbd",null,"ENTER"),(0,t.Uk)(" key/"),(0,t._)("kbd",null,"SPACE"),(0,t.Uk)(" key) is absolutely required in order for the native input to contain them. It’s best to always have the initial value of model set to "),(0,t._)("code",{class:"doc-token"},"null"),(0,t.Uk)(" or "),(0,t._)("code",{class:"doc-token"},"undefined/void 0"),(0,t.Uk)(".")])],-1),h=(0,t._)("p",null,[(0,t.Uk)("By default, QFile replaces the model each time the user selects any files through the popup. However, when you are accepting multiple files ("),(0,t._)("code",{class:"doc-token"},"multiple"),(0,t.Uk)(" prop) you can change this behavior and append the new selection to the model rather than replacing its old value.")],-1),g=(0,t._)("p",null,"Below you can pick files multiple times and QFile will keep on appending them to the model:",-1),f=(0,t._)("p",null,"The example below highlights how you can customize the display of each file and even incorporate a possible upload progress indicator:",-1),m=(0,t._)("p",null,"You can even combine the restrictions above.",-1),k={class:"doc-note doc-note--tip"},_=(0,t._)("p",{class:"doc-note__title"},"TIP",-1),b=(0,t.Uk)("In the example above, we’re using "),y=(0,t._)("code",{class:"doc-token"},"accept",-1),v=(0,t.Uk)(" property. Its value must be a comma separated list of unique file type specifiers. Maps to ‘accept’ attribute of native input type=file element. "),w=(0,t.Uk)("More info"),U=(0,t.Uk)("."),F=(0,t._)("div",{class:"doc-note doc-note--warning"},[(0,t._)("p",{class:"doc-note__title"},"WARNING"),(0,t._)("p",null,[(0,t.Uk)("Recommended format for the "),(0,t._)("code",{class:"doc-token"},"accept"),(0,t.Uk)(" property is "),(0,t._)("code",{class:"doc-token"},"<mediatype>/<extension>"),(0,t.Uk)(". Examples: “image/png”, “image/png”. QFile uses an "),(0,t._)("code",{class:"doc-token"},'<input type="file">'),(0,t.Uk)(" under the hood and it relies entirely on the host browser to trigger the file picker. If the "),(0,t._)("code",{class:"doc-token"},"accept"),(0,t.Uk)(" property (that gets applied to the input) is not correct, no file picker will appear on screen or it will appear but it will accept all file types.")])],-1),C=(0,t._)("p",null,"You can also apply custom filters (which are executed after user picks files):",-1),Q=(0,t._)("p",null,[(0,t.Uk)("When dealing with a native form which has an "),(0,t._)("code",{class:"doc-token"},"action"),(0,t.Uk)(" and a "),(0,t._)("code",{class:"doc-token"},"method"),(0,t.Uk)(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),(0,t._)("code",{class:"doc-token"},"name"),(0,t.Uk)(" property on QFile, otherwise formData will not contain it (if it should):")],-1);function W(e,i,l,W,D,H){const A=(0,t.up)("doc-link"),I=(0,t.up)("doc-api"),N=(0,t.up)("doc-example"),T=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(T,{"meta-title":W.metaTitle,title:"File Picker",related:W.related,toc:W.toc,"meta-desc":W.metaDesc},{default:(0,t.w5)((()=>[o,(0,t._)("div",n,[a,(0,t._)("p",null,[s,(0,t.Wm)(A,{to:"/vue-components/uploader"},{default:(0,t.w5)((()=>[c])),_:1}),d])]),(0,t._)("h2",{id:"qfile-api",class:"doc-heading doc-h2",onClick:i[0]||(i[0]=e=>W.copyHeading("qfile-api"))},"QFile API"),(0,t.Wm)(I,{file:"QFile"}),(0,t._)("h2",{id:"design",class:"doc-heading doc-h2",onClick:i[1]||(i[1]=e=>W.copyHeading("design"))},"Design"),r,(0,t.Wm)(N,{title:"Design Overview",file:"QFile/DesignOverview"}),(0,t._)("h3",{id:"decorators",class:"doc-heading doc-h3",onClick:i[2]||(i[2]=e=>W.copyHeading("decorators"))},"Decorators"),(0,t.Wm)(N,{title:"Decorators",file:"QFile/Decorators"}),(0,t._)("h3",{id:"coloring",class:"doc-heading doc-h3",onClick:i[3]||(i[3]=e=>W.copyHeading("coloring"))},"Coloring"),(0,t.Wm)(N,{title:"Coloring",file:"QFile/Coloring"}),(0,t._)("h3",{id:"clearable",class:"doc-heading doc-h3",onClick:i[4]||(i[4]=e=>W.copyHeading("clearable"))},"Clearable"),p,(0,t.Wm)(N,{title:"Clearable",file:"QFile/Clearable"}),(0,t._)("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:i[5]||(i[5]=e=>W.copyHeading("disable-and-readonly"))},"Disable and readonly"),(0,t.Wm)(N,{title:"Disable and readonly",file:"QFile/DisableReadonly"}),(0,t._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:i[6]||(i[6]=e=>W.copyHeading("usage"))},"Usage"),u,(0,t._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:i[7]||(i[7]=e=>W.copyHeading("basic"))},"Basic"),(0,t.Wm)(N,{title:"Single file",file:"QFile/BasicSingle"}),(0,t.Wm)(N,{title:"Multiple files",file:"QFile/BasicMultiple"}),(0,t._)("h3",{id:"appending-files",class:"doc-heading doc-h3",onClick:i[8]||(i[8]=e=>W.copyHeading("appending-files"))},"Appending files"),h,g,(0,t.Wm)(N,{title:"Appending files",file:"QFile/AppendingFiles"}),(0,t._)("h3",{id:"counters",class:"doc-heading doc-h3",onClick:i[9]||(i[9]=e=>W.copyHeading("counters"))},"Counters"),(0,t.Wm)(N,{title:"Basic counter",file:"QFile/CounterBasic"}),(0,t.Wm)(N,{title:"Counter label",file:"QFile/CounterLabel"}),(0,t._)("h3",{id:"using-chips",class:"doc-heading doc-h3",onClick:i[10]||(i[10]=e=>W.copyHeading("using-chips"))},"Using chips"),(0,t.Wm)(N,{title:"With chips",file:"QFile/WithChips"}),(0,t._)("h3",{id:"using-file-slot",class:"doc-heading doc-h3",onClick:i[11]||(i[11]=e=>W.copyHeading("using-file-slot"))},"Using file slot"),f,(0,t.Wm)(N,{title:"With progress indicator",file:"QFile/WithProgress"}),(0,t._)("h3",{id:"restricting-files",class:"doc-heading doc-h3",onClick:i[12]||(i[12]=e=>W.copyHeading("restricting-files"))},"Restricting files"),(0,t.Wm)(N,{title:"Basic restrictions",file:"QFile/RestrictionBasic"}),m,(0,t._)("div",k,[_,(0,t._)("p",null,[b,y,v,(0,t.Wm)(A,{to:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers"},{default:(0,t.w5)((()=>[w])),_:1}),U])]),F,C,(0,t.Wm)(N,{title:"Filter",file:"QFile/RestrictionFilter"}),(0,t._)("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:i[13]||(i[13]=e=>W.copyHeading("native-form-submit"))},"Native form submit"),Q,(0,t.Wm)(N,{title:"Native form",file:"QFile/NativeForm"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var D=l(17536);const H={name:"DocMarkdownPage",setup(){return{metaTitle:"File Picker",metaDesc:"The QFile Vue component is used as a file picker.",related:[{name:"上传器",category:"Vue 组件",path:"/vue-components/uploader"},{name:"输入框",category:"表单组件",path:"/vue-components/input"}],toc:[{id:"qfile-api",title:"QFile API"},{id:"design",title:"Design"},{id:"decorators",title:"Decorators",sub:!0},{id:"coloring",title:"Coloring",sub:!0},{id:"clearable",title:"Clearable",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"appending-files",title:"Appending files",sub:!0},{id:"counters",title:"Counters",sub:!0},{id:"using-chips",title:"Using chips",sub:!0},{id:"using-file-slot",title:"Using file slot",sub:!0},{id:"restricting-files",title:"Restricting files",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],copyHeading:D.Et}}};var A=l(74260);const I=(0,A.Z)(H,[["render",W]]),N=I}}]);