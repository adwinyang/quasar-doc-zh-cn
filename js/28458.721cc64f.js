"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[28458],{28458:(e,a,t)=>{t.r(a),t.d(a,{default:()=>h});var i=t(83673);const r=(0,i._)("p",null,"The QLinearProgress component displays a colored loading bar. The bar can either have a determinate progress or an indeterminate animation. It should be used to inform the user that an action is occurring in the background.",-1),s=(0,i._)("div",{class:"doc-note doc-note--tip"},[(0,i._)("p",{class:"doc-note__title"},"TIP"),(0,i._)("p",null,[(0,i.Uk)("For indeterminate state (above) or query state (below) you don’t need to specify the "),(0,i._)("code",{class:"doc-token"},"value"),(0,i.Uk)(" property.")])],-1),n=(0,i._)("p",null,"To add a label to the progress bar you can use the default slot. Take care to:",-1),o=(0,i._)("ul",null,[(0,i._)("li",null,[(0,i.Uk)("use a "),(0,i._)("code",{class:"doc-token"},"size"),(0,i.Uk)(" big enough to allow showing the label")]),(0,i._)("li",null,"set a text color for the label so that it is visible both on the filled and unfilled areas, or use text-shadow CSS, or use a QBadge as in the example below")],-1);function l(e,a,t,l,d,c){const g=(0,i.up)("doc-api"),u=(0,i.up)("doc-example"),h=(0,i.up)("doc-page");return(0,i.wg)(),(0,i.j4)(h,{"meta-title":l.metaTitle,title:"Linear Progress",related:l.related,toc:l.toc,"meta-desc":l.metaDesc},{default:(0,i.w5)((()=>[r,(0,i._)("h2",{id:"qlinearprogress-api",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=e=>l.copyHeading("qlinearprogress-api"))},"QLinearProgress API"),(0,i.Wm)(g,{file:"QLinearProgress"}),(0,i._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=e=>l.copyHeading("usage"))},"Usage"),(0,i._)("h3",{id:"determined-state",class:"doc-heading doc-h3",onClick:a[2]||(a[2]=e=>l.copyHeading("determined-state"))},"Determined state"),(0,i.Wm)(u,{title:"Determined state",file:"QLinearProgress/Determinate"}),(0,i._)("h3",{id:"indeterminate-state",class:"doc-heading doc-h3",onClick:a[3]||(a[3]=e=>l.copyHeading("indeterminate-state"))},"Indeterminate state"),(0,i.Wm)(u,{title:"Indeterminate state",file:"QLinearProgress/Indeterminate"}),s,(0,i.Wm)(u,{title:"Query state",file:"QLinearProgress/Query"}),(0,i._)("h3",{id:"reversed",class:"doc-heading doc-h3",onClick:a[4]||(a[4]=e=>l.copyHeading("reversed"))},"Reversed"),(0,i.Wm)(u,{title:"Reverse progress direction",file:"QLinearProgress/Reverse"}),(0,i._)("h3",{id:"style",class:"doc-heading doc-h3",onClick:a[5]||(a[5]=e=>l.copyHeading("style"))},"Style"),(0,i.Wm)(u,{title:"Custom height",file:"QLinearProgress/CustomHeight"}),(0,i.Wm)(u,{title:"Standard sizes",file:"QLinearProgress/StandardSizes"}),(0,i.Wm)(u,{title:"Stripe",file:"QLinearProgress/Stripe"}),(0,i.Wm)(u,{title:"On a dark background",file:"QLinearProgress/OnDarkBackground",dark:""}),(0,i._)("h3",{id:"buffer",class:"doc-heading doc-h3",onClick:a[6]||(a[6]=e=>l.copyHeading("buffer"))},"Buffer"),(0,i.Wm)(u,{title:"Buffer",file:"QLinearProgress/Buffering"}),(0,i._)("h3",{id:"with-a-label",class:"doc-heading doc-h3",onClick:a[7]||(a[7]=e=>l.copyHeading("with-a-label"))},"With a label"),n,o,(0,i.Wm)(u,{title:"With a label",file:"QLinearProgress/Label"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var d=t(17536);const c={name:"DocMarkdownPage",setup(){return{metaTitle:"Linear Progress",metaDesc:"The QLinearProgress Vue component displays a colored loading bar. The bar can either have a determinate progress or an indeterminate animation.",related:[{name:"圆环进度条",category:"Vue 组件",path:"/vue-components/circular-progress"},{name:"内部加载",category:"Vue 组件",path:"/vue-components/inner-loading"},{name:"旋转器",category:"Vue 组件",path:"/vue-components/spinners"},{name:"加载",category:"Quasar 插件",path:"/quasar-plugins/loading"},{name:"装载条",category:"Quasar 插件",path:"/quasar-plugins/loading-bar"}],toc:[{id:"qlinearprogress-api",title:"QLinearProgress API"},{id:"usage",title:"Usage"},{id:"determined-state",title:"Determined state",sub:!0},{id:"indeterminate-state",title:"Indeterminate state",sub:!0},{id:"reversed",title:"Reversed",sub:!0},{id:"style",title:"Style",sub:!0},{id:"buffer",title:"Buffer",sub:!0},{id:"with-a-label",title:"With a label",sub:!0}],copyHeading:d.Et}}};var g=t(74260);const u=(0,g.Z)(c,[["render",l]]),h=u}}]);