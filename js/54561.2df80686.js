"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[54561],{54561:(a,e,t)=>{t.r(e),t.d(e,{default:()=>h});var s=t(83673);const n=(0,s._)("p",null,"当把一个项目文件夹(由 Quasar CLI 创建)与现有的后端集成时，一个常见的需求是在使用开发服务器时访问后端API。为了达到这个目的，我们可以同时运行开发服务器和API后端(或远程)，并让开发服务器代理所有的API请求到实际的后端。",-1),o=(0,s._)("p",null,"如果你在API请求中访问相对路径，这很有用。很明显，这些相对路径在你开发的时候可能不会起作用。为了创建一个类似于你部署的网站/应用所使用的环境，你可以代理你的API请求。",-1),r=(0,s.Uk)("为了配置代理规则，编辑"),p=(0,s._)("code",{class:"doc-token"},"/quasar.conf.js",-1),c=(0,s.Uk)("中的"),l=(0,s._)("code",{class:"doc-token"},"devServer.proxy",-1),k=(0,s.Uk)("。你应该参考"),u=(0,s.Uk)("Webpack Dev Server Proxy"),i=(0,s.Uk)(" docs以了解详细的用法。但这里有一个简单的示例。"),_=(0,s._)("pre",{class:"doc-code language-js"},[(0,s._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,s._)("span",{class:"token comment"},"// quasar.conf.js"),(0,s.Uk)("\n\n"),(0,s._)("span",{class:"token literal-property property"},"devServer"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token literal-property property"},"proxy"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 代理所有以/api开头的请求到jsonplaceholder。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token string-property property"},"'/api'"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n      "),(0,s._)("span",{class:"token literal-property property"},"target"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'http://some.api.target.com:7070'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n      "),(0,s._)("span",{class:"token literal-property property"},"changeOrigin"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n      "),(0,s._)("span",{class:"token literal-property property"},"pathRewrite"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token string-property property"},"'^/api'"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"''"),(0,s.Uk)("\n      "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n"),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n")])],-1),d=(0,s._)("p",null,[(0,s.Uk)("上面的示例将代理请求"),(0,s._)("code",{class:"doc-token"},"/api/posts/1"),(0,s.Uk)("到"),(0,s._)("code",{class:"doc-token"},"http://some.api.target.com:7070/posts/1"),(0,s.Uk)("。")],-1);function U(a,e,t,U,g,y){const m=(0,s.up)("doc-link"),v=(0,s.up)("doc-page");return(0,s.wg)(),(0,s.j4)(v,{"meta-title":U.metaTitle,title:"用于开发的API代理",related:U.related,nav:U.nav,toc:U.toc,"meta-desc":U.metaDesc},{default:(0,s.w5)((()=>[n,o,(0,s._)("p",null,[r,p,c,l,k,(0,s.Wm)(m,{to:"https://webpack.js.org/configuration/dev-server/#devserver-proxy"},{default:(0,s.w5)((()=>[u])),_:1}),i]),_,d])),_:1},8,["meta-title","related","nav","toc","meta-desc"])}var g=t(17536);const y={name:"DocMarkdownPage",setup(){return{metaTitle:"用于开发的API代理",metaDesc:"如何在 Quasar 开发服务器上使用API代理。",related:[{name:"quasar.conf.js",category:"Quasar CLI",path:"/quasar-cli/quasar-conf-js"}],nav:[{name:"预取功能",category:"Quasar CLI",path:"/quasar-cli/prefetch-feature",dir:"left"},{name:"处理 Webpack",category:"Quasar CLI",path:"/quasar-cli/handling-webpack",dir:"right"}],toc:[],copyHeading:g.Et}}};var m=t(74260);const v=(0,m.Z)(y,[["render",U]]),h=v}}]);