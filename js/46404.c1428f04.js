"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[46404],{46404:(n,a,s)=>{s.r(a),s.d(a,{default:()=>E});var e=s(83673);const t=(0,e._)("p",null,'我们将使用 Quasar CLI 来开发和构建一个Electron App。构建SPA、PWA、移动应用或Electron应用之间的区别只是由 "quasar dev "和 "quasar build "命令中的 "mode "参数决定。',-1),o=(0,e._)("p",null,"但首先，让我们学习一下如何配置Electron构建。",-1),c=(0,e._)("p",null,[(0,e.Uk)("你可能会注意到，"),(0,e._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,e.Uk)("包含一个名为 "),(0,e._)("code",{class:"doc-token"},"Electron"),(0,e.Uk)(" 的属性。")],-1),p=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"// 如果你想改变默认文件"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"// (注意到没有扩展名，所以它可以解析为.js和.ts)"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token literal-property property"},"sourceFiles"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"electronMain"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'src-electron/electron-main'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"electronPreload"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'src-electron/electron-preload'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"//  Electron 配置"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token literal-property property"},"electron"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"bundler"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'packager'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// or 'builder'"),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"//  Electron 包装器选项"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// https://electron.github.io/electron-packager/master/"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"packager"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//..."),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"//  Electron 构建器选项"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// https://www.electron.build/configuration/configuration"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"builder"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//..."),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 在yarn/npm安装时指定额外参数"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 捆绑前，在未打包的文件夹中，与以下任何一种文件捆绑在一起"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"//  Electron 包装师或 Electron 建造师。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 示例：['--ignore-optional', '--some-other-param' ]"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"unPackagedInstallParams"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 可选；添加/删除/更改属性"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 生产中生成的软件包.json的"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"extendPackageJson"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"pkg"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 直接改变属性的包。"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 不需要归还任何东西"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 可选的；webpack的配置对象"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 只有主进程(/src-electron/main-process/electron-main.js)。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"extendWebpackMain"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"cfg"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 直接改变cfg的props。"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 不需要归还任何东西"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// optional; 等同于extendWebpackMain()，但使用webpack-chain。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 仅用于主进程(/src-electron/main-process/electron-main.js)。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"chainWebpackMain"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"chain"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 链是一个webpack-chain实例"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 的Webpack配置"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"// 示例："),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// chain.plugin('eslint-webpack-plugin')"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//   .use(ESLintPlugin, [{ extensions: [ 'js' ] }] )"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// 可选的；webpack的配置对象"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 只有预加载过程(/src-electron/main-process/electron-preload.js)。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"extendWebpackPreload"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"cfg"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 直接改变cfg的props。"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 不需要归还任何东西"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n\n  "),(0,e._)("span",{class:"token comment"},"// optional; 等同于extendWebpackPreload()，但使用webpack-chain。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 仅用于预加载过程(/src-electron/main-process/electron-preload.js)。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token function"},"chainWebpackPreload"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"chain"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 链是一个webpack-chain实例"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// 的Webpack配置"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token comment"},"// 示例："),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"// chain.plugin('eslint-webpack-plugin')"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token comment"},"//   .use(ESLintPlugin, [{ extensions: [ 'js' ] }] )"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),l=(0,e.Uk)("“packager” 属性指的是"),k=(0,e.Uk)("electron-packager 选项"),r=(0,e.Uk)(" 。"),u=(0,e._)("code",{class:"doc-token"},"dir",-1),i=(0,e.Uk)("和"),_=(0,e._)("code",{class:"doc-token"},"out",-1),m=(0,e.Uk)("属性会被 Quasar CLI 覆盖以确保最佳效果。"),U=(0,e.Uk)('builder "属性指的是'),d=(0,e.Uk)("electron-builder 选项"),g=(0,e.Uk)("。"),b=(0,e._)("p",null,"你必须选择使用打包器或构建器。它们都是优秀的开源项目，但是它们的需求略有不同。使用packager，你将能够从一台机器上为所有主要的平台构建未签署的项目(有限制)。虽然这很好，但如果你只是想做一些快速和肮脏的事情，在构建器中有更多的平台粒度(和一般抛光)。在一台电脑上交叉编译你的二进制文件，在builder中并不奏效(或者我们还没有找到配方…)。",-1);function h(n,a,s,h,f,y){const w=(0,e.up)("doc-link"),j=(0,e.up)("doc-page");return(0,e.wg)(),(0,e.j4)(j,{"meta-title":h.metaTitle,title:"配置 Electron",related:h.related,nav:h.nav,toc:h.toc,"meta-desc":h.metaDesc},{default:(0,e.w5)((()=>[t,o,(0,e._)("h2",{id:"quasar-conf-js",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=n=>h.copyHeading("quasar-conf-js"))},"Quasar.conf.js"),c,p,(0,e._)("p",null,[l,(0,e.Wm)(w,{to:"https://github.com/electron-userland/electron-packager/blob/master/docs/api.md#options"},{default:(0,e.w5)((()=>[k])),_:1}),r,u,i,_,m]),(0,e._)("p",null,[U,(0,e.Wm)(w,{to:"https://www.electron.build/configuration/configuration"},{default:(0,e.w5)((()=>[d])),_:1}),g]),(0,e._)("h2",{id:"打包者与构建者",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=n=>h.copyHeading("打包者与构建者"))},"打包者与构建者"),b])),_:1},8,["meta-title","related","nav","toc","meta-desc"])}var f=s(17536);const y={name:"DocMarkdownPage",setup(){return{metaTitle:"配置 Electron",metaDesc:"如何用 Quasar CLI 管理你的 Electron 应用程序。",related:[{name:"quasar.conf.js",category:"Quasar CLI",path:"/quasar-cli/quasar-conf-js"}],nav:[{name:"准备工作",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/preparation",dir:"left"},{name:"Electron 应用图标",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/app-icons-electron",dir:"right"}],toc:[{id:"quasar-conf-js",title:"Quasar.conf.js"},{id:"打包者与构建者",title:"打包者与构建者"}],copyHeading:f.Et}}};var w=s(74260);const j=(0,w.Z)(y,[["render",h]]),E=j}}]);