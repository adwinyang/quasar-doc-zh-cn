"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[34588],{34588:(l,e,t)=>{t.r(e),t.d(e,{default:()=>C});var c=t(83673);const o=(0,c._)("p",null,"QVirtualScroll 组件允许你只显示一长串项目的一部分，并在用户在容器中滚动时更新可见项目。这有几个好处：只有可见的项目被渲染，所以在任何给定的时间点，DOM树中的节点数量最少，内存消耗也保持在最低水平。",-1),i=(0,c._)("p",null,"目前有两种类型的 QVirtualScroll 。“list(列表)”(使用QItems)和 “table(表格)”(使用表格风格来显示数据行)。",-1),a=(0,c._)("div",{class:"doc-note doc-note--tip"},[(0,c._)("p",{class:"doc-note__title"},"TIP"),(0,c._)("ul",null,[(0,c._)("li",null,[(0,c.Uk)("(Composition API) 为了在使用大型列表时获得最佳性能，不要用ref()/computed()/reactive()/etc.包裹你在"),(0,c._)("code",{class:"doc-token"},"items"),(0,c.Uk)("属性中传递的数组。这允许Vue跳过使列表对变化做出 “响应”。")]),(0,c._)("li",null,[(0,c.Uk)("(Options API) 为了在使用大型列表时获得最佳性能，可以使用"),(0,c._)("code",{class:"doc-token"},"Object.freeze(items)"),(0,c.Uk)("来冻结你在"),(0,c._)("code",{class:"doc-token"},"items"),(0,c.Uk)("属性中传递的数组。这允许Vue跳过使列表对变化做出 “响应”。")]),(0,c._)("li",null,[(0,c.Uk)("将被渲染的项目数量将根据"),(0,c._)("code",{class:"doc-token"},"virtual-scroll-item-size"),(0,c.Uk)("属性和可滚动区域的大小来计算，但你可以使用"),(0,c._)("code",{class:"doc-token"},"virtual-scroll-slice-size"),(0,c.Uk)("属性来适应你的需求。")]),(0,c._)("li",null,[(0,c.Uk)("使用"),(0,c._)("code",{class:"doc-token"},"virtual-scroll-item-size"),(0,c.Uk)("来指定元素的大小(高度的像素，如果是水平的，则是宽度)。当一个元素在屏幕上被渲染后，它的尺寸会自动更新，但如果你指定一个接近真实尺寸的元素尺寸，你会得到一个更好的滚动位置的初始指示。不管你是否会使用这个属性，QVirtualScroll 仍然可以工作，但如果没有它，你可能会遇到连续滚动时滚动条不跟随鼠标抓取位置的情况(在桌面上)，或者在移动端连续滚动时，容器的实际滚动会稍微偏离一到两个元素。")])])],-1),d=(0,c._)("div",{class:"doc-note doc-note--warning"},[(0,c._)("p",{class:"doc-note__title"},"WARNING"),(0,c._)("p",null,"每个浏览器都有一个滚动容器的最大高度。在IE11中，这个高度大约是100万像素，而在其他浏览器中，这个高度要大得多，但仍然有限。")],-1),n=(0,c._)("p",null,"滚动下面的示例以查看 QVirtualScroll 的运行情况。",-1),s=(0,c._)("p",null,[(0,c.Uk)("注意"),(0,c._)("code",{class:"doc-token"},'type="table"'),(0,c.Uk)("属性。")],-1),r=(0,c._)("p",null,"带有随内容一起滚动的标题(不停留在原地)。",-1),u=(0,c._)("p",null,'注意(在下面的例子中)使表头和表脚 "粘 "起来所需的CSS。还要注意定义页眉和页脚内容的附加范围槽。',-1),_=(0,c._)("p",null,"下面是一个更复杂的例子，使用粘性页眉和页脚。",-1),p=(0,c._)("p",null,[(0,c.Uk)("如果你需要指定滚动目标(因为自动检测的目标不是你想要的)，请将一个CSS选择器(作为字符串)或DOM元素传递给"),(0,c._)("code",{class:"doc-token"},"scroll-target"),(0,c.Uk)("属性。")],-1),k=(0,c._)("p",null,[(0,c.Uk)("如果你需要使用整个页面的虚拟列表作为滚动元素，请设置"),(0,c._)("code",{class:"doc-token"},'scroll-target="body"'),(0,c.Uk)("。")],-1),m=(0,c._)("div",{class:"doc-note doc-note--warning"},[(0,c._)("p",{class:"doc-note__title"},"WARNING"),(0,c._)("ul",null,[(0,c._)("li",null,[(0,c.Uk)("如果你用"),(0,c._)("code",{class:"doc-token"},"scroll-target"),(0,c.Uk)("属性传递一个自定义的滚动目标容器，你必须确保该元素的存在，并且它可以被溢出(它必须有一个最大高度和一个允许滚动的溢出)。")]),(0,c._)("li",null,"如果滚动目标容器不能被溢出，你会得到整个列表的渲染。")])],-1),g=(0,c._)("div",{class:"doc-note doc-note--danger"},[(0,c._)("p",{class:"doc-note__title"},"WARNING"),(0,c._)("p",null,"如果你想为`scroll-target’使用Vue引用，请注意在安装组件后设置它，就像下面的例子。")],-1),h=(0,c._)("p",null,[(0,c.Uk)("你也可以通过使用"),(0,c._)("code",{class:"doc-token"},"items-fn"),(0,c.Uk)("属性来生成要在列表上显示的项目。")],-1),S=(0,c._)("div",{class:"doc-note doc-note--warning"},[(0,c._)("p",{class:"doc-note__title"},"WARNING"),(0,c._)("p",null,"请确保使用一个同步函数来返回要显示的项目列表。")],-1),V=(0,c._)("p",null,"如果你需要异步数据，请使用一个能检索和渲染数据的组件。",-1),v=(0,c._)("p",null,"有两个CSS类，你可以使用(如果你需要的话)来控制 VirtualScroll 的大小计算：",-1),f=(0,c._)("ul",null,[(0,c._)("li",null,[(0,c.Uk)("在 VirtualScroll 渲染的元素上使用"),(0,c._)("code",{class:"doc-token"},"q-virtual-scroll--with-prev"),(0,c.Uk)("类，表示该元素应与前一个元素分组(主要用例是由同一行数据生成的多个表格行)。")]),(0,c._)("li",null,[(0,c.Uk)("在 VirtualScroll 渲染的元素上使用"),(0,c._)("code",{class:"doc-token"},"q-virtual-scroll--skip"),(0,c.Uk)("类，以表示在计算大小时应忽略该元素的大小。")])],-1);function Q(l,e,t,Q,U,b){const W=(0,c.up)("doc-api"),y=(0,c.up)("doc-example"),C=(0,c.up)("doc-page");return(0,c.wg)(),(0,c.j4)(C,{"meta-title":Q.metaTitle,title:"虚拟滚动",related:Q.related,nav:Q.nav,toc:Q.toc,"meta-desc":Q.metaDesc},{default:(0,c.w5)((()=>[o,i,(0,c._)("h2",{id:"qvirtualscroll-api",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=l=>Q.copyHeading("qvirtualscroll-api"))},"QVirtualScroll API"),(0,c.Wm)(W,{file:"QVirtualScroll"}),(0,c._)("h2",{id:"使用方法",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=l=>Q.copyHeading("使用方法"))},"使用方法"),a,d,n,(0,c._)("h3",{id:"基础",class:"doc-heading doc-h3",onClick:e[2]||(e[2]=l=>Q.copyHeading("基础"))},"基础"),(0,c.Wm)(y,{title:"基础",file:"QVirtualScroll /Basic"}),(0,c._)("h3",{id:"横向",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=l=>Q.copyHeading("横向"))},"横向"),(0,c.Wm)(y,{title:"水平",file:"QVirtualScroll /BasicHorizontal"}),(0,c._)("h3",{id:"不同的模板",class:"doc-heading doc-h3",onClick:e[4]||(e[4]=l=>Q.copyHeading("不同的模板"))},"不同的模板"),(0,c.Wm)(y,{title:"项目的不同模板",file:"QVirtualScroll /VariousContent"}),(0,c.Wm)(y,{title:"水平项目的不同模板",file:"QVirtualScroll /VariousContentHorizontal"}),(0,c._)("h3",{id:"表格类型",class:"doc-heading doc-h3",onClick:e[5]||(e[5]=l=>Q.copyHeading("表格类型"))},"表格类型"),s,(0,c.Wm)(y,{title:"基本表格",file:"QVirtualScroll/TableBasic"}),r,(0,c.Wm)(y,{title:"带有滚动页眉/页脚的表格",file:"QVirtualScroll/TableBasicHeader"}),u,(0,c.Wm)(y,{title:"粘性表头",file:"QVirtualScroll/TableSticky"}),_,(0,c.Wm)(y,{title:"使用粘性页眉",file:"QVirtualScroll/TableSticky2"}),(0,c._)("h3",{id:"滚动目标",class:"doc-heading doc-h3",onClick:e[6]||(e[6]=l=>Q.copyHeading("滚动目标"))},"滚动目标"),p,k,m,g,(0,c.Wm)(y,{title:"按id自定义滚动目标",file:"QVirtualScroll/ScrollTargetId"}),(0,c.Wm)(y,{title:"通过ref自定义滚动目标",file:"QVirtualScroll/ScrollTargetRef"}),(0,c.Wm)(y,{title:"使用QScrollArea",file:"QVirtualScroll/ScrollArea"}),(0,c._)("h3",{id:"滚动到位置",class:"doc-heading doc-h3",onClick:e[7]||(e[7]=l=>Q.copyHeading("滚动到位置"))},"滚动到位置"),(0,c.Wm)(y,{title:"滚动到位置",file:"QVirtualScroll/ScrollTo"}),(0,c._)("h3",{id:"同步和异步",class:"doc-heading doc-h3",onClick:e[8]||(e[8]=l=>Q.copyHeading("同步和异步"))},"同步和异步"),h,S,V,(0,c.Wm)(y,{title:"实时生成项目",file:"QVirtualScroll/GenerateItems"}),(0,c._)("h3",{id:"实用类",class:"doc-heading doc-h3",onClick:e[9]||(e[9]=l=>Q.copyHeading("实用类"))},"实用类"),v,f,(0,c.Wm)(y,{title:"一个数据行有多行的虚拟滚动",file:"QTable/VirtscrollMultipleRows"}),(0,c.Wm)(y,{title:"带有扩展模型的虚拟滚动",file:"QTable/VirtscrollExpandedRow"})])),_:1},8,["meta-title","related","nav","toc","meta-desc"])}var U=t(17536);const b={name:"DocMarkdownPage",setup(){return{metaTitle:"虚拟滚动",metaDesc:"当用户在容器中滚动时，QVirtualScroll 组件会渲染一个大的项目列表，保持DOM树的整洁，并尽可能减少内存消耗。",related:[{name:"选择框",category:"表单组件",path:"/vue-components/select"},{name:"无限滚动",category:"Vue 组件",path:"/vue-components/infinite-scroll"}],nav:[{name:"视频",category:"Vue 组件",path:"/vue-components/video",dir:"left"},{name:"关闭弹出窗口",category:"Vue 指令",path:"/vue-directives/close-popup",dir:"right"}],toc:[{id:"qvirtualscroll-api",title:"QVirtualScroll  API"},{id:"使用方法",title:"使用方法"},{id:"基础",title:"基础",sub:!0},{id:"横向",title:"横向",sub:!0},{id:"不同的模板",title:"不同的模板",sub:!0},{id:"表格类型",title:"表格类型",sub:!0},{id:"滚动目标",title:"滚动目标",sub:!0},{id:"滚动到位置",title:"滚动到位置",sub:!0},{id:"同步和异步",title:"同步和异步",sub:!0},{id:"实用类",title:"实用类",sub:!0}],copyHeading:U.Et}}};var W=t(74260);const y=(0,W.Z)(b,[["render",Q]]),C=y}}]);