"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[65646],{65646:(e,l,o)=>{o.r(l),o.d(l,{default:()=>f});var a=o(83673);const i=(0,a._)("p",null,[(0,a.Uk)("The QScrollArea component offers a neat way of customizing the scrollbars by encapsulating your content. Think of it as a DOM element which has "),(0,a._)("code",{class:"doc-token"},"overflow: auto"),(0,a.Uk)(", but with your own custom styled scrollbar instead of browser’s default one and a few nice features on top.")],-1),t=(0,a._)("p",null,"The following examples are best seen on desktop as they make too little sense on a mobile device.",-1),c={class:"doc-note doc-note--tip"},r=(0,a._)("p",{class:"doc-note__title"},"TIP",-1),n=(0,a.Uk)("You can also take a look at "),s=(0,a.Uk)("Layout Drawer"),d=(0,a.Uk)(" to see some more examples of it in action."),h=(0,a._)("p",null,[(0,a.Uk)("When using the "),(0,a._)("code",{class:"doc-token"},"visible"),(0,a.Uk)(" Boolean prop, the default mouse over/leave behavior is disabled, leaving you in full control of the scrollbar visibility.")],-1),u=(0,a._)("p",null,"When content changes, the scrollbar appears then disappears again. You can set a certain delay (amount of time in milliseconds) before scrollbar disappears again (if component is not hovered):",-1),p=(0,a._)("p",null,[(0,a.Uk)("Below is an example of using the "),(0,a._)("code",{class:"doc-token"},"@scroll"),(0,a.Uk)(" event to synchronize the scrolling between two containers.")],-1);function y(e,l,o,y,b,g){const m=(0,a.up)("doc-api"),k=(0,a.up)("doc-link"),f=(0,a.up)("doc-example"),S=(0,a.up)("doc-page");return(0,a.wg)(),(0,a.j4)(S,{"meta-title":y.metaTitle,title:"Scroll Area",related:y.related,toc:y.toc,"meta-desc":y.metaDesc},{default:(0,a.w5)((()=>[i,(0,a._)("h2",{id:"qscrollarea-api",class:"doc-heading doc-h2",onClick:l[0]||(l[0]=e=>y.copyHeading("qscrollarea-api"))},"QScrollArea API"),(0,a.Wm)(m,{file:"QScrollArea"}),(0,a._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:l[1]||(l[1]=e=>y.copyHeading("usage"))},"Usage"),t,(0,a._)("div",c,[r,(0,a._)("p",null,[n,(0,a.Wm)(k,{to:"/layout/drawer"},{default:(0,a.w5)((()=>[s])),_:1}),d])]),(0,a._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:l[2]||(l[2]=e=>y.copyHeading("basic"))},"Basic"),(0,a.Wm)(f,{title:"Vertical content",file:"QScrollArea/Vertical"}),(0,a.Wm)(f,{title:"Horizontal content",file:"QScrollArea/Horizontal"}),(0,a.Wm)(f,{title:"Vertical and horizontal content",file:"QScrollArea/VertHoriz"}),(0,a._)("h3",{id:"styled",class:"doc-heading doc-h3",onClick:l[3]||(l[3]=e=>y.copyHeading("styled"))},"Styled"),(0,a.Wm)(f,{title:"Styled thumb and bar",file:"QScrollArea/StyledBar"}),(0,a.Wm)(f,{title:"Styled",file:"QScrollArea/Styled"}),(0,a._)("h3",{id:"dark",class:"doc-heading doc-h3",onClick:l[4]||(l[4]=e=>y.copyHeading("dark"))},"Dark"),(0,a.Wm)(f,{title:"Dark",file:"QScrollArea/Dark"}),(0,a._)("h3",{id:"controlling-scrollbar-visibility",class:"doc-heading doc-h3",onClick:l[5]||(l[5]=e=>y.copyHeading("controlling-scrollbar-visibility"))},"Controlling scrollbar visibility"),h,(0,a.Wm)(f,{title:"Controlling scrollbar visibility",file:"QScrollArea/ScrollbarVisibility"}),(0,a._)("h3",{id:"delay",class:"doc-heading doc-h3",onClick:l[6]||(l[6]=e=>y.copyHeading("delay"))},"Delay"),u,(0,a.Wm)(f,{title:"Delay",file:"QScrollArea/Delay"}),(0,a._)("h3",{id:"scroll-position",class:"doc-heading doc-h3",onClick:l[7]||(l[7]=e=>y.copyHeading("scroll-position"))},"Scroll position"),(0,a.Wm)(f,{title:"Scroll Position",file:"QScrollArea/ScrollPosition"}),(0,a._)("h3",{id:"scroll-event",class:"doc-heading doc-h3",onClick:l[8]||(l[8]=e=>y.copyHeading("scroll-event"))},"Scroll event"),p,(0,a.Wm)(f,{title:"Synchronized",file:"QScrollArea/Synchronized"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var b=o(17536);const g={name:"DocMarkdownPage",setup(){return{metaTitle:"Scroll Area",metaDesc:"The QScrollArea Vue component offers a way of customizing the scrollbars for all desktop browsers.",related:[{name:"布局抽屉",category:"布局和网格",path:"/layout/drawer"}],toc:[{id:"qscrollarea-api",title:"QScrollArea API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"styled",title:"Styled",sub:!0},{id:"dark",title:"Dark",sub:!0},{id:"controlling-scrollbar-visibility",title:"Controlling scrollbar visibility",sub:!0},{id:"delay",title:"Delay",sub:!0},{id:"scroll-position",title:"Scroll position",sub:!0},{id:"scroll-event",title:"Scroll event",sub:!0}],copyHeading:b.Et}}};var m=o(74260);const k=(0,m.Z)(g,[["render",y]]),f=k}}]);