"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[14264],{14264:(n,t,a)=>{a.r(t),a.d(t,{default:()=>Ln});var s=a(83673);const e=(0,s._)("p",null,"QTable是一个允许你以表格的方式显示数据的组件。它通常被称为数据表。它包含了以下主要功能。",-1),o=(0,s._)("ul",null,[(0,s._)("li",null,"筛选"),(0,s._)("li",null,"排序"),(0,s._)("li",null,"单行/多行选择与自定义选择动作"),(0,s._)("li",null,"分页(如果需要，包括服务器端)。"),(0,s._)("li",null,"网格模式(你可以使用例如QCards以非表格的方式显示数据)"),(0,s._)("li",null,"通过范围槽对行和单元格进行完全定制"),(0,s._)("li",null,"能够在数据行的顶部或底部添加额外的行。"),(0,s._)("li",null,"列选取器(通过其中一节描述的QTableColumns组件)。"),(0,s._)("li",null,"自定义顶部和/或底部的表格控件"),(0,s._)("li",null,"响应式设计")],-1),l={class:"doc-note doc-note--tip"},c=(0,s._)("p",{class:"doc-note__title"},"TIP",-1),p=(0,s.Uk)("如果你不需要分页、排序、过滤以及QTable的所有其他功能，那么你可能想看看"),i=(0,s.Uk)("QMarkupTable"),k=(0,s.Uk)("组件来代替。"),r=(0,s._)("p",null,[(0,s.Uk)("让我们举一个配置 "),(0,s._)("code",{class:"doc-token"},"columns"),(0,s.Uk)(" 属性的例子。我们要告诉QTable，"),(0,s._)("code",{class:"doc-token"},"row-key"),(0,s.Uk)(" 是 "),(0,s._)("code",{class:"doc-token"},"name"),(0,s.Uk)("，它"),(0,s._)("strong",null,"必须"),(0,s.Uk)("是唯一的。如果这是从数据库中获取的数据，我们可能会使用行的"),(0,s._)("strong",null,"id"),(0,s.Uk)("。")],-1),_=(0,s._)("pre",{class:"doc-code language-js"},[(0,s._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,s._)("span",{class:"token literal-property property"},"columns"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"["),(0,s.Uk)(),(0,s._)("span",{class:"token comment"},"// array of Objects"),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token comment"},"// 列 对象定义"),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 唯一标识"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 识别列"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},'// (由pagination.sortBy, "body-cell-[name]" slot, ...使用)'),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'desc'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// 标题的标签"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Dessert (100g serving)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// 确定此列值的行对象属性"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'name'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 或字段：row => row.some.nested.prop,"),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)如果我们使用可见列，这个列将始终是可见的。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"required"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)对齐"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"align"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'left'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)告诉QTable你想让这一列可排序。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"sortable"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)比较函数，如果你有"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 一些自定义的数据，或者想用一种特定的方式来比较两行"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token function-variable function"},"sort"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"("),(0,s._)("span",{class:"token parameter"},[(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" b"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" rowA"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" rowB")]),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"=>"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"-"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("b"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 函数的返回值。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"//   *小于0，则将a排序到比b低的索引，即a在前。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"//   *为0，那么让a和b相互之间保持不变，但对所有不同的元素进行排序"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"//   *大于0，则将b排序到比a低的索引，即b排在前面。"),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)覆盖'column-sort-order'属性。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 设置列的排序顺序。'ad'(升序-降序)或'da'(降序-升序)。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"sortOrder"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'ad'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token comment"},"// or 'da'"),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// (可选)，你可以用一个函数来格式化数据"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token function-variable function"},"format"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"("),(0,s._)("span",{class:"token parameter"},[(0,s.Uk)("val"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" row")]),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"=>"),(0,s.Uk)(),(0,s._)("span",{class:"token template-string"},[(0,s._)("span",{class:"token template-punctuation string"},"`"),(0,s._)("span",{class:"token interpolation"},[(0,s._)("span",{class:"token interpolation-punctuation punctuation"},"${"),(0,s.Uk)("val"),(0,s._)("span",{class:"token interpolation-punctuation punctuation"},"}")]),(0,s._)("span",{class:"token string"},"%"),(0,s._)("span",{class:"token template-punctuation string"},"`")]),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 再举一个格式的例子。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 格式: val => val"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},'//   ? /* 勾选Unicode复选标记 */ "\\u2611"'),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},'//   : /*Unicode复选标记未被选中 */ "\\u2610",'),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// body td:"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"style"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'width: 500px'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 或作为Function --\x3e style: row => ... (返回字符串/数组/对象)"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"classes"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'my-special-class'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token comment"},"// 或作为Function --\x3e classes: row => ... (返回字符串)"),(0,s.Uk)("\n\n    "),(0,s._)("span",{class:"token comment"},"// 头部th。"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"headerStyle"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'width: 500px'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token literal-property property"},"headerClasses"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'my-special-class'"),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'calories'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Calories'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'calories'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"sortable"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'fat'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Fat (g)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'fat'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"sortable"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'carbs'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Carbs (g)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'carbs'"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'protein'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Protein (g)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'protein'"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'sodium'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Sodium (mg)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'sodium'"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'calcium'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Calcium (%)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'calcium'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"sortable"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token function-variable function"},"sort"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"("),(0,s._)("span",{class:"token parameter"},[(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" b")]),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"=>"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"-"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("b"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)("\n  "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"name"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'iron'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"label"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'Iron (%)'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"field"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},"'iron'"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token literal-property property"},"sortable"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token boolean"},"true"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token function-variable function"},"sort"),(0,s._)("span",{class:"token operator"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"("),(0,s._)("span",{class:"token parameter"},[(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(" b")]),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"=>"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("a"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token operator"},"-"),(0,s.Uk)(),(0,s._)("span",{class:"token function"},"parseInt"),(0,s._)("span",{class:"token punctuation"},"("),(0,s.Uk)("b"),(0,s._)("span",{class:"token punctuation"},","),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"10"),(0,s._)("span",{class:"token punctuation"},")"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n"),(0,s._)("span",{class:"token punctuation"},"]"),(0,s.Uk)("\n")])],-1),d={class:"doc-note doc-note--tip"},u=(0,s._)("p",{class:"doc-note__title"},"TIP",-1),U=(0,s.Uk)("你可以使用"),m=(0,s._)("code",{class:"doc-token"},"dense",-1),g=(0,s.Uk)("属性和"),y=(0,s._)("code",{class:"doc-token"},"$q.screen",-1),b=(0,s.Uk)("来创建一个响应行为。例如："),h=(0,s._)("code",{class:"doc-token"},':dense="$q.screen.lt.md"',-1),f=(0,s.Uk)("。更多信息："),T=(0,s.Uk)("屏幕插件"),Q=(0,s.Uk)("。"),W=(0,s._)("p",null,[(0,s.Uk)("你可以省略对"),(0,s._)("code",{class:"doc-token"},"columns"),(0,s.Uk)("的指定。QTable将从数据的第一行的属性中推断出列。请注意，标签是大写的，而且排序是启用的。")],-1),C={class:"doc-note doc-note--warning"},v=(0,s._)("p",{class:"doc-note__title"},"WARNING",-1),w=(0,s.Uk)("粘性标题和列是通过CSS的"),H=(0,s._)("code",{class:"doc-token"},"position: sticky",-1),S=(0,s.Uk)("实现的。这不是所有的浏览器都支持的。在使用这种技术之前，请检查"),I=(0,s.Uk)("caniuse.com"),q=(0,s.Uk)("。"),P=(0,s._)("p",null,[(0,s.Uk)("注意，当启用虚拟滚动时，你需要指定"),(0,s._)("code",{class:"doc-token"},"table-style"),(0,s.Uk)("(有最大高度)属性。在下面的例子中，我们还强制QTable一次显示所有的行(注意使用"),(0,s._)("code",{class:"doc-token"},"pagination"),(0,s.Uk)("和"),(0,s._)("code",{class:"doc-token"},"rows-per-page-options"),(0,s.Uk)("属性)。")],-1),V=(0,s._)("p",null,"你可以在滚动到达终点时动态地加载新行。",-1),A=(0,s._)("p",null,"你可以同时拥有虚拟滚动和分页。",-1),N=(0,s._)("p",null,[(0,s.Uk)("下面的例子显示了如何将虚拟滚动与粘性标题一起使用。注意"),(0,s._)("code",{class:"doc-token"},"virtual-scroll-sticky-start"),(0,s.Uk)("属性，它被设置为标题的高度。")],-1),x=(0,s._)("p",null,"有2个实用的CSS类来控制VirtualScroll的尺寸计算。",-1),D=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Uk)("在VirtualScroll渲染的元素上使用"),(0,s._)("code",{class:"doc-token"},"q-virtual-scroll--with-prev"),(0,s.Uk)("类，表示该元素应该与前一个元素组合在一起(主要用例是由同一行数据生成的多个表格行)。")]),(0,s._)("li",null,[(0,s.Uk)("在VirtualScroll渲染的元素上使用"),(0,s._)("code",{class:"doc-token"},"q-virtual-scroll--skip"),(0,s.Uk)("类，表示在计算尺寸时应忽略该元素的尺寸。")])],-1),E=(0,s._)("div",{class:"doc-note doc-note--warning"},[(0,s._)("p",{class:"doc-note__title"},"WARNING"),(0,s._)("p",null,[(0,s.Uk)("为了使选择正常工作，必须设置属性"),(0,s._)("code",{class:"doc-token"},"row-key"),(0,s.Uk)("。")])],-1),R=(0,s._)("p",null,'请注意，被标记为 "必需 "的列(在列的定义中)不能被切换，总是可见的。',-1),B=(0,s._)("div",{class:"doc-note doc-note--tip"},[(0,s._)("p",{class:"doc-note__title"},"TIP"),(0,s._)("p",null,[(0,s.Uk)("下面是一个例子，用户可以在"),(0,s._)("strong",null,"QPopupEdit"),(0,s.Uk)('组件的帮助下 "就地 "编辑。请注意，我们使用的是 "body "范围的槽。'),(0,s._)("strong",null,"QPopupEdit"),(0,s.Uk)("不会在单元格范围内工作。")])],-1),G={class:"doc-note doc-note--tip"},$=(0,s._)("p",{class:"doc-note__title"},"TIP",-1),j=(0,s.Uk)("你可以使用"),F=(0,s._)("code",{class:"doc-token"},"grid",-1),M=(0,s.Uk)("属性和"),L=(0,s._)("code",{class:"doc-token"},"$q.screen",-1),O=(0,s.Uk)("来创建一个响应式的行为。例如："),z=(0,s._)("code",{class:"doc-token"},':grid="$q.screen.lt.md"',-1),K=(0,s.Uk)("。更多信息："),Z=(0,s.Uk)("屏幕插件"),J=(0,s.Uk)("。"),X=(0,s._)("p",null,"在下面的例子中，我们让QTable来处理显示网格模式(不使用具体的槽)。",-1),Y=(0,s._)("p",null,"然而，如果你想完全自定义内容，请查看下面的例子，其中。",-1),nn=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Uk)("我们使用Vue的一个叫"),(0,s._)("code",{class:"doc-token"},"item"),(0,s.Uk)("的范围槽来定义每条记录(相当于非网格模式下的一行)的外观。这允许你完全自由。")]),(0,s._)("li",null,"我们正在使用多重选择。")],-1),tn=(0,s._)("div",{class:"doc-note doc-note--warning"},[(0,s._)("p",{class:"doc-note__title"},"WARNING"),(0,s._)("p",null,[(0,s.Uk)("如果你从数据中的一行生成多个QTr，在QTr上添加唯一(不同)的"),(0,s._)("code",{class:"doc-token"},"key"),(0,s.Uk)("。")])],-1),an=(0,s._)("p",null,"也可以使用一个外部扩展模型。",-1),sn=(0,s._)("p",null,"如果你使用QTable的虚拟滚动，你应该知道有2个实用的CSS类来控制VirtualScroll的大小计算。",-1),en=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Uk)("在虚拟滚动渲染的元素上使用"),(0,s._)("code",{class:"doc-token"},"q-virtual-scroll--with-prev"),(0,s.Uk)("类，表示该元素应与前一个元素分组(主要用例是由同一行数据生成的多个表格行)。")]),(0,s._)("li",null,[(0,s.Uk)("在VirtualScroll渲染的元素上使用"),(0,s._)("code",{class:"doc-token"},"q-virtual-scroll--skip"),(0,s.Uk)("类，表示在计算尺寸时应忽略该元素的尺寸。")])],-1),on=(0,s._)("div",{class:"doc-note doc-note--tip"},[(0,s._)("p",{class:"doc-note__title"},"TIP"),(0,s._)("p",null,[(0,s.Uk)('当 "分页 "有一个名为 "rowsNumber "的属性时，这意味着你将为'),(0,s._)("strong",null,"服务器"),(0,s.Uk)('方的分页(以及排序和过滤)配置Table。参见*"服务器端分页、过滤和排序 "*部分。')])],-1),ln=(0,s._)("p",null,"下面是两个处理分页的例子(以及每页的排序和行数)。",-1),cn=(0,s._)("p",null,"第一个例子强调了如何配置初始分页。",-1),pn=(0,s._)("p",null,'第二个例子使用了 "v-model:pagination "指令，因为我们想在任何时候访问其当前值。下面这个技术的一个用例可以是在QTable之外控制分页。',-1),kn=(0,s._)("p",null,"为了学习，我们将用默认的控件来定制分页控件，以便帮助你开始使用你自己的控件。",-1),rn=(0,s._)("p",null,"下面的例子显示了你如何使用槽来定制整个行。",-1),_n=(0,s._)("p",null,"下面，我们使用一个槽，它被应用于每个体单元。",-1),dn=(0,s._)("p",null,[(0,s.Uk)("我们也可以只定制一个特定的列。这个槽的语法是"),(0,s._)("code",{class:"doc-token"},"body-cell-[name]"),(0,s.Uk)("，其中"),(0,s._)("code",{class:"doc-token"},"[name]"),(0,s.Uk)("应该由作为行键的每一行的属性代替。")],-1),un=(0,s._)("p",null,"下面的例子显示了你如何使用槽来定制整个标题行。",-1),Un=(0,s._)("p",null,"下面，我们使用一个槽，它被应用到每个标题单元。",-1),mn=(0,s._)("p",null,[(0,s.Uk)("我们也可以只定制一个特定的标题单元。这个槽的语法是"),(0,s._)("code",{class:"doc-token"},"header-cell-[name]"),(0,s.Uk)("，其中"),(0,s._)("code",{class:"doc-token"},"[name]"),(0,s.Uk)("应该被用作行键的每一行的属性所代替。")],-1),gn=(0,s._)("p",null,'还有一个 "无数据 "的范围槽(见下文)，你也可以自定义过滤器没有返回任何结果或表没有数据可显示时的信息。也可以在 "搜索 "输入中键入一些内容。',-1),yn=(0,s._)("p",null,"有几个属性可以用来隐藏底层或它的特定部分。你可以在下面玩一下。",-1),bn=(0,s.Uk)("为了创建响应式表格，我们有两个工具可以使用。"),hn=(0,s._)("code",{class:"doc-token"},"密集",-1),fn=(0,s.Uk)("和"),Tn=(0,s._)("code",{class:"doc-token"},"网格",-1),Qn=(0,s.Uk)("属性。我们可以用"),Wn=(0,s._)("code",{class:"doc-token"},"$q.screen",-1),Cn=(0,s.Uk)("来连接这些。更多信息："),vn=(0,s.Uk)("屏幕插件"),wn=(0,s.Uk)("。"),Hn=(0,s._)("p",null,[(0,s.Uk)("下面的第一个例子使用"),(0,s._)("code",{class:"doc-token"},"$q.screen.lt.md"),(0,s.Uk)("(用于启用密集模式)，第二个例子使用"),(0,s._)("code",{class:"doc-token"},"$q.screen.xs"),(0,s.Uk)("来启用网格模式，所以要玩玩浏览器的宽度来看看它们的作用。")],-1),Sn=(0,s._)("p",null,[(0,s.Uk)("当你的数据库包含大量的表的行时，由于多种原因(内存、UI渲染性能…)，将它们全部加载显然是不可行的。相反，你可以只加载一个表页。每当用户想浏览另一个表页，或想按列排序，或想过滤表时，就会向"),(0,s._)("strong",null,"服务器发送一个"),(0,s.Uk)("请求，以获取部分分页的数据。")],-1),In=(0,s._)("ol",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("启用这一行为的第一步是指定"),(0,s._)("code",{class:"doc-token"},"pagination"),(0,s.Uk)("属性，其中必须包含"),(0,s._)("code",{class:"doc-token"},"rowsNumber"),(0,s.Uk)("。QTable需要知道可用的总行数，以便正确呈现分页链接。如果过滤导致"),(0,s._)("code",{class:"doc-token"},"rowsNumber"),(0,s.Uk)("改变，那么它必须被动态修改。")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("第二步是监听QTable上的"),(0,s._)("code",{class:"doc-token"},"@request"),(0,s.Uk)("事件。当需要从**服务器上获取数据时，这个事件就会被触发，因为页码、排序或过滤发生了变化。")])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("3.你最好同时指定"),(0,s._)("code",{class:"doc-token"},"loading"),(0,s.Uk)("属性，以便通知用户一个后台进程正在进行。")])])],-1),qn=(0,s._)("div",{class:"doc-note doc-note--tip"},[(0,s._)("p",{class:"doc-note__title"},"TIP"),(0,s._)("p",null,"在下面的例子中，已经采取了一些步骤来模拟对服务器的ajax调用。虽然概念是相似的，但如果你使用这段代码，你将需要做适当的修改以连接到你自己的数据源。")],-1),Pn=(0,s.Uk)("下面是一个天真的csv编码的例子，然后通过使用"),Vn=(0,s.Uk)("exportFile"),An=(0,s.Uk)("Quasar工具导出表格数据。浏览器应该会触发一个文件下载。对于更专业的编码方法，我们确实推荐使用"),Nn=(0,s.Uk)("csv-parse"),xn=(0,s.Uk)("和"),Dn=(0,s.Uk)("csv-stringify"),En=(0,s.Uk)("软件包。"),Rn=(0,s._)("div",{class:"doc-note doc-note--tip"},[(0,s._)("p",{class:"doc-note__title"},"TIP"),(0,s._)("p",null,[(0,s.Uk)("如果你想导出用户过滤+排序的数据，你也可以利用QTable的"),(0,s._)("code",{class:"doc-token"},"filteredSortedRows"),(0,s.Uk)("内部计算属性。")])],-1),Bn=(0,s._)("p",null,[(0,s.Uk)("下面是一个使用选定行在表中进行键盘导航的例子。使用"),(0,s._)("code",{class:"doc-token"},"ArrowUp"),(0,s.Uk)("、"),(0,s._)("code",{class:"doc-token"},"ArrowDown"),(0,s.Uk)("、"),(0,s._)("code",{class:"doc-token"},"PageUp"),(0,s.Uk)("、"),(0,s._)("code",{class:"doc-token"},"PageDown"),(0,s.Uk)("、"),(0,s._)("code",{class:"doc-token"},"Home"),(0,s.Uk)("和"),(0,s._)("code",{class:"doc-token"},"End"),(0,s.Uk)("键来导航。")],-1);function Gn(n,t,a,Gn,$n,jn){const Fn=(0,s.up)("doc-link"),Mn=(0,s.up)("doc-api"),Ln=(0,s.up)("doc-example"),On=(0,s.up)("doc-page");return(0,s.wg)(),(0,s.j4)(On,{"meta-title":Gn.metaTitle,title:"表格",related:Gn.related,nav:Gn.nav,toc:Gn.toc,"meta-desc":Gn.metaDesc},{default:(0,s.w5)((()=>[e,o,(0,s._)("div",l,[c,(0,s._)("p",null,[p,(0,s.Wm)(Fn,{to:"/vue-components/markup-table"},{default:(0,s.w5)((()=>[i])),_:1}),k])]),(0,s._)("h2",{id:"qtable-api",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=n=>Gn.copyHeading("qtable-api"))},"QTable API"),(0,s.Wm)(Mn,{file:"QTable"}),(0,s._)("h2",{id:"qth-api",class:"doc-heading doc-h2",onClick:t[1]||(t[1]=n=>Gn.copyHeading("qth-api"))},"QTh API"),(0,s.Wm)(Mn,{file:"QTh"}),(0,s._)("h2",{id:"qtr-api",class:"doc-heading doc-h2",onClick:t[2]||(t[2]=n=>Gn.copyHeading("qtr-api"))},"QTr API"),(0,s.Wm)(Mn,{file:"QTr"}),(0,s._)("h2",{id:"qtd-api",class:"doc-heading doc-h2",onClick:t[3]||(t[3]=n=>Gn.copyHeading("qtd-api"))},"QTd API"),(0,s.Wm)(Mn,{file:"QTd"}),(0,s._)("h2",{id:"定义列",class:"doc-heading doc-h2",onClick:t[4]||(t[4]=n=>Gn.copyHeading("定义列"))},"定义列"),r,_,(0,s._)("h2",{id:"基本的用法",class:"doc-heading doc-h2",onClick:t[5]||(t[5]=n=>Gn.copyHeading("基本的用法"))},"基本的用法"),(0,s.Wm)(Ln,{title:"基础",file:"QTable/Basic"}),(0,s.Wm)(Ln,{title:"黑暗",file:"QTable/Dark"}),(0,s.Wm)(Ln,{title:"密集型",file:"QTable/Dense"}),(0,s._)("div",d,[u,(0,s._)("p",null,[U,m,g,y,b,h,f,(0,s.Wm)(Fn,{to:"/options/screen-plugin"},{default:(0,s.w5)((()=>[T])),_:1}),Q])]),(0,s._)("h2",{id:"省略列的定义",class:"doc-heading doc-h2",onClick:t[6]||(t[6]=n=>Gn.copyHeading("省略列的定义"))},"省略列的定义"),W,(0,s.Wm)(Ln,{title:"从数据推断列",file:"QTable/InferColumns"}),(0,s._)("h2",{id:"粘性标题-列",class:"doc-heading doc-h2",onClick:t[7]||(t[7]=n=>Gn.copyHeading("粘性标题-列"))},"粘性标题/列"),(0,s._)("div",C,[v,(0,s._)("p",null,[w,H,S,(0,s.Wm)(Fn,{to:"https://caniuse.com/#search=sticky"},{default:(0,s.w5)((()=>[I])),_:1}),q])]),(0,s.Wm)(Ln,{title:"粘性标题",file:"QTable/StickyHeader"}),(0,s.Wm)(Ln,{title:"粘性列",file:"QTable/StickyColumn"}),(0,s.Wm)(Ln,{title:"粘性表头和表列",file:"QTable/StickyHeaderAndColumn"}),(0,s._)("h2",{id:"分隔符",class:"doc-heading doc-h2",onClick:t[8]||(t[8]=n=>Gn.copyHeading("分隔符"))},"分隔符"),(0,s.Wm)(Ln,{title:"分隔符",file:"QTable/Separators"}),(0,s._)("h2",{id:"样式设计",class:"doc-heading doc-h2",onClick:t[9]||(t[9]=n=>Gn.copyHeading("样式设计"))},"样式设计"),(0,s.Wm)(Ln,{title:"自定义列",file:"QTable/CustomColumn"}),(0,s.Wm)(Ln,{title:"自定义着色",file:"QTable/CustomColor"}),(0,s.Wm)(Ln,{title:"没有页眉/页脚",file:"QTable/NoHeaderFooter"}),(0,s._)("h2",{id:"虚拟滚动",class:"doc-heading doc-h2",onClick:t[10]||(t[10]=n=>Gn.copyHeading("虚拟滚动"))},"虚拟滚动"),P,(0,s.Wm)(Ln,{title:"基本虚拟滚动",file:"QTable/VirtscrollBasic"}),V,(0,s.Wm)(Ln,{title:"动态加载虚拟滚动",file:"QTable/VirtscrollDynamic"}),A,(0,s.Wm)(Ln,{title:"虚拟滚动和分页",file:"QTable/VirtscrollPagination"}),N,(0,s.Wm)(Ln,{title:"虚拟滚动与粘性标题",file:"QTable/VirtscrollSticky"}),x,D,(0,s.Wm)(Ln,{title:"一个数据行的多行虚拟滚动",file:"QTable/VirtscrollMultipleRows"}),(0,s._)("h2",{id:"选择",class:"doc-heading doc-h2",onClick:t[11]||(t[11]=n=>Gn.copyHeading("选择"))},"选择"),E,(0,s.Wm)(Ln,{title:"单一选择",file:"QTable/SingleSelection"}),(0,s.Wm)(Ln,{title:"多重选择",file:"QTable/MultipleSelection"}),(0,s.Wm)(Ln,{title:"选择单元格插槽",file:"QTable/SelectionSlots"}),(0,s.Wm)(Ln,{title:"自定义多重选择",file:"QTable/CustomSelection"}),(0,s._)("h2",{id:"可见列，自定义顶部，全屏",class:"doc-heading doc-h2",onClick:t[12]||(t[12]=n=>Gn.copyHeading("可见列，自定义顶部，全屏"))},"可见列，自定义顶部，全屏"),R,(0,s.Wm)(Ln,{title:"可见的列，自定义顶部和全屏",file:"QTable/VisibleColumns"}),(0,s.Wm)(Ln,{title:"可见的列",file:"QTable/VisibleColumns2"}),(0,s._)("h2",{id:"弹出式编辑",class:"doc-heading doc-h2",onClick:t[13]||(t[13]=n=>Gn.copyHeading("弹出式编辑"))},"弹出式编辑"),B,(0,s.Wm)(Ln,{title:"弹出式编辑",file:"QTable/PopupEditing"}),(0,s._)("h2",{id:"网格风格",class:"doc-heading doc-h2",onClick:t[14]||(t[14]=n=>Gn.copyHeading("网格风格"))},"网格风格"),(0,s._)("div",G,[$,(0,s._)("p",null,[j,F,M,L,O,z,K,(0,s.Wm)(Fn,{to:"/options/screen-plugin"},{default:(0,s.w5)((()=>[Z])),_:1}),J])]),X,(0,s.Wm)(Ln,{title:"网格风格",file:"QTable/GridStyle"}),(0,s.Wm)(Ln,{title:"带有页眉的网格",file:"QTable/GridHeader"}),(0,s.Wm)(Ln,{title:"彩色的网格风格",file:"QTable/GridStyleColored"}),(0,s.Wm)(Ln,{title:"类似砖石的网格",file:"QTable/GridMasonry"}),Y,nn,(0,s.Wm)(Ln,{title:"带槽的网格风格",file:"QTable/GridStyleSlot"}),(0,s._)("h2",{id:"展开行数",class:"doc-heading doc-h2",onClick:t[15]||(t[15]=n=>Gn.copyHeading("展开行数"))},"展开行数"),tn,(0,s.Wm)(Ln,{title:"内部扩展模型",file:"QTable/ExpandedRowInternal"}),an,(0,s.Wm)(Ln,{title:"外部扩展模型",file:"QTable/ExpandedRowExternal"}),sn,en,(0,s.Wm)(Ln,{title:"具有扩展模型的虚拟滚动",file:"QTable/VirtscrollExpandedRow"}),(0,s._)("h2",{id:"前-后槽",class:"doc-heading doc-h2",onClick:t[16]||(t[16]=n=>Gn.copyHeading("前-后槽"))},"前/后槽"),(0,s.Wm)(Ln,{title:"前/后槽(页眉/页脚)",file:"QTable/BeforeAfterHeaderFooter"}),(0,s._)("h2",{id:"分页",class:"doc-heading doc-h2",onClick:t[17]||(t[17]=n=>Gn.copyHeading("分页"))},"分页"),on,ln,cn,(0,s.Wm)(Ln,{title:"初始分页",file:"QTable/PaginationInitial"}),pn,(0,s.Wm)(Ln,{title:"同步分页",file:"QTable/PaginationSync"}),(0,s._)("h2",{id:"分页槽",class:"doc-heading doc-h2",onClick:t[18]||(t[18]=n=>Gn.copyHeading("分页槽"))},"分页槽"),kn,(0,s.Wm)(Ln,{title:"分页槽",file:"QTable/PaginationSlot"}),(0,s._)("h2",{id:"加载状态",class:"doc-heading doc-h2",onClick:t[19]||(t[19]=n=>Gn.copyHeading("加载状态"))},"加载状态"),(0,s.Wm)(Ln,{title:"默认加载",file:"QTable/Loading"}),(0,s.Wm)(Ln,{title:"自定义加载状态",file:"QTable/CustomLoading"}),(0,s._)("h2",{id:"自定义顶部",class:"doc-heading doc-h2",onClick:t[20]||(t[20]=n=>Gn.copyHeading("自定义顶部"))},"自定义顶部"),(0,s.Wm)(Ln,{title:"自定义顶部与添加/删除行",file:"QTable/CustomTop"}),(0,s._)("h2",{id:"主体槽",class:"doc-heading doc-h2",onClick:t[21]||(t[21]=n=>Gn.copyHeading("主体槽"))},"主体槽"),rn,(0,s.Wm)(Ln,{title:"主体槽",file:"QTable/SlotBody"}),_n,(0,s.Wm)(Ln,{title:"体细胞槽",file:"QTable/SlotBodyCell"}),dn,(0,s.Wm)(Ln,{title:"body-cell-[name] slot",file:"QTable/SlotBodyCellName"}),(0,s._)("h2",{id:"标题槽",class:"doc-heading doc-h2",onClick:t[22]||(t[22]=n=>Gn.copyHeading("标题槽"))},"标题槽"),un,(0,s.Wm)(Ln,{title:"页眉槽",file:"QTable/SlotHeader"}),Un,(0,s.Wm)(Ln,{title:"页眉单元格插槽",file:"QTable/SlotHeaderCell"}),mn,(0,s.Wm)(Ln,{title:"Header-cell-[name] slot",file:"QTable/SlotHeaderCellName"}),(0,s._)("h2",{id:"没有数据",class:"doc-heading doc-h2",onClick:t[23]||(t[23]=n=>Gn.copyHeading("没有数据"))},"没有数据"),(0,s.Wm)(Ln,{title:"无数据标签",file:"QTable/NoData"}),gn,(0,s.Wm)(Ln,{title:"无数据槽",file:"QTable/NoDataSlot"}),(0,s._)("h2",{id:"处理底层",class:"doc-heading doc-h2",onClick:t[24]||(t[24]=n=>Gn.copyHeading("处理底层"))},"处理底层"),yn,(0,s.Wm)(Ln,{title:"隐藏底层",file:"QTable/HideBottom"}),(0,s._)("h2",{id:"自定义排序",class:"doc-heading doc-h2",onClick:t[25]||(t[25]=n=>Gn.copyHeading("自定义排序"))},"自定义排序"),(0,s.Wm)(Ln,{title:"自定义排序",file:"QTable/CustomSorting"}),(0,s._)("h2",{id:"响应式表格",class:"doc-heading doc-h2",onClick:t[26]||(t[26]=n=>Gn.copyHeading("响应式表格"))},"响应式表格"),(0,s._)("p",null,[bn,hn,fn,Tn,Qn,Wn,Cn,(0,s.Wm)(Fn,{to:"/options/screen-plugin"},{default:(0,s.w5)((()=>[vn])),_:1}),wn]),Hn,(0,s.Wm)(Ln,{title:"使用密集属性",file:"QTable/ResponsiveDense"}),(0,s.Wm)(Ln,{title:"使用网格属性",file:"QTable/ResponsiveGrid"}),(0,s._)("h2",{id:"服务器端的分页、过滤和排序",class:"doc-heading doc-h2",onClick:t[27]||(t[27]=n=>Gn.copyHeading("服务器端的分页、过滤和排序"))},"服务器端的分页、过滤和排序"),Sn,In,qn,(0,s.Wm)(Ln,{title:"与服务器同步",file:"QTable/Synchronizing"}),(0,s._)("h2",{id:"导出数据",class:"doc-heading doc-h2",onClick:t[28]||(t[28]=n=>Gn.copyHeading("导出数据"))},"导出数据"),(0,s._)("p",null,[Pn,(0,s.Wm)(Fn,{to:"/quasar-utils/other-utils#export-file"},{default:(0,s.w5)((()=>[Vn])),_:1}),An,(0,s.Wm)(Fn,{to:"https://csv.js.org/parse/"},{default:(0,s.w5)((()=>[Nn])),_:1}),xn,(0,s.Wm)(Fn,{to:"https://csv.js.org/stringify/"},{default:(0,s.w5)((()=>[Dn])),_:1}),En]),Rn,(0,s.Wm)(Ln,{title:"导出到csv",file:"QTable/ExportCsv"}),(0,s._)("h2",{id:"键盘导航",class:"doc-heading doc-h2",onClick:t[29]||(t[29]=n=>Gn.copyHeading("键盘导航"))},"键盘导航"),Bn,(0,s.Wm)(Ln,{title:"键盘导航",file:"QTable/KeyboardNavigation"})])),_:1},8,["meta-title","related","nav","toc","meta-desc"])}var $n=a(17536);const jn={name:"DocMarkdownPage",setup(){return{metaTitle:"表格",metaDesc:"QTable Vue组件允许你以表格的方式来显示数据，它包含了很多相关的功能。它一般被称为数据表。",related:[{name:"标记表格",category:"Vue 组件",path:"/vue-components/markup-table"},{name:"分页",category:"Vue 组件",path:"/vue-components/pagination"}],nav:[{name:"步骤条",category:"Vue 组件",path:"/vue-components/stepper",dir:"left"},{name:"标签",category:"Vue 组件",path:"/vue-components/tabs",dir:"right"}],toc:[{id:"qtable-api",title:"QTable API"},{id:"qth-api",title:"QTh API"},{id:"qtr-api",title:"QTr API"},{id:"qtd-api",title:"QTd API"},{id:"定义列",title:"定义列"},{id:"基本的用法",title:"基本的用法"},{id:"省略列的定义",title:"省略列的定义"},{id:"粘性标题-列",title:"粘性标题/列"},{id:"分隔符",title:"分隔符"},{id:"样式设计",title:"样式设计"},{id:"虚拟滚动",title:"虚拟滚动"},{id:"选择",title:"选择"},{id:"可见列，自定义顶部，全屏",title:"可见列，自定义顶部，全屏"},{id:"弹出式编辑",title:"弹出式编辑"},{id:"网格风格",title:"网格风格"},{id:"展开行数",title:"展开行数"},{id:"前-后槽",title:"前/后槽"},{id:"分页",title:"分页"},{id:"分页槽",title:"分页槽"},{id:"加载状态",title:"加载状态"},{id:"自定义顶部",title:"自定义顶部"},{id:"主体槽",title:"主体槽"},{id:"标题槽",title:"标题槽"},{id:"没有数据",title:"没有数据"},{id:"处理底层",title:"处理底层"},{id:"自定义排序",title:"自定义排序"},{id:"响应式表格",title:"响应式表格"},{id:"服务器端的分页、过滤和排序",title:"服务器端的分页、过滤和排序"},{id:"导出数据",title:"导出数据"},{id:"键盘导航",title:"键盘导航"}],copyHeading:$n.Et}}};var Fn=a(74260);const Mn=(0,Fn.Z)(jn,[["render",Gn]]),Ln=Mn}}]);