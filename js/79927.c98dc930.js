"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[79927],{79927:(e,o,t)=>{t.r(o),t.d(o,{default:()=>I});var a=t(83673);const l=(0,a._)("p",null,"The QColor component provides a method to input colors.",-1),i={class:"doc-note doc-note--tip"},d=(0,a._)("p",{class:"doc-note__title"},"TIP",-1),n=(0,a.Uk)("For handling colors, also check out "),c=(0,a.Uk)("Quasar Color Utils"),s=(0,a.Uk)("."),r=(0,a.Uk)("There are "),u=(0,a._)("strong",null,"helpers",-1),h=(0,a.Uk)(" for QInput "),p=(0,a._)("code",{class:"doc-token"},"rules",-1),m=(0,a.Uk)(" prop: "),f=(0,a.Uk)("full list"),k=(0,a.Uk)(". You can use these for convenience or write the string specifying your "),g=(0,a.Uk)("custom needs"),C=(0,a.Uk)("."),y=(0,a._)("p",null,"Examples: “hexColor”, “rgbOrRgbaColor”, “anyColor”.",-1),b=(0,a.Uk)("More info: "),w=(0,a.Uk)("QInput"),_=(0,a.Uk)("."),v=(0,a._)("p",null,"You can choose if you don’t want to render the header and/or footer, like in example below:",-1),Q=(0,a._)("p",null,"You can also pick the default view, like in example below, where we also specify we don’t want to render the header and footer. The end result generates a nice color palette that the user can pick from:",-1),U=(0,a._)("p",null,[(0,a.Uk)("When dealing with a native form which has an "),(0,a._)("code",{class:"doc-token"},"action"),(0,a.Uk)(" and a "),(0,a._)("code",{class:"doc-token"},"method"),(0,a.Uk)(" (eg. when using Quasar with ASP.NET controllers), you need to specify the "),(0,a._)("code",{class:"doc-token"},"name"),(0,a.Uk)(" property on QColor, otherwise formData will not contain it (if it should):")],-1);function W(e,o,t,W,D,H){const q=(0,a.up)("doc-link"),T=(0,a.up)("doc-api"),I=(0,a.up)("doc-example"),N=(0,a.up)("doc-page");return(0,a.wg)(),(0,a.j4)(N,{"meta-title":W.metaTitle,title:"Color Picker",related:W.related,toc:W.toc,"meta-desc":W.metaDesc},{default:(0,a.w5)((()=>[l,(0,a._)("div",i,[d,(0,a._)("p",null,[n,(0,a.Wm)(q,{to:"/quasar-utils/color-utils"},{default:(0,a.w5)((()=>[c])),_:1}),s])]),(0,a._)("h2",{id:"qcolor-api",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=e=>W.copyHeading("qcolor-api"))},"QColor API"),(0,a.Wm)(T,{file:"QColor"}),(0,a._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:o[1]||(o[1]=e=>W.copyHeading("usage"))},"Usage"),(0,a._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=e=>W.copyHeading("basic"))},"Basic"),(0,a.Wm)(I,{title:"Basic",file:"QColor/Basic"}),(0,a._)("h3",{id:"with-qinput",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=e=>W.copyHeading("with-qinput"))},"With QInput"),(0,a.Wm)(I,{title:"Input",file:"QColor/Input"}),(0,a._)("p",null,[r,u,h,p,m,(0,a.Wm)(q,{to:"https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js"},{default:(0,a.w5)((()=>[f])),_:1}),k,(0,a.Wm)(q,{to:"/vue-components/input#internal-validation"},{default:(0,a.w5)((()=>[g])),_:1}),C]),y,(0,a._)("p",null,[b,(0,a.Wm)(q,{to:"/vue-components/input"},{default:(0,a.w5)((()=>[w])),_:1}),_]),(0,a._)("h3",{id:"no-header-or-footer",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=e=>W.copyHeading("no-header-or-footer"))},"No header or footer"),v,(0,a.Wm)(I,{title:"No header/footer",file:"QColor/NoHeaderFooter"}),(0,a._)("h3",{id:"custom-default-view",class:"doc-heading doc-h3",onClick:o[5]||(o[5]=e=>W.copyHeading("custom-default-view"))},"Custom default view"),Q,(0,a.Wm)(I,{title:"Custom default view",file:"QColor/CustomDefaultView"}),(0,a._)("h3",{id:"custom-palette",class:"doc-heading doc-h3",onClick:o[6]||(o[6]=e=>W.copyHeading("custom-palette"))},"Custom palette"),(0,a.Wm)(I,{title:"Custom palette",file:"QColor/CustomPalette"}),(0,a._)("h3",{id:"dark-mode",class:"doc-heading doc-h3",onClick:o[7]||(o[7]=e=>W.copyHeading("dark-mode"))},"Dark mode"),(0,a.Wm)(I,{title:"Dark version",file:"QColor/Dark"}),(0,a._)("h3",{id:"default-value",class:"doc-heading doc-h3",onClick:o[8]||(o[8]=e=>W.copyHeading("default-value"))},"Default value"),(0,a.Wm)(I,{title:"Default value",file:"QColor/DefaultValue"}),(0,a._)("h3",{id:"lazy-update",class:"doc-heading doc-h3",onClick:o[9]||(o[9]=e=>W.copyHeading("lazy-update"))},"Lazy update"),(0,a.Wm)(I,{title:"Lazy model",file:"QColor/LazyModel"}),(0,a._)("h3",{id:"disable-and-readonly",class:"doc-heading doc-h3",onClick:o[10]||(o[10]=e=>W.copyHeading("disable-and-readonly"))},"Disable and readonly"),(0,a.Wm)(I,{title:"Disable and readonly",file:"QColor/DisableReadonly"}),(0,a._)("h3",{id:"native-form-submit",class:"doc-heading doc-h3",onClick:o[11]||(o[11]=e=>W.copyHeading("native-form-submit"))},"Native form submit"),U,(0,a.Wm)(I,{title:"Native form",file:"QColor/NativeForm"})])),_:1},8,["meta-title","related","toc","meta-desc"])}var D=t(17536);const H={name:"DocMarkdownPage",setup(){return{metaTitle:"Color Picker",metaDesc:"The QColorPicker Vue component provides a way for the user to input colors.",related:[{name:"颜色工具",category:"Quasar 工具",path:"/quasar-utils/color-utils"}],toc:[{id:"qcolor-api",title:"QColor API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"with-qinput",title:"With QInput",sub:!0},{id:"no-header-or-footer",title:"No header or footer",sub:!0},{id:"custom-default-view",title:"Custom default view",sub:!0},{id:"custom-palette",title:"Custom palette",sub:!0},{id:"dark-mode",title:"Dark mode",sub:!0},{id:"default-value",title:"Default value",sub:!0},{id:"lazy-update",title:"Lazy update",sub:!0},{id:"disable-and-readonly",title:"Disable and readonly",sub:!0},{id:"native-form-submit",title:"Native form submit",sub:!0}],copyHeading:D.Et}}};var q=t(74260);const T=(0,q.Z)(H,[["render",W]]),I=T}}]);