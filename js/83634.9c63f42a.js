"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[83634],{83634:(e,o,n)=>{n.r(o),n.d(o,{default:()=>I});var t=n(83673);const a=(0,t._)("p",null,"Before we dive in to the actual development, we need to do some preparation work.",-1),s=(0,t._)("p",null,[(0,t.Uk)("In order to develop/build a Quasar Electron app, we need to add the Electron mode to our Quasar project. What this does is that it yarn installs some Electron packages and creates "),(0,t._)("code",{class:"doc-token"},"/src-electron"),(0,t.Uk)(" folder.")],-1),l=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t.Uk)("$ quasar mode "),(0,t._)("span",{class:"token function"},"add"),(0,t.Uk)(" electron\n")])],-1),r=(0,t._)("p",null,[(0,t.Uk)("Every Electron app has two threads: the main thread (deals with the window and initialization code – from the newly created folder "),(0,t._)("code",{class:"doc-token"},"/src-electron"),(0,t.Uk)(") and the renderer thread (which deals with the actual content of your app from "),(0,t._)("code",{class:"doc-token"},"/src"),(0,t.Uk)(").")],-1),d=(0,t._)("p",null,"The new folder has the following structure:",-1),i=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t._)("span",{class:"token builtin class-name"},"."),(0,t.Uk)("\n└── src-electron/\n    ├── icons/                 "),(0,t._)("span",{class:"token comment"},"# Icons of your app for all platforms"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.icns             "),(0,t._)("span",{class:"token comment"},"# Icon file for Darwin (MacOS) platform"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   ├── icon.ico              "),(0,t._)("span",{class:"token comment"},"# Icon file for win32 (Windows) platform"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token operator"},"|"),(0,t.Uk)("   └── icon.png              "),(0,t._)("span",{class:"token comment"},"# Tray icon file for all platforms"),(0,t.Uk)("\n    ├── electron-preload.js   "),(0,t._)("span",{class:"token comment"},"# (or .ts) Electron preload script (injects Node.js stuff into renderer thread)"),(0,t.Uk)("\n    └── electron-main.js      "),(0,t._)("span",{class:"token comment"},"# (or .ts) Main thread code"),(0,t.Uk)("\n")])],-1),c=(0,t._)("p",null,"If you run into errors during npm install about node-gyp, then you most likely do not have the proper build tools installed on your system. Build tools include items like Python and Visual Studio. Fortunately, there are a few packages to help simplify this process.",-1),p=(0,t.Uk)("The first item we need to check is our npm version and ensure that it is not outdated. This is accomplished using "),u=(0,t.Uk)("npm-windows-upgrade"),h=(0,t.Uk)(". If you are using yarn, then you can skip this check."),m=(0,t.Uk)("Once that is complete, we can then continue to setup the needed build tools. Using "),k=(0,t.Uk)("windows-build-tools"),w=(0,t.Uk)(", most of the dirty work is done for us. Installing this globally will in turn setup Visual C++ packages, Python, and more."),_=(0,t._)("div",{class:"doc-note doc-note--warning"},[(0,t._)("p",{class:"doc-note__title"},"Note: April 2019"),(0,t._)("p",null,[(0,t.Uk)("In Powershell.exe (Run as Admin) "),(0,t._)("code",{class:"doc-token"},"npm install --global windows-build-tools"),(0,t.Uk)(" seems to fail at the moment with errors pointing to python2 and vctools. You can get around this with Chocolatey. One-liner install:")]),(0,t._)("p",null,[(0,t._)("strong",null,"Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(‘https://chocolatey.org/install.ps1’))")]),(0,t._)("p",null,[(0,t.Uk)("and then run "),(0,t._)("code",{class:"doc-token"},"choco upgrade python2 visualstudio2017-workload-vctools"),(0,t.Uk)(".")])],-1),g=(0,t._)("p",null,"At this point things should successfully install, but if not then you will need a clean installation of Visual Studio. Please note that these are not problems with Quasar, but they are related to NPM and Windows.",-1),f=(0,t._)("p",null,"If you want to jump right in and start developing, you can skip the previous step with “quasar mode” command and issue:",-1),y=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t.Uk)("$ quasar dev -m electron\n\n"),(0,t._)("span",{class:"token comment"},"# passing extra parameters and/or options to"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},'# underlying "electron" executable:'),(0,t.Uk)("\n$ quasar dev -m electron -- --no-sandbox --disable-setuid-sandbox\n"),(0,t._)("span",{class:"token comment"},"# when on Windows and using Powershell:"),(0,t.Uk)("\n$ quasar dev -m electron "),(0,t._)("span",{class:"token string"},"'--'"),(0,t.Uk)(" --no-sandbox --disable-setuid-sandbox\n")])],-1),b=(0,t._)("p",null,"This will add Electron mode automatically, if it is missing. It will open up an Electron window which will render your app along with Developer Tools opened side by side.",-1);function U(e,o,n,U,v,E){const x=(0,t.up)("doc-link"),P=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(P,{"meta-title":U.metaTitle,title:"Preparation for Electron","meta-desc":U.metaDesc},{default:(0,t.w5)((()=>[a,(0,t._)("h2",{id:"1-add-quasar-electron-mode",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=e=>U.copyHeading("1-add-quasar-electron-mode"))},"1. Add Quasar Electron Mode"),s,l,r,d,i,(0,t._)("h3",{id:"a-note-for-windows-users",class:"doc-heading doc-h3",onClick:o[1]||(o[1]=e=>U.copyHeading("a-note-for-windows-users"))},"A note for Windows Users"),c,(0,t._)("p",null,[p,(0,t.Wm)(x,{to:"https://github.com/felixrieseberg/npm-windows-upgrade"},{default:(0,t.w5)((()=>[u])),_:1}),h]),(0,t._)("p",null,[m,(0,t.Wm)(x,{to:"https://github.com/felixrieseberg/windows-build-tools"},{default:(0,t.w5)((()=>[k])),_:1}),w]),_,g,(0,t._)("h2",{id:"2-start-developing",class:"doc-heading doc-h2",onClick:o[2]||(o[2]=e=>U.copyHeading("2-start-developing"))},"2. Start Developing"),f,y,b])),_:1},8,["meta-title","meta-desc"])}var v=n(17536);const E={name:"DocMarkdownPage",setup(){return{metaTitle:"Preparation for Electron",metaDesc:"How to add Electron mode into a Quasar app.",copyHeading:v.Et}}};var x=n(74260);const P=(0,x.Z)(E,[["render",U]]),I=P}}]);