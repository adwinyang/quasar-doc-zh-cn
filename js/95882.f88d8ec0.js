"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[95882],{95882:(n,s,o)=>{o.r(s),o.d(s,{default:()=>N});var e=o(83673);const t=(0,e._)("ul",null,[(0,e._)("li",null,"允许通过Git Botect忽略inuctits(不是格式化的重要提交)"),(0,e._)("li",null,"浏览历史时提供更好的信息")],-1),a={class:"doc-note doc-note--warning"},l=(0,e._)("p",{class:"doc-note__title"},"WARNING",-1),c=(0,e.Uk)("此规则适用于所有"),p=(0,e.Uk)("Quasar存储库"),r=(0,e.Uk)(" 。"),k=(0,e._)("p",null,[(0,e.Uk)("被关心的日志是一个美丽而有用的东西。 "),(0,e._)("code",{class:"doc-token"},"git责备责备，"),(0,e.Uk)("恢复"),(0,e._)("code",{class:"doc-token"},"，"),(0,e.Uk)("rebase"),(0,e._)("code",{class:"doc-token"},"，"),(0,e.Uk)("log"),(0,e._)("code",{class:"doc-token"},"，"),(0,e.Uk)("shortlog`和其他子命令。 审查他人的提交和拉拔请求变得值得做，突然可以独立完成。 了解为什么几个月或几年前的事情不仅可能而且有效。")],-1),i=(0,e._)("ol",null,[(0,e._)("li",null,"用空白线分隔主体"),(0,e._)("li",null,"将主题行限制为70个字符"),(0,e._)("li",null,"利用主题行"),(0,e._)("li",null,"不要以句号结束主题行"),(0,e._)("li",null,"在主题行中使用祈使语气"),(0,e._)("li",null,"正文每80个字符进行换行"),(0,e._)("li",null,"使用主体解释是什么、为什么、如何做")],-1),_=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token function"},"type"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("scope"),(0,e._)("span",{class:"token operator"},">"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("Subject"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(" #"),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("github"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ref"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("id"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("body"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)("footer"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n")])],-1),u=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token function"},"fix"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ui"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(" Ensure Range headers adhere more closely to "),(0,e._)("span",{class:"token constant"},"RFC"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"2616"),(0,e.Uk)(" #"),(0,e._)("span",{class:"token number"},"2310"),(0,e.Uk)("\n\nTo add "),(0,e._)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"dependency"),(0,e.Uk)(" use "),(0,e._)("span",{class:"token template-string"},[(0,e._)("span",{class:"token template-punctuation string"},"`"),(0,e._)("span",{class:"token string"},"range-parser"),(0,e._)("span",{class:"token template-punctuation string"},"`")]),(0,e.Uk)("to compute the range"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("\nIt is more well"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("tested "),(0,e._)("span",{class:"token keyword"},"in"),(0,e.Uk)(" the wild"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token constant"},"BREAKING"),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"CHANGE"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\nport"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("runner command line option has changed to runner"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("port"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("\nTo migrate your project"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" change all the commands"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\nwhere you use "),(0,e._)("span",{class:"token operator"},"--"),(0,e.Uk)("port"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("runner to "),(0,e._)("span",{class:"token operator"},"--"),(0,e.Uk)("runner"),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("port"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("\n")])],-1),d=(0,e._)("p",null,"第一行不能超过70个字符，第二行始终为空。类型和范围应始终为小写，如下所示。",-1),U=(0,e._)("p",null,[(0,e._)("strong",null,[(0,e.Uk)("允许"),(0,e._)("code",{class:"doc-token"},"<type>"),(0,e.Uk)("值：")])],-1),g=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("strong",null,"feat"),(0,e.Uk)(" - 用户的新功能，而不是构建脚本的新功能")]),(0,e._)("li",null,[(0,e._)("strong",null,"fix"),(0,e.Uk)(" - 针对用户的bug修复，而不是针对构建脚本的修复")]),(0,e._)("li",null,[(0,e._)("strong",null,"docs"),(0,e.Uk)(" - 仅更改文档")]),(0,e._)("li",null,[(0,e._)("strong",null,"style"),(0,e.Uk)(" - 不影响代码含义的更改(空白，格式化，缺少半冒号等)")]),(0,e._)("li",null,[(0,e._)("strong",null,"refactor"),(0,e.Uk)(" - 重构生产代码，代码更改既不修复错误也不是添加一个功能")]),(0,e._)("li",null,[(0,e._)("strong",null,"chore"),(0,e.Uk)(" - 不修改src或测试文件的其他更改；无生产代码更改")]),(0,e._)("li",null,[(0,e._)("strong",null,"perf"),(0,e.Uk)(" - 改善性能的修改")]),(0,e._)("li",null,[(0,e._)("strong",null,"revert"),(0,e.Uk)(" - 恢复以前的提交")]),(0,e._)("li",null,[(0,e._)("strong",null,"test"),(0,e.Uk)(" - 添加缺失的测试，重构测试;无生产代码更改")]),(0,e._)("li",null,[(0,e._)("strong",null,"build"),(0,e.Uk)(" - 影响构建系统或外部依赖项的更改(示例范围：GULP，NPM)")]),(0,e._)("li",null,[(0,e._)("strong",null,"ci"),(0,e.Uk)(" - 更改我们的持续积分配置文件和脚本(示例范围：Travis，Circle CI)")])],-1),y=(0,e._)("p",null,[(0,e._)("strong",null,[(0,e.Uk)("示例"),(0,e._)("code",{class:"doc-token"},"<scope>"),(0,e.Uk)("值：")])],-1),h=(0,e._)("ul",null,[(0,e._)("li",null,"UI，CLI，API，TouchSwipe，QTime等。")],-1),m=(0,e._)("div",{class:"doc-note doc-note--tip"},[(0,e._)("p",{class:"doc-note__title"},"TIP"),(0,e._)("p",null,[(0,e._)("code",{class:"doc-token"},"<scope>"),(0,e.Uk)("可以包含由逗号分隔的更多值。 示例：`FIX(UI，CLI)：添加了 Cordova 模式。")]),(0,e._)("p",null,[(0,e._)("code",{class:"doc-token"},"<scope>"),(0,e.Uk)("可以是空的(例如，如果更改是全局)，在这种情况下省略括号。")])],-1),b=(0,e._)("ul",null,[(0,e._)("li",null,"使用命令，目前时态：“更改”而不是“更改”也不“更改”"),(0,e._)("li",null,"包括改变和对比的动机与以前的行为")],-1),C=(0,e._)("p",null,"所有的破坏性修改都必须在页脚以破坏性修改块的形式提及，它应该以BREAKING CHANGE: 字样开始，并加上空格或两个换行。提交信息的其余部分是对修改的描述、理由和迁移说明。",-1),f=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token constant"},"BREAKING"),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"CHANGE"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(" isolate scope bindings definition has changed and\n    the inject option "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(" the directive controller injection was removed"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("\n\n    To migrate the code follow the example below"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token literal-property property"},"Before"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token literal-property property"},"scope"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myAttr"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'attribute'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myBind"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'bind'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myExpression"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'expression'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myEval"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'evaluate'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myAccessor"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'accessor'"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token literal-property property"},"After"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n\n    "),(0,e._)("span",{class:"token literal-property property"},"scope"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myAttr"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myBind"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myExpression"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'&'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token comment"},"// Myeval  - 通常没有有用，但在表达式的情况下，您可以使用'='"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token literal-property property"},"myAccessor"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'='"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// in directive's template change myAccessor() to myAccessor"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),v=(0,e._)("p",null,"已关闭的问题应列在页脚上的单独一行上，以“closees”关键字开头，如下所示：",-1),w=(0,e._)("p",null,[(0,e._)("code",{class:"doc-token"},"Closes #234")],-1),A=(0,e._)("p",null,"或者存在多个问题的情况下：",-1),j=(0,e._)("p",null,[(0,e._)("code",{class:"doc-token"},"Closes #123，#245，#992")],-1);function H(n,s,o,H,I,E){const T=(0,e.up)("doc-link"),G=(0,e.up)("doc-page");return(0,e.wg)(),(0,e.j4)(G,{"meta-title":H.metaTitle,title:"提交约定",nav:H.nav,toc:H.toc,"meta-desc":H.metaDesc},{default:(0,e.w5)((()=>[(0,e._)("h2",{id:"目标",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=n=>H.copyHeading("目标"))},"目标"),t,(0,e._)("div",a,[l,(0,e._)("p",null,[c,(0,e.Wm)(T,{to:"https://github.com/quasarframework"},{default:(0,e.w5)((()=>[p])),_:1}),r])]),k,(0,e._)("h2",{id:"推荐的-git-消息提交规则",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=n=>H.copyHeading("推荐的-git-消息提交规则"))},"推荐的 git 消息提交规则"),i,(0,e._)("h2",{id:"提交消息的格式",class:"doc-heading doc-h2",onClick:s[2]||(s[2]=n=>H.copyHeading("提交消息的格式"))},"提交消息的格式"),_,(0,e._)("h3",{id:"提交消息的示例",class:"doc-heading doc-h3",onClick:s[3]||(s[3]=n=>H.copyHeading("提交消息的示例"))},"提交消息的示例"),u,(0,e._)("h2",{id:"消息主题-第一行-",class:"doc-heading doc-h2",onClick:s[4]||(s[4]=n=>H.copyHeading("消息主题-第一行-"))},"消息主题(第一行)"),d,U,g,y,h,m,(0,e._)("h2",{id:"邮件正文",class:"doc-heading doc-h2",onClick:s[5]||(s[5]=n=>H.copyHeading("邮件正文"))},"邮件正文"),b,(0,e._)("h2",{id:"消息解注",class:"doc-heading doc-h2",onClick:s[6]||(s[6]=n=>H.copyHeading("消息解注"))},"消息解注"),(0,e._)("h3",{id:"破坏性变化",class:"doc-heading doc-h3",onClick:s[7]||(s[7]=n=>H.copyHeading("破坏性变化"))},"破坏性变化"),C,f,(0,e._)("h3",{id:"参考问题",class:"doc-heading doc-h3",onClick:s[8]||(s[8]=n=>H.copyHeading("参考问题"))},"参考问题"),v,w,A,j])),_:1},8,["meta-title","nav","toc","meta-desc"])}var I=o(17536);const E={name:"DocMarkdownPage",setup(){return{metaTitle:"提交约定",metaDesc:"Quasar提交约定",nav:[{name:"项目维护者的角色",category:"捐款指南",path:"/contribution-guide/project-maintainer",dir:"left"},{name:"$q 对象",category:"选项和辅助",path:"/options/the-q-object",dir:"right"}],toc:[{id:"目标",title:"目标"},{id:"推荐的-git-消息提交规则",title:"推荐的 git 消息提交规则"},{id:"提交消息的格式",title:"提交消息的格式"},{id:"提交消息的示例",title:"提交消息的示例",sub:!0},{id:"消息主题-第一行-",title:"消息主题(第一行)"},{id:"邮件正文",title:"邮件正文"},{id:"消息解注",title:"消息解注"},{id:"破坏性变化",title:"破坏性变化",sub:!0},{id:"参考问题",title:"参考问题",sub:!0}],copyHeading:I.Et}}};var T=o(74260);const G=(0,T.Z)(E,[["render",H]]),N=G}}]);