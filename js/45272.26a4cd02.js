"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[45272],{45272:(e,n,o)=>{o.r(n),o.d(n,{default:()=>C});var s=o(83673);const a=(0,s._)("p",null,"在我们深入到实际的开发中去之前，我们需要做一些准备工作。",-1),c=(0,s._)("p",null,[(0,s.Uk)("为了开发/构建一个Quasar Electron应用，我们需要在我们的 Quasar 项目中添加Electron模式。这样做的目的是，它将安装一些Electron软件包并创建"),(0,s._)("code",{class:"doc-token"},"/src-electron"),(0,s.Uk)("文件夹。")],-1),l=(0,s._)("pre",{class:"doc-code language-bash"},[(0,s._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,s.Uk)("$ quasar mode "),(0,s._)("span",{class:"token function"},"add"),(0,s.Uk)(" electron\n")])],-1),t=(0,s._)("p",null,[(0,s.Uk)("每个Electron应用程序都有两个线程：主线程(处理窗口和初始化代码–来自新创建的"),(0,s._)("code",{class:"doc-token"},"/src-electron"),(0,s.Uk)("文件夹)和渲染器线程(处理来自"),(0,s._)("code",{class:"doc-token"},"/src"),(0,s.Uk)("的应用程序的实际内容)。")],-1),d=(0,s._)("p",null,"新文件夹的结构如下。",-1),r=(0,s._)("pre",{class:"doc-code language-bash"},[(0,s._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,s._)("span",{class:"token builtin class-name"},"."),(0,s.Uk)("\n└── src-electron/\n          ├── icons/                 "),(0,s._)("span",{class:"token comment"},"# 适用于所有平台的应用程序图标"),(0,s.Uk)("\n          "),(0,s._)("span",{class:"token operator"},"|"),(0,s.Uk)("   ├── icon.icns             "),(0,s._)("span",{class:"token comment"},"# Darwin (MacOS) 平台的图标文件"),(0,s.Uk)("\n          "),(0,s._)("span",{class:"token operator"},"|"),(0,s.Uk)("   ├── icon.ico              "),(0,s._)("span",{class:"token comment"},"# win32 (Windows) 平台的图标文件"),(0,s.Uk)("\n          "),(0,s._)("span",{class:"token operator"},"|"),(0,s.Uk)("   └── icon.png              "),(0,s._)("span",{class:"token comment"},"# 所有平台的托盘图标文件"),(0,s.Uk)("\n    ├── electron-preload.js   "),(0,s._)("span",{class:"token comment"},"# （或.ts）Electron预加载脚本（将Node.js内容注入渲染器线程）"),(0,s.Uk)("\n          └── electron-main.js      "),(0,s._)("span",{class:"token comment"},"# (或.ts) 主线程代码"),(0,s.Uk)("\n")])],-1),i=(0,s._)("p",null,"如果你在npm安装过程中遇到关于node-gyp的错误，那么你的系统中很可能没有安装适当的构建工具。构建工具包括Python和Visual Studio等项目。幸运的是，有一些软件包可以帮助简化这个过程。",-1),p=(0,s.Uk)("我们需要检查的第一个项目是我们的npm版本，并确保它没有过期。这可以通过"),u=(0,s.Uk)("npm-windows-upgrade"),_=(0,s.Uk)(" 来完成。如果你正在使用 yarn，那么你可以跳过这个检查。"),k=(0,s.Uk)("一旦完成，我们就可以继续设置所需的构建工具。使用"),g=(0,s.Uk)("windows-build-tools"),m=(0,s.Uk)(" ，大部分的脏活累活都替我们干了。在全局范围内安装这个工具将反过来设置 Visual C++包、Python 和更多。"),h=(0,s._)("div",{class:"doc-note doc-note--warning"},[(0,s._)("p",{class:"doc-note__title"},"注: 2019年四月"),(0,s._)("p",null,[(0,s.Uk)("在 Powershell.exe 中(以管理员身份运行)"),(0,s._)("code",{class:"doc-token"},"npm install --global windows-build-tools"),(0,s.Uk)("目前似乎失败了，错误指向了python2 和 vctools。你可以用 Chocolatey 来解决这个问题。单行本安装。")]),(0,s._)("p",null,[(0,s._)("strong",null,"Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(‘https://chocolatey.org/install.ps1’))")]),(0,s._)("p",null,[(0,s.Uk)("然后运行"),(0,s._)("code",{class:"doc-token"},"choco upgrade python2 visualstudio2017-workload-vctools"),(0,s.Uk)("。")])],-1),w=(0,s._)("p",null,"在这一点上，事情应该成功安装，但如果没有，那么你将需要一个干净的Visual Studio安装。请注意，这些不是 Quasar 的问题，而是与NPM和Windows有关。",-1),U=(0,s._)("p",null,'如果你想直接进入并开始开发，你可以跳过前面的步骤，用 "quasar模式 "命令并发出：',-1),b=(0,s._)("pre",{class:"doc-code language-bash"},[(0,s._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,s.Uk)("$ quasar dev -m electron\n\n"),(0,s._)("span",{class:"token comment"},"# 传递额外的参数和/或选项到"),(0,s.Uk)("\n"),(0,s._)("span",{class:"token comment"},"# 底层“电子”可执行文件："),(0,s.Uk)("\n$ quasar dev -m electron -- --no-sandbox --disable-setuid-sandbox\n"),(0,s._)("span",{class:"token comment"},"# 在 Windows 上使用 Powershell 时："),(0,s.Uk)("\n$ quasar dev -m electron "),(0,s._)("span",{class:"token string"},"'--'"),(0,s.Uk)(" --no-sandbox --disable-setuid-sandbox\n")])],-1),v=(0,s._)("p",null,"这将自动添加Electron模式，如果它是缺失的。 它将打开一个Electron窗口，该窗口将呈现你的应用程序与开发工具并排打开。",-1);function y(e,n,o,y,E,q){const f=(0,s.up)("doc-link"),x=(0,s.up)("doc-page");return(0,s.wg)(),(0,s.j4)(x,{"meta-title":y.metaTitle,title:"为 Electron 做准备",nav:y.nav,toc:y.toc,"meta-desc":y.metaDesc},{default:(0,s.w5)((()=>[a,(0,s._)("h2",{id:"1-添加quasar-electron模式",class:"doc-heading doc-h2",onClick:n[0]||(n[0]=e=>y.copyHeading("1-添加quasar-electron模式"))},"1. 添加Quasar Electron模式"),c,l,t,d,r,(0,s._)("h3",{id:"对-windows-用户的说明",class:"doc-heading doc-h3",onClick:n[1]||(n[1]=e=>y.copyHeading("对-windows-用户的说明"))},"对 Windows 用户的说明"),i,(0,s._)("p",null,[p,(0,s.Wm)(f,{to:"https://github.com/felixrieseberg/npm-windows-upgrade"},{default:(0,s.w5)((()=>[u])),_:1}),_]),(0,s._)("p",null,[k,(0,s.Wm)(f,{to:"https://github.com/felixrieseberg/windows-build-tools"},{default:(0,s.w5)((()=>[g])),_:1}),m]),h,w,(0,s._)("h2",{id:"2-开始开发",class:"doc-heading doc-h2",onClick:n[2]||(n[2]=e=>y.copyHeading("2-开始开发"))},"2. 开始开发"),U,b,v])),_:1},8,["meta-title","nav","toc","meta-desc"])}var E=o(17536);const q={name:"DocMarkdownPage",setup(){return{metaTitle:"为 Electron 做准备",metaDesc:"如何在 Quasar 应用程序中加入 Electron 模式。",nav:[{name:"升级指南",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/electron-upgrade-guide",dir:"left"},{name:"配置电子",category:"开发 Electron 应用程序",path:"/quasar-cli/developing-electron-apps/configuring-electron",dir:"right"}],toc:[{id:"1-添加quasar-electron模式",title:"1. 添加Quasar Electron模式"},{id:"对-windows-用户的说明",title:"对 Windows 用户的说明",sub:!0},{id:"2-开始开发",title:"2. 开始开发"}],copyHeading:E.Et}}};var f=o(74260);const x=(0,f.Z)(q,[["render",y]]),C=x}}]);