"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[28537],{28537:(o,e,t)=>{t.r(e),t.d(e,{default:()=>k});var i=t(83673);const a=(0,i._)("p",null,"The QTooltip component is to be used when you want to offer the user more information about a certain area in your App. When hovering the mouse over the target element (or quickly tapping on mobile platforms), the tooltip will appear.",-1),n=(0,i._)("p",null,[(0,i.Uk)("The idea with QTooltip is to place it inside your DOM element / component that you want to be the trigger as direct child. Don’t worry about QTooltip content inheriting CSS from the container as the QTooltip will be injected as a direct child of "),(0,i._)("code",{class:"doc-token"},"<body>"),(0,i.Uk)(" through a Quasar Portal.")],-1),l=(0,i.Uk)("In the example below there’s a few transitions showcased. For a full list of transitions available, go to "),s=(0,i.Uk)("Transitions"),c=(0,i.Uk)("."),d=(0,i._)("p",null,"The example below shows how to create a re-usable menu that can be shared with different targets.",-1),r=(0,i._)("p",null,[(0,i.Uk)("The position of QTooltip can be customized. It keeps account of the "),(0,i._)("code",{class:"doc-token"},"anchor"),(0,i.Uk)(" and "),(0,i._)("code",{class:"doc-token"},"self"),(0,i.Uk)(" optional props. The final position of QTooltip popup is calculated so that it will be displayed on the available screen real estate, switching to the right-side and/or top-side when necessary.")],-1),p=(0,i._)("p",null,[(0,i.Uk)("For horizontal positioning you can use "),(0,i._)("code",{class:"doc-token"},"start"),(0,i.Uk)(" and "),(0,i._)("code",{class:"doc-token"},"end"),(0,i.Uk)(" when you want to automatically take into account if on RTL or non-RTL. "),(0,i._)("code",{class:"doc-token"},"start"),(0,i.Uk)(" and "),(0,i._)("code",{class:"doc-token"},"end"),(0,i.Uk)(" mean “left” for non-RTL and “right” for RTL.")],-1);function u(o,e,t,u,h,m){const g=(0,i.up)("doc-api"),f=(0,i.up)("doc-example"),T=(0,i.up)("doc-link"),k=(0,i.up)("tooltip-positioning"),b=(0,i.up)("doc-page");return(0,i.wg)(),(0,i.j4)(b,{"meta-title":u.metaTitle,title:"Tooltip",related:u.related,toc:u.toc,"meta-desc":u.metaDesc},{default:(0,i.w5)((()=>[a,(0,i._)("h2",{id:"qtooltip-api",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=o=>u.copyHeading("qtooltip-api"))},"QTooltip API"),(0,i.Wm)(g,{file:"QTooltip"}),(0,i._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=o=>u.copyHeading("usage"))},"Usage"),n,(0,i.Wm)(f,{title:"Basic",file:"QTooltip/Basic"}),(0,i.Wm)(f,{title:"Toggle through v-model",file:"QTooltip/VModel"}),(0,i._)("h3",{id:"customize",class:"doc-heading doc-h3",onClick:e[2]||(e[2]=o=>u.copyHeading("customize"))},"Customize"),(0,i.Wm)(f,{title:"Customize",file:"QTooltip/Coloring"}),(0,i.Wm)(f,{title:"Custom delay (1 second)",file:"QTooltip/OneSecond"}),(0,i.Wm)(f,{title:"With offset",file:"QTooltip/Offset"}),(0,i._)("h3",{id:"transitions",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=o=>u.copyHeading("transitions"))},"Transitions"),(0,i._)("p",null,[l,(0,i.Wm)(T,{to:"/options/transitions"},{default:(0,i.w5)((()=>[s])),_:1}),c]),(0,i.Wm)(f,{title:"Custom transition",file:"QTooltip/CustomTransition"}),(0,i._)("h3",{id:"reusable",class:"doc-heading doc-h3",onClick:e[4]||(e[4]=o=>u.copyHeading("reusable"))},"Reusable"),d,(0,i.Wm)(f,{title:"Using target",file:"QTooltip/Target"}),(0,i._)("h3",{id:"positioning",class:"doc-heading doc-h3",onClick:e[5]||(e[5]=o=>u.copyHeading("positioning"))},"Positioning"),r,p,(0,i.Wm)(k)])),_:1},8,["meta-title","related","toc","meta-desc"])}var h=t(17536),m=t(31268);const g={name:"DocMarkdownPage",components:{TooltipPositioning:m.Z},setup(){return{metaTitle:"Tooltip",metaDesc:"The QTooltip Vue component is to be used when you want to offer the user more information about a certain area in your App. When hovering the mouse over the target element (or briefly touching and holding on mobile platforms), the tooltip will appear.",related:[{name:"菜单",category:"Vue 组件",path:"/vue-components/menu"}],toc:[{id:"qtooltip-api",title:"QTooltip API"},{id:"usage",title:"Usage"},{id:"customize",title:"Customize",sub:!0},{id:"transitions",title:"Transitions",sub:!0},{id:"reusable",title:"Reusable",sub:!0},{id:"positioning",title:"Positioning",sub:!0}],copyHeading:h.Et}}};var f=t(74260);const T=(0,f.Z)(g,[["render",u]]),k=T}}]);