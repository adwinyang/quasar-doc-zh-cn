"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[16379],{16379:(n,a,s)=>{s.r(a),s.d(a,{default:()=>_n});var e=s(83673);const t=(0,e._)("p",null,[(0,e.Uk)("此页面引用安装应用扩展时执行的 "),(0,e._)("code",{class:"doc-token"},"src/install.js"),(0,e.Uk)(" 文件。并非所有应用扩展都需要安装 —— 这是一个可选步骤。")],-1),o=(0,e._)("p",null,"文件的基本结构示例：",-1),c=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e.Uk)("module"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function-variable function"},"exports"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"api"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// “api” 对象的属性和方法，描述如下"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),p=(0,e._)("p",null,"该应用扩展中(App Extension)包含的`ext-id’(String)。",-1),i=(0,e.Uk)("是一个对象，该对象具有安装此应用扩展时的提示答案。有关提示的更多信息，请查看 "),l=(0,e.Uk)("Prompts API"),k=(0,e.Uk)(" 。"),r=(0,e._)("p",null,[(0,e.Uk)("解析运行此应用扩展所在的应用程序中的路径。无需自行导入"),(0,e._)("code",{class:"doc-token"},"path"),(0,e.Uk)("和解析路径。")],-1),_=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root 目录 (根目录)"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"app"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'src/my-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root/src 目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"src"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'my-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 root/src-pwa  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"pwa"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"//  解析为 app 的 root/src-ssr  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"ssr"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 roo/src-cordova  目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"cordova"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'config.xml'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"// 解析为 app 的 roo/electron 目录"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("resolve"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"electron"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'some-file.js'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),d=(0,e._)("p",null,"运行该应用扩展的 app 根目录的完整路径(String)。",-1),u=(0,e._)("p",null,"通过 semver 条件确保应用扩展(App Extension)与主机应用中安装的软件包兼容。",-1),g=(0,e._)("p",null,"如果不满足 semver 条件，那么 @quasar/app 就会出错并停止执行。",-1),m=(0,e._)("p",null,"semver 条件示例：`‘1.x || >=2.5.0 || 5.0.0 - 7.2.3’。",-1),U=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} packageName\n * @param {string} semverCondition\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"compatibleWith"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'@quasar/app'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'1.x'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),h=(0,e._)("p",null,"通过 semver 条件确定主机应用程序中是否安装了某些包。",-1),f=(0,e._)("p",null,"semver条件示例：`‘1.x || >=2.5.0 || 5.0.0 - 7.2.3’。",-1),j=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} packageName\n * @param {string} (optional) semverCondition\n * @return {boolean} 包已安装并满足可选的semver条件\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasPackage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'vuelidate'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，这个应用程序有它(任意版本)。"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasPackage"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'quasar'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'^1.0.0'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，这个应用程序已经安装了v1版本"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),v=(0,e._)("p",null,"检查另一个应用扩展是否已安装npm，并且 Quasar CLI 已调用它。",-1),x=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * 检查是否安装了另一个应用扩展\n *\n * @param {string} extId\n * @return {boolean} 是否安装并调用了该扩展？\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"hasExtension"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("extId"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 嘿，我们有它了"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])],-1),y=(0,e._)("p",null,"获取主机应用程序包的版本。",-1),P=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n*param {string} packageName\n* @return {string|undefined}应用程序包的版本\n  */"),(0,e.Uk)("\n  console"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"log"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)(" api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getPackageVersion"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("packageName"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 输出示例。"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 1.1.3"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// 未定义 (当软件包未找到时)"),(0,e.Uk)("\n")])],-1),C=(0,e._)("p",null,"`",-1),w=(0,e._)("p",null,[(0,e.Uk)("使用新属性(props) 扩展 package.json 的辅助方法。如果指定现有属性，"),(0,e._)("strong",null,"它将覆盖"),(0,e.Uk)("它们。")],-1),b=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {object|string} extPkg - 要扩展的对象或 JSON 文件的相对路径\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendPackageJson"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"scripts"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token string-property property"},"'electron'"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'quasar dev -m electron'"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),H=(0,e._)("p",null,[(0,e.Uk)("上面的示例在应用程序的 package.json 中添加了一个 npm 脚本，这样你就可以执行 "),(0,e._)("code",{class:"doc-token"},"yarn electron"),(0,e.Uk)("(或等效的 "),(0,e._)("code",{class:"doc-token"},"npm run electron"),(0,e.Uk)(")。")],-1),I=(0,e._)("p",null,"使用新属性扩展 JSON 文件(深度合并)。如果指定现有属性，它将覆盖它们。",-1),A=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} 文件(应用根文件夹的相对路径)\n * @param {object} newData(要合并的对象)\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"extendJsonFile"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'src/some.json'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"newProp"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'some-value'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),E=(0,e._)("p",null,"将应用扩展模板中的文件夹(您指定的任何文件夹)渲染(复制)到应用的根目录中。保持与模板文件夹相同的文件夹结构。",-1),F=(0,e._)("p",null,"如果应用程序中已经存在某些文件，那么它会询问用户是否应该覆盖它们。",-1),J=(0,e._)("p",null,"需要调用 render() 的文件所在文件夹的相对路径。",-1),q=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * 将一个文件夹从扩展模板渲染到 devland\n * 需要一个相对于调用 render() 的文件路径的路径(到文件夹)\n *\n * @param {string} templatePath(要在应用程序中渲染的文件夹的相对路径)\n * @param {object} 范围(可选；渲染范围变量)\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'./path/to/a/template/folder'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),D=(0,e._)("p",null,"如果要渲染以点开头的模板文件(即 .env)，则必须遵循特定的命名约定，因为在将插件发布到 npm 时会忽略点文件：",-1),N=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e._)("span",{class:"token comment"},"# 包含点文件的模板必须使用"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"# 下划线而不是名称中的点："),(0,e.Uk)("\n\nsome-floder/_env\n\n"),(0,e._)("span",{class:"token comment"},"# 当调用 api.render('./some-folder') 时，将在项目文件夹中呈现为："),(0,e.Uk)("\n\n/.env\n")])],-1),W=(0,e._)("p",null,[(0,e.Uk)("如果要渲染名称实际上以下划线开头的文件，那么文件名必须以"),(0,e._)("code",{class:"doc-token"},"__"),(0,e.Uk)("开头(两个下划线字符而不是一个)：")],-1),L=(0,e._)("pre",{class:"doc-code language-bash"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,e.Uk)("same-floder/__my.css\n\n"),(0,e._)("span",{class:"token comment"},"# 当调用 api.render('./template') 时， 将在项目文件夹中呈现为："),(0,e.Uk)("\n\n/_my.css\n")])],-1),S=(0,e.Uk)("您还可以通过使用 "),T=(0,e.Uk)("lodash.template"),X=(0,e.Uk)(" 语法插入一些决策代码到要渲染的文件中。"),V=(0,e._)("p",null,"示例：",-1),O=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"// src/install.js"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"//(my-floder 位于与以下调用文件相同的文件夹中)"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"render"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'./my-folder'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token literal-property property"},"prompts"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(" api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("prompts\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Q=(0,e.Uk)("假设我们也使用 "),M=(0,e.Uk)("Prompts API"),Z=(0,e.Uk)(" 文件。它询问用户是否需要“Feature X”并将答案存储在名为“featureX”的变量中。"),z=(0,e._)("p",null,"在渲染过程中，我们可以对渲染的文件外观做出一些变更。这样就不需要创建两个文件夹，并根据某些决策来决定渲染哪个文件。",-1),B=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"// src/my-folder/some-file.js"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token operator"},"<"),(0,e._)("span",{class:"token operator"},"%"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("prompts"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("featureX"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"%"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" message "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'这是 “Feature X” 存在时的内容'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token operator"},"<"),(0,e._)("span",{class:"token operator"},"%"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"%"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(" message "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'这是我们没有 “Feautre X” 时的内容'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token operator"},"<"),(0,e._)("span",{class:"token operator"},"%"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"%"),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)("\n")])],-1),G=(0,e._)("p",null,"可能性仅受您的想象力的限制。",-1),K=(0,e._)("p",null,"与 api.render() 类似，不同之处在于此方法渲染单个文件。",-1),R=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * 将一个文件从扩展模板渲染成 devland\n * 需要一个相对于调用 renderFile() 的文件路径的路径(指向一个文件)\n *\n * @param {string} relativeSourcePath(相对于调用安装脚本的文件夹的文件路径)\n * @param {string} relativeTargetPath(相对于应用根目录的文件路径 —— 包括文件名！)\n * @param {object} 范围(可选；渲染范围变量)\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"renderFile"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'./path/to/a/template/filename'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'path/relative/to/app/root/filename'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  prompts：api"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("prompts\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"renderFile"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'./my-file.json'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'src/my-file.json'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),Y=(0,e._)("p",null,"获取此扩展的内部持久化配置。如果没有，则返回空对象。",-1),$=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @return {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getPersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),nn=(0,e._)("p",null,"设置此扩展的内部持久化配置。如果它已经存在，则会被覆盖。",-1),an=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"setPersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// ...."),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),sn=(0,e._)("p",null,"深入合并到此扩展的内部持久化配置中。如果扩展还没未进行任何配置，则相当于第一次设置它。",-1),en=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {object} cfg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"mergePersistentConf"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// ...."),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1),tn=(0,e._)("p",null,"添加一条消息，在 App CLI 完成安装应用扩展并将退出后打印。可以多次调用以注册多个退出日志。",-1),on=(0,e._)("pre",{class:"doc-code language-js"},[(0,e._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,e._)("span",{class:"token comment"},"/**\n * @param {string} msg\n */"),(0,e.Uk)("\napi"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"onExitLog"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'感谢安装我 awesome 扩展'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])],-1);function cn(n,a,s,cn,pn,ln){const kn=(0,e.up)("doc-link"),rn=(0,e.up)("doc-page");return(0,e.wg)(),(0,e.j4)(rn,{"meta-title":cn.metaTitle,title:"应用扩展(App Extension)安装 API",nav:cn.nav,toc:cn.toc,"meta-desc":cn.metaDesc},{default:(0,e.w5)((()=>[t,o,c,(0,e._)("h2",{id:"api-extid",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=n=>cn.copyHeading("api-extid"))},"api.extId"),p,(0,e._)("h2",{id:"api-prompts",class:"doc-heading doc-h2",onClick:a[1]||(a[1]=n=>cn.copyHeading("api-prompts"))},"api.prompts"),(0,e._)("p",null,[i,(0,e.Wm)(kn,{to:"/app-extensions/development-guide/prompts-api"},{default:(0,e.w5)((()=>[l])),_:1}),k]),(0,e._)("h2",{id:"api-resolve",class:"doc-heading doc-h2",onClick:a[2]||(a[2]=n=>cn.copyHeading("api-resolve"))},"api.resolve"),r,_,(0,e._)("h2",{id:"api-appdir",class:"doc-heading doc-h2",onClick:a[3]||(a[3]=n=>cn.copyHeading("api-appdir"))},"api.appDir"),d,(0,e._)("h2",{id:"api-compatiblewith",class:"doc-heading doc-h2",onClick:a[4]||(a[4]=n=>cn.copyHeading("api-compatiblewith"))},"api.compatibleWith"),u,g,m,U,(0,e._)("h2",{id:"api-haspackage",class:"doc-heading doc-h2",onClick:a[5]||(a[5]=n=>cn.copyHeading("api-haspackage"))},"api.hasPackage"),h,f,j,(0,e._)("h2",{id:"api-hasextension",class:"doc-heading doc-h2",onClick:a[6]||(a[6]=n=>cn.copyHeading("api-hasextension"))},"api.hasExtension"),v,x,(0,e._)("h2",{id:"api-getpackageversion",class:"doc-heading doc-h2",onClick:a[7]||(a[7]=n=>cn.copyHeading("api-getpackageversion"))},"api.getPackageVersion"),y,P,C,(0,e._)("h2",{id:"api-extendpackagejson",class:"doc-heading doc-h2",onClick:a[8]||(a[8]=n=>cn.copyHeading("api-extendpackagejson"))},"api.extendPackageJson"),w,b,H,(0,e._)("h2",{id:"api-extendjsonfile",class:"doc-heading doc-h2",onClick:a[9]||(a[9]=n=>cn.copyHeading("api-extendjsonfile"))},"api.extendJsonFile"),I,A,(0,e._)("h2",{id:"api-render",class:"doc-heading doc-h2",onClick:a[10]||(a[10]=n=>cn.copyHeading("api-render"))},"api.render"),E,F,J,q,(0,e._)("h3",{id:"文件名边缘情况",class:"doc-heading doc-h3",onClick:a[11]||(a[11]=n=>cn.copyHeading("文件名边缘情况"))},"文件名边缘情况"),D,N,W,L,(0,e._)("h3",{id:"使用范围",class:"doc-heading doc-h3",onClick:a[12]||(a[12]=n=>cn.copyHeading("使用范围"))},"使用范围"),(0,e._)("p",null,[S,(0,e.Wm)(kn,{to:"https://www.npmjs.com/package/lodash.template"},{default:(0,e.w5)((()=>[T])),_:1}),X]),V,O,(0,e._)("p",null,[Q,(0,e.Wm)(kn,{to:"/app-extensions/development-guide/prompts-api"},{default:(0,e.w5)((()=>[M])),_:1}),Z]),z,B,G,(0,e._)("h2",{id:"api-renderfile",class:"doc-heading doc-h2",onClick:a[13]||(a[13]=n=>cn.copyHeading("api-renderfile"))},"api.renderFile"),K,R,(0,e._)("h2",{id:"api-getpersistentconf",class:"doc-heading doc-h2",onClick:a[14]||(a[14]=n=>cn.copyHeading("api-getpersistentconf"))},"api.getPersistentConf"),Y,$,(0,e._)("h2",{id:"api-setpersistentconf",class:"doc-heading doc-h2",onClick:a[15]||(a[15]=n=>cn.copyHeading("api-setpersistentconf"))},"api.setPersistentConf"),nn,an,(0,e._)("h2",{id:"api-mergepersistentconf",class:"doc-heading doc-h2",onClick:a[16]||(a[16]=n=>cn.copyHeading("api-mergepersistentconf"))},"api.mergePersistentConf"),sn,en,(0,e._)("h2",{id:"api-onexitlog",class:"doc-heading doc-h2",onClick:a[17]||(a[17]=n=>cn.copyHeading("api-onexitlog"))},"api.onExitLog"),tn,on])),_:1},8,["meta-title","nav","toc","meta-desc"])}var pn=s(17536);const ln={name:"DocMarkdownPage",setup(){return{metaTitle:"应用扩展(App Extension)安装 API",metaDesc:"Quasar 应用扩展脚本 API。通过渲染或更改文件等来初始化应用程序空间。",nav:[{name:"提示 API",category:"开发指南",path:"/app-extensions/development-guide/prompts-api",dir:"left"},{name:"索引 API",category:"开发指南",path:"/app-extensions/development-guide/index-api",dir:"right"}],toc:[{id:"api-extid",title:"api.extId"},{id:"api-prompts",title:"api.prompts"},{id:"api-resolve",title:"api.resolve"},{id:"api-appdir",title:"api.appDir"},{id:"api-compatiblewith",title:"api.compatibleWith"},{id:"api-haspackage",title:"api.hasPackage"},{id:"api-hasextension",title:"api.hasExtension"},{id:"api-getpackageversion",title:"api.getPackageVersion"},{id:"api-extendpackagejson",title:"api.extendPackageJson"},{id:"api-extendjsonfile",title:"api.extendJsonFile"},{id:"api-render",title:"api.render"},{id:"文件名边缘情况",title:"文件名边缘情况",sub:!0},{id:"使用范围",title:"使用范围",sub:!0},{id:"api-renderfile",title:"api.renderFile"},{id:"api-getpersistentconf",title:"api.getPersistentConf"},{id:"api-setpersistentconf",title:"api.setPersistentConf"},{id:"api-mergepersistentconf",title:"api.mergePersistentConf"},{id:"api-onexitlog",title:"api.onExitLog"}],copyHeading:pn.Et}}};var kn=s(74260);const rn=(0,kn.Z)(ln,[["render",cn]]),_n=rn}}]);