"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[97222],{97222:(n,a,s)=>{s.r(a),s.d(a,{default:()=>cn});var t=s(83673);const e=(0,t._)("p",null,"RTL is referring to “right to left” UI for languages that need it.",-1),o=(0,t._)("p",null,[(0,t.Uk)("To enable it, you need to edit "),(0,t._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,t.Uk)(":")],-1),l=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t._)("span",{class:"token literal-property property"},"build"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"rtl"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),c=(0,t._)("p",null,[(0,t.Uk)("You first need to install "),(0,t._)("code",{class:"doc-token"},"postcss-rtlcss"),(0,t.Uk)(" package:")],-1),p=(0,t._)("pre",{class:"doc-code language-bash"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,t.Uk)("$ "),(0,t._)("span",{class:"token function"},"yarn"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t.Uk)(" -D postcss-rtlcss\n"),(0,t._)("span",{class:"token comment"},"# or"),(0,t.Uk)("\n$ "),(0,t._)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -D postcss-rtlcss\n"),(0,t._)("span",{class:"token comment"},"# or"),(0,t.Uk)("\n$ "),(0,t._)("span",{class:"token function"},"pnpm"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t.Uk)(" quasar -D postcss-rtlcss\n")])],-1),u=(0,t._)("p",null,[(0,t.Uk)("Then create "),(0,t._)("code",{class:"doc-token"},"/postcss.config.js"),(0,t.Uk)(" file if you don’t have it already, and add this to it:")],-1),i=(0,t._)("pre",{class:"doc-code language-js"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,t.Uk)("module"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("exports "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token literal-property property"},"plugins"),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token function"},"require"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'postcss-rtlcss'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},'// <<<< in "plugins"'),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),r=(0,t.Uk)("RTL is tightly coupled to "),k=(0,t.Uk)("Quasar Language Packs"),d=(0,t.Uk)(". "),_=(0,t._)("strong",null,"When Quasar is set to use an RTL language",-1),g=(0,t.Uk)(" (language pack has “rtl” prop set to “true”) and "),U=(0,t._)("strong",null,"RTL support is enabled",-1),h=(0,t.Uk)(" (check the “Enabling RTL support” section above), then the UI will dynamically transform Quasar & your website/app code for RTL."),m=(0,t._)("p",null,"Let’s discuss about each of these requirements:",-1),y=(0,t._)("em",null,"Quasar needs to be set to use an RTL language",-1),f=(0,t.Uk)(". See "),L=(0,t.Uk)("Quasar Language Packs"),T=(0,t.Uk)(" on how you can set a language. You can set a language as default or dynamically set one."),b=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("em",null,"RTL support needs to be enabled"),(0,t.Uk)(". Please double-check the “Enabling RTL support” section above. What this does is it compiles CSS for both your website/app code and for Quasar components and add corresponding RTL CSS rules automatically. Your CSS bundle will slightly increase in size due to the addition of these CSS rules.")])],-1),w=(0,t._)("li",null,[(0,t._)("p",null,[(0,t.Uk)("Optional: "),(0,t._)("em",null,"Treat devland source CSS as RTL"),(0,t.Uk)(". By default, Quasar assumes that all styles are written in LTR direction and generates corresponding RTL styles for them. Should you wish to write your own css directly in RTL then you need to:")]),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Uk)("(Quasar CLI) set quasar.conf.js > “build” > rtl > “source” to "),(0,t._)("code",{class:"doc-token"},"rtl")]),(0,t._)("li",null,[(0,t.Uk)("(Quasar Vite plugin / Vue CLI plugin) set "),(0,t._)("code",{class:"doc-token"},"require('postcss-rtlcss', { source: 'rtl' })"),(0,t.Uk)(" in /postcss.config.js")])])],-1),R=(0,t.Uk)("Quasar CLI makes use of "),S=(0,t.Uk)("postcss-rtlcss"),C=(0,t.Uk)(", so if you want to tweak the RTL settings through quasar.conf.js > build > rtl then it must match "),v=(0,t.Uk)("postcss-rtlcss options"),q=(0,t.Uk)("."),Q=(0,t._)("li",null,[(0,t._)("p",null,"Both RTL and non-RTL Quasar language packs will work together and dynamically switch to/from RTL. So only choosing an RTL Quasar language pack will trigger the RTL UI for you. You don’t need separate builds of your app (one for non-RTL and one for RTL-only). The RTL is dynamically changed for you automatically.")],-1),x=(0,t.Uk)("You can dynamically detect if you are on RTL mode by taking a look at Boolean "),I=(0,t._)("code",{class:"doc-token"},"$q.lang.rtl",-1),H=(0,t.Uk)(". More info on "),j=(0,t.Uk)("The $q object"),D=(0,t.Uk)("."),M=(0,t._)("li",null,[(0,t._)("p",null,"You need to be careful when writing your own CSS. Like mentioned above, if RTL support is enabled then RTL (LTR if postcss-rtl config has “source” set to “ltr”) rules will be automatically added based on your CSS code. So writing:"),(0,t._)("pre",{class:"doc-code language-css"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-css"},[(0,t._)("span",{class:"token selector"},".my-class"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token property"},"margin-left"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 10px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token property"},"right"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 5px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("p",null,"…will add this rule for RTL:"),(0,t._)("pre",{class:"doc-code language-css"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-css"},[(0,t._)("span",{class:"token selector"},"[dir=rtl] .my-class"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token property"},"margin-right"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 10px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token property"},"left"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 5px"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("p",null,"Any CSS rule that refers to “left” or “right” is automatically triggering an equivalent RTL CSS rule to be added.")],-1),V=(0,t._)("p",null,"If you need an exception so your CSS code will not add a corresponding RTL rule, then add this comment:",-1),W=(0,t._)("pre",{class:"doc-code language-css"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-css"},[(0,t._)("span",{class:"token selector"},".my-class"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token property"},"margin-left"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(" 10px "),(0,t._)("span",{class:"token comment"},"/* rtl:ignore */"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])],-1),P=(0,t._)("p",null,"…or SCSS with indented form:",-1),E=(0,t._)("pre",{class:"doc-code language-sass"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-sass"},[(0,t._)("span",{class:"token selector"},".my-class"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token property-line"},[(0,t.Uk)("  "),(0,t._)("span",{class:"token property"},"margin-left"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(' 10px #{"'),(0,t._)("span",{class:"token operator"},"/"),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token property"},"rtl"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token property"},"ignore"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"*"),(0,t._)("span",{class:"token operator"},"/"),(0,t.Uk)('"}')]),(0,t.Uk)("\n")])],-1),Y=(0,t._)("p",null,"…or default SCSS:",-1),O=(0,t._)("pre",{class:"doc-code language-sass"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-sass"},[(0,t._)("span",{class:"token selector"},".my-class {"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token property-line"},[(0,t.Uk)("  "),(0,t._)("span",{class:"token property"},"margin-left"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(' 10px #{"'),(0,t._)("span",{class:"token operator"},"/"),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token property"},"rtl"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token property"},"ignore"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"*"),(0,t._)("span",{class:"token operator"},"/"),(0,t.Uk)('"};')]),(0,t.Uk)("\n"),(0,t._)("span",{class:"token selector"},"}"),(0,t.Uk)("\n")])],-1),$=(0,t._)("p",null,[(0,t.Uk)("Now both RTL and non-RTL UI mode will have "),(0,t._)("code",{class:"doc-token"},"margin-left"),(0,t.Uk)(" prop.")],-1),A=(0,t._)("p",null,[(0,t.Uk)("Sometimes you’ll need to make exceptions for whole DOM elements / components. In this case, add "),(0,t._)("code",{class:"doc-token"},'dir="ltr"'),(0,t.Uk)(" or "),(0,t._)("code",{class:"doc-token"},'dir="rtl"'),(0,t.Uk)(" HTML attribute to the outermost DOM element / component template:")],-1),B=(0,t._)("pre",{class:"doc-code language-html"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-html"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("div")]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"dir"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("rtl"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"\x3c!--\n    this DIV and all its content will use RTL mode\n    regardless of Quasar language pack RTL settings\n  --\x3e"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("div")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n")])],-1),z=(0,t._)("p",null,"Or, if you need your RTL UI to use left-to-right (ltr) mode for a DOM element / component:",-1),F=(0,t._)("pre",{class:"doc-code language-html"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-html"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("div")]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"dir"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("ltr"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"\x3c!--\n    this DIV and all its content will use non-RTL mode\n    regardless of Quasar language pack RTL settings\n  --\x3e"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("div")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n")])],-1),J=(0,t._)("p",null,"To enable RTL UIs in UMD you need to include the RTL equivalent CSS tag for your Quasar version and also pack in a Quasar RTL language pack (like Hebrew or Farsi). Example:",-1),N=(0,t._)("pre",{class:"doc-code language-html"},[(0,t._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-html"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("html")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("head")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n    ...\n    "),(0,t._)("span",{class:"token comment"},'\x3c!-- Replace "2.0.0" (below) with your Quasar version. --\x3e'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("link")]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"href"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("https://cdn.jsdelivr.net/npm/quasar@2/dist/quasar.rtl.prod.css"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"rel"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("stylesheet"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"type"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("text/css"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("head")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n\n  "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("body")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n    ...\n\n    "),(0,t._)("span",{class:"token comment"},'\x3c!--\n      We also need an RTL Quasar language pack; let\'s take Hebrew as an example;\n      include this after Quasar JS tag;\n      Replace "2.0.0" (below) with your Quasar version.\n    --\x3e'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t.Uk)(),(0,t._)("span",{class:"token attr-name"},"src"),(0,t._)("span",{class:"token attr-value"},[(0,t._)("span",{class:"token punctuation attr-equals"},"="),(0,t._)("span",{class:"token punctuation"},'"'),(0,t.Uk)("https://cdn.jsdelivr.net/npm/quasar@2/dist/lang/he.umd.prod.js"),(0,t._)("span",{class:"token punctuation"},'"')]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t._)("span",{class:"token script"}),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t.Uk)("script")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t._)("span",{class:"token script"},[(0,t._)("span",{class:"token language-javascript"},[(0,t.Uk)("\n      Quasar"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("lang"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"set"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("Quasar"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("lang"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("he"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    ")])]),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("script")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("body")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n"),(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token tag"},[(0,t._)("span",{class:"token punctuation"},"</"),(0,t.Uk)("html")]),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)("\n")])],-1),Z=(0,t.Uk)("Check what tags you need to include in your HTML files by using our "),G=(0,t.Uk)("UMD tag generator"),K=(0,t.Uk)(" and making sure that you tick the “RTL CSS support” checkbox. Also notice the "),X=(0,t._)("code",{class:"doc-token"},'<html dir="rtl">',-1),nn=(0,t.Uk)(" tag at the beginning of the generated html file – you’ll need that too."),an=(0,t._)("div",{class:"doc-note doc-note--warning"},[(0,t._)("p",{class:"doc-note__title"},"CAVEAT"),(0,t._)("p",null,"Quasar CLI automatically adds equivalent RTL CSS rules for your website/app code, but this is not the case for UMD where Quasar CLI is not being used. You’ll have to manage writing the RTL equivalent of your website/app CSS code by yourself. It’s only Quasar components that will have this handled automatically.")],-1);function sn(n,a,s,sn,tn,en){const on=(0,t.up)("doc-link"),ln=(0,t.up)("doc-page");return(0,t.wg)(),(0,t.j4)(ln,{"meta-title":sn.metaTitle,title:"RTL Support",related:sn.related,toc:sn.toc,"meta-desc":sn.metaDesc},{default:(0,t.w5)((()=>[e,(0,t._)("h2",{id:"enabling-rtl-support",class:"doc-heading doc-h2",onClick:a[0]||(a[0]=n=>sn.copyHeading("enabling-rtl-support"))},"Enabling RTL support"),(0,t._)("h3",{id:"quasar-cli",class:"doc-heading doc-h3",onClick:a[1]||(a[1]=n=>sn.copyHeading("quasar-cli"))},"Quasar CLI"),o,l,(0,t._)("h3",{id:"quasar-vite-plugin-vue-cli-plugin",class:"doc-heading doc-h3",onClick:a[2]||(a[2]=n=>sn.copyHeading("quasar-vite-plugin-vue-cli-plugin"))},"Quasar Vite Plugin / Vue CLI Plugin"),c,p,u,i,(0,t._)("h2",{id:"how-it-works",class:"doc-heading doc-h2",onClick:a[3]||(a[3]=n=>sn.copyHeading("how-it-works"))},"How it works"),(0,t._)("p",null,[r,(0,t.Wm)(on,{to:"/options/quasar-language-packs"},{default:(0,t.w5)((()=>[k])),_:1}),d,_,g,U,h]),m,(0,t._)("ol",null,[(0,t._)("li",null,[(0,t._)("p",null,[y,f,(0,t.Wm)(on,{to:"/options/quasar-language-packs"},{default:(0,t.w5)((()=>[L])),_:1}),T])]),b,w]),(0,t._)("h2",{id:"configuration",class:"doc-heading doc-h2",onClick:a[4]||(a[4]=n=>sn.copyHeading("configuration"))},"Configuration"),(0,t._)("p",null,[R,(0,t.Wm)(on,{to:"https://github.com/elchininet/postcss-rtlcss"},{default:(0,t.w5)((()=>[S])),_:1}),C,(0,t.Wm)(on,{to:"https://github.com/elchininet/postcss-rtlcss#options"},{default:(0,t.w5)((()=>[v])),_:1}),q]),(0,t._)("h2",{id:"things-to-keep-in-mind",class:"doc-heading doc-h2",onClick:a[5]||(a[5]=n=>sn.copyHeading("things-to-keep-in-mind"))},"Things to keep in mind"),(0,t._)("ul",null,[Q,(0,t._)("li",null,[(0,t._)("p",null,[x,I,H,(0,t.Wm)(on,{to:"/options/the-q-object"},{default:(0,t.w5)((()=>[j])),_:1}),D])]),M]),(0,t._)("h3",{id:"marking-css-rules-as-exceptions",class:"doc-heading doc-h3",onClick:a[6]||(a[6]=n=>sn.copyHeading("marking-css-rules-as-exceptions"))},"Marking CSS rules as exceptions"),V,W,P,E,Y,O,$,A,B,z,F,(0,t._)("h2",{id:"handling-quasar-umd",class:"doc-heading doc-h2",onClick:a[7]||(a[7]=n=>sn.copyHeading("handling-quasar-umd"))},"Handling Quasar UMD"),J,N,(0,t._)("p",null,[Z,(0,t.Wm)(on,{to:"/start/umd"},{default:(0,t.w5)((()=>[G])),_:1}),K,X,nn]),an])),_:1},8,["meta-title","related","toc","meta-desc"])}var tn=s(17536);const en={name:"DocMarkdownPage",setup(){return{metaTitle:"RTL Support",metaDesc:"Right to left support in a Quasar app.",related:[{name:"Quasar 语言包",category:"选项和辅助",path:"/options/quasar-language-packs"},{name:"应用程序国际化",category:"选项和辅助",path:"/options/app-internationalization"}],toc:[{id:"enabling-rtl-support",title:"Enabling RTL support"},{id:"quasar-cli",title:"Quasar CLI",sub:!0},{id:"quasar-vite-plugin-vue-cli-plugin",title:"Quasar Vite Plugin / Vue CLI Plugin",sub:!0},{id:"how-it-works",title:"How it works"},{id:"configuration",title:"Configuration"},{id:"things-to-keep-in-mind",title:"Things to keep in mind"},{id:"marking-css-rules-as-exceptions",title:"Marking CSS rules as exceptions",sub:!0},{id:"handling-quasar-umd",title:"Handling Quasar UMD"}],copyHeading:tn.Et}}};var on=s(74260);const ln=(0,on.Z)(en,[["render",sn]]),cn=ln}}]);