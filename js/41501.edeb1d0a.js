"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[41501],{41501:(e,t,l)=>{l.r(t),l.d(t,{default:()=>N});var n=l(83673);const o=(0,n._)("p",null,"Quasar Tree represents a highly configurable component that displays hierarchical data, such as a table of contents in a tree structure.",-1),d=(0,n.Uk)("Dense "),a=(0,n.Uk)("More info: "),i=(0,n.Uk)("QSplitter"),c=(0,n.Uk)(", "),s=(0,n.Uk)("QTabPanels"),r=(0,n.Uk)("."),u=(0,n._)("p",null,"Notice (in the example below) the default header and body slot customization.",-1),h=(0,n._)("p",null,"Notice (in the example below) the custom header and body slots.",-1),_=(0,n._)("div",{class:"doc-note doc-note--warning"},[(0,n._)("p",{class:"doc-note__title"},"WARNING"),(0,n._)("p",null,[(0,n.Uk)("Clicking or pressing "),(0,n._)("code",{class:"doc-token"},"SPACE"),(0,n.Uk)(" or "),(0,n._)("code",{class:"doc-token"},"ENTER"),(0,n.Uk)(" on the custom header selects the tree item (and the custom header is blurred).")]),(0,n._)("p",null,[(0,n.Uk)("If you don’t want this to happen just wrap the content of the custom header in a "),(0,n._)("code",{class:"doc-token"},"<div @click.stop @keypress.stop>"),(0,n.Uk)(" (or add the listeners to the respective component/element that is emitting them).")])],-1),p=(0,n._)("p",null,"In the example below, sibling nodes get contracted when one gets expanded.",-1),k=(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Uk)("Selection (through QTree "),(0,n._)("code",{class:"doc-token"},"selected"),(0,n.Uk)(" prop) refers to the currently selected node (gets highlighted with different background).")]),(0,n._)("li",null,[(0,n.Uk)("Ticking (through QTree "),(0,n._)("code",{class:"doc-token"},"ticked"),(0,n.Uk)(" prop) refers to the checkbox associated with each node.")]),(0,n._)("li",null,[(0,n.Uk)("Expansion (through QTree "),(0,n._)("code",{class:"doc-token"},"expanded"),(0,n.Uk)(" prop) refers to the nodes that are expanded.")])],-1),g=(0,n._)("p",null,[(0,n.Uk)("All properties above require to be dynamically bound using "),(0,n._)("code",{class:"doc-token"},"v-model:<prop_name>"),(0,n.Uk)(" directive in order for them to work correctly (example: "),(0,n._)("code",{class:"doc-token"},"v-model:expanded"),(0,n.Uk)(").")],-1),m=(0,n._)("p",null,"There are three ticking strategy: ‘leaf’, ‘leaf-filtered’, ‘strict’ with an additional (and default) ‘none’ which disables ticking.",-1),f=(0,n._)("thead",null,[(0,n._)("tr",null,[(0,n._)("th",{class:"text-left"},"Strategy"),(0,n._)("th",{class:"text-left"},"Description")])],-1),y=(0,n._)("tbody",null,[(0,n._)("tr",null,[(0,n._)("td",null,"leaf"),(0,n._)("td",null,"Ticked nodes are only the leaves. Ticking a node influences the parent’s ticked state too (parent becomes partially ticked or ticked), as well as its children (all tickable children become ticked).")]),(0,n._)("tr",null,[(0,n._)("td",null,"leaf-filtered"),(0,n._)("td",null,[(0,n.Uk)("Same concept as "),(0,n._)("code",{class:"doc-token"},"leaf"),(0,n.Uk)(", only that this strategy applies only to filtered nodes (the nodes that remain visible after filtering).")])]),(0,n._)("tr",null,[(0,n._)("td",null,"strict"),(0,n._)("td",null,"Ticked nodes are independent of parent or children tick state.")])],-1),b=(0,n._)("p",null,[(0,n.Uk)("You can apply a global tick strategy for a QTree and locally change the ticking strategy for a certain node by specifying the "),(0,n._)("code",{class:"doc-token"},"tickStrategy"),(0,n.Uk)(" in the "),(0,n._)("code",{class:"doc-token"},"nodes"),(0,n.Uk)(" model.")],-1),T=(0,n._)("p",null,[(0,n.Uk)("You can customize the filtering method by specifying the "),(0,n._)("code",{class:"doc-token"},"filter-method"),(0,n.Uk)(" prop. The method below filters by input if it also has ‘(*)’:")],-1),x=(0,n._)("p",null,"The following describes a node’s properties that are taken into account by QTree’s v-model.",-1),U=(0,n._)("thead",null,[(0,n._)("tr",null,[(0,n._)("th",{class:"text-left"},"Node Property"),(0,n._)("th",{class:"text-left"},"Type"),(0,n._)("th",{class:"text-left"},"Behavior when not present"),(0,n._)("th",{class:"text-left"},"Description")])],-1),w=(0,n._)("tbody",null,[(0,n._)("tr",null,[(0,n._)("td",null,"<nodeKey>"),(0,n._)("td",null,"String, Number"),(0,n._)("td",null,"An error is generated"),(0,n._)("td",null,[(0,n.Uk)("Node’s key. The key is picked from the key specified in "),(0,n._)("code",{class:"doc-token"},"nodeKey"),(0,n.Uk)(" property.")])]),(0,n._)("tr",null,[(0,n._)("td",null,"label"),(0,n._)("td",null,"String"),(0,n._)("td",null,"The item has no label"),(0,n._)("td",null,[(0,n.Uk)("Node’s label. When "),(0,n._)("code",{class:"doc-token"},"labelKey"),(0,n.Uk)(" prop is set the label is picked from that key.")])]),(0,n._)("tr",null,[(0,n._)("td",null,"icon"),(0,n._)("td",null,"String"),(0,n._)("td",null,"The default icon is used"),(0,n._)("td",null,"Node’s icon.")]),(0,n._)("tr",null,[(0,n._)("td",null,"iconColor"),(0,n._)("td",null,"String"),(0,n._)("td",null,"The inherited color is used"),(0,n._)("td",null,"Node’s icon color. One from Quasar Color Palette.")]),(0,n._)("tr",null,[(0,n._)("td",null,"img"),(0,n._)("td",null,"String"),(0,n._)("td",null,"No image is displayed"),(0,n._)("td",null,"Node’s image. Use /public folder. Example: ‘mountains.png’")]),(0,n._)("tr",null,[(0,n._)("td",null,"avatar"),(0,n._)("td",null,"String"),(0,n._)("td",null,"No avatar is displayed"),(0,n._)("td",null,"Node’s avatar. Use /public folder. Example: ‘boy-avatar.png’")]),(0,n._)("tr",null,[(0,n._)("td",null,"children"),(0,n._)("td",null,"Array"),(0,n._)("td",null,"This node has no sub-nodes"),(0,n._)("td",null,"Array of nodes as children.")]),(0,n._)("tr",null,[(0,n._)("td",null,"disabled"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"The node is enabled"),(0,n._)("td",null,"Is node disabled?")]),(0,n._)("tr",null,[(0,n._)("td",null,"expandable"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"The node is expandable"),(0,n._)("td",null,"Is node expandable?")]),(0,n._)("tr",null,[(0,n._)("td",null,"selectable"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"The node is selectable"),(0,n._)("td",null,"Is node selectable?")]),(0,n._)("tr",null,[(0,n._)("td",null,"handler"),(0,n._)("td",null,"Function"),(0,n._)("td",null,"No extra function is called"),(0,n._)("td",null,[(0,n.Uk)("Custom function that should be called on click on node. Receives "),(0,n._)("code",{class:"doc-token"},"node"),(0,n.Uk)(" as parameter.")])]),(0,n._)("tr",null,[(0,n._)("td",null,"tickable"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"The node is tickable according to tick strategy"),(0,n._)("td",null,"When using a tick strategy, each node shows a checkbox. Should a node’s checkbox be disabled?")]),(0,n._)("tr",null,[(0,n._)("td",null,"noTick"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"Node displays a checkbox"),(0,n._)("td",null,"When using a tick strategy, should node display a checkbox?")]),(0,n._)("tr",null,[(0,n._)("td",null,"tickStrategy"),(0,n._)("td",null,"String"),(0,n._)("td",null,"Tick strategy ‘none’ is used"),(0,n._)("td",null,"Override global tick strategy for this node only. One of ‘leaf’, ‘leaf-filtered’, ‘strict’, ‘none’.")]),(0,n._)("tr",null,[(0,n._)("td",null,"lazy"),(0,n._)("td",null,"Boolean"),(0,n._)("td",null,"Children are not lazy loaded"),(0,n._)("td",null,"Should children be lazy loaded? In this case also don’t specify ‘children’ prop.")]),(0,n._)("tr",null,[(0,n._)("td",null,"header"),(0,n._)("td",null,"String"),(0,n._)("td",null,"Slot ‘default-header’ is used"),(0,n._)("td",null,"Node header scoped slot name, without the required ‘header-’ prefix. Example: ‘story’ refers to ‘header-story’ scoped slot.")]),(0,n._)("tr",null,[(0,n._)("td",null,"body"),(0,n._)("td",null,"String"),(0,n._)("td",null,"Slot ‘default-body’ is used"),(0,n._)("td",null,"Node body scoped slot name, without the required ‘body-’ prefix. Example: ‘story’ refers to ‘body-story’ scoped slot.")])],-1);function S(e,t,l,S,C,v){const Q=(0,n.up)("doc-api"),W=(0,n.up)("doc-example"),N=(0,n.up)("q-badge"),z=(0,n.up)("doc-link"),H=(0,n.up)("q-markup-table"),D=(0,n.up)("doc-page");return(0,n.wg)(),(0,n.j4)(D,{"meta-title":S.metaTitle,title:"Tree","meta-desc":S.metaDesc},{default:(0,n.w5)((()=>[o,(0,n._)("h2",{id:"qtree-api",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=e=>S.copyHeading("qtree-api"))},"QTree API"),(0,n.Wm)(Q,{file:"QTree"}),(0,n._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:t[1]||(t[1]=e=>S.copyHeading("usage"))},"Usage"),(0,n._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:t[2]||(t[2]=e=>S.copyHeading("basic"))},"Basic"),(0,n.Wm)(W,{title:"Basic",file:"QTree/Basic"}),(0,n._)("h3",{id:"no-connector-lines",class:"doc-heading doc-h3",onClick:t[3]||(t[3]=e=>S.copyHeading("no-connector-lines"))},"No connector lines"),(0,n.Wm)(W,{title:"No connectors",file:"QTree/NoConnectors"}),(0,n._)("h3",{id:"dense",class:"doc-heading doc-h3",onClick:t[4]||(t[4]=e=>S.copyHeading("dense"))},[d,(0,n.Wm)(N,{align:"top",color:"brand-primary",label:"v2.2.4+"})]),(0,n.Wm)(W,{title:"Dense",file:"QTree/DenseTree"}),(0,n._)("h3",{id:"dark",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=e=>S.copyHeading("dark"))},"Dark"),(0,n.Wm)(W,{title:"Dark",file:"QTree/Dark",dark:""}),(0,n._)("h3",{id:"integrated-example",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=e=>S.copyHeading("integrated-example"))},"Integrated example"),(0,n.Wm)(W,{title:"With QSplitter and QTabPanels",file:"QTree/Splitter"}),(0,n._)("p",null,[a,(0,n.Wm)(z,{to:"/vue-components/splitter"},{default:(0,n.w5)((()=>[i])),_:1}),c,(0,n.Wm)(z,{to:"/vue-components/tab-panels"},{default:(0,n.w5)((()=>[s])),_:1}),r]),(0,n._)("h3",{id:"customize-content",class:"doc-heading doc-h3",onClick:t[7]||(t[7]=e=>S.copyHeading("customize-content"))},"Customize content"),u,(0,n.Wm)(W,{title:"Default header and body slots",file:"QTree/SlotsDefault"}),h,(0,n.Wm)(W,{title:"Customizing nodes",file:"QTree/SlotsCustomized"}),_,(0,n._)("h3",{id:"accordion-filtering-and-selectable",class:"doc-heading doc-h3",onClick:t[8]||(t[8]=e=>S.copyHeading("accordion-filtering-and-selectable"))},"Accordion, filtering and selectable"),p,(0,n.Wm)(W,{title:"Accordion mode",file:"QTree/Accordion"}),(0,n.Wm)(W,{title:"Filtering nodes",file:"QTree/FilterDefault"}),(0,n.Wm)(W,{title:"Selectable nodes",file:"QTree/Selectable"}),(0,n._)("h3",{id:"lazy-loading",class:"doc-heading doc-h3",onClick:t[9]||(t[9]=e=>S.copyHeading("lazy-loading"))},"Lazy loading"),(0,n.Wm)(W,{title:"Lazy loading nodes",file:"QTree/LazyLoad"}),(0,n._)("h3",{id:"selection-vs-ticking-expansion",class:"doc-heading doc-h3",onClick:t[10]||(t[10]=e=>S.copyHeading("selection-vs-ticking-expansion"))},"Selection vs ticking, expansion"),k,g,(0,n.Wm)(W,{title:"Syncing node properties",file:"QTree/Sync"}),(0,n._)("h3",{id:"tick-strategy",class:"doc-heading doc-h3",onClick:t[11]||(t[11]=e=>S.copyHeading("tick-strategy"))},"Tick strategy"),m,(0,n.Wm)(H,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,n.w5)((()=>[f,y])),_:1}),b,(0,n.Wm)(W,{title:"Tick strategy",file:"QTree/TickStrategy"}),(0,n._)("h3",{id:"custom-filter-method",class:"doc-heading doc-h3",onClick:t[12]||(t[12]=e=>S.copyHeading("custom-filter-method"))},"Custom filter method"),T,(0,n.Wm)(W,{title:"Custom filter",file:"QTree/FilterCustom"}),(0,n._)("h3",{id:"nodes-model-structure",class:"doc-heading doc-h3",onClick:t[13]||(t[13]=e=>S.copyHeading("nodes-model-structure"))},"Nodes model structure"),x,(0,n.Wm)(H,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,n.w5)((()=>[U,w])),_:1})])),_:1},8,["meta-title","meta-desc"])}var C=l(17536);const v={name:"DocMarkdownPage",setup(){return{metaTitle:"Tree",metaDesc:"The QTree is a highly configurable Vue component which displays hierarchical data, such as a table of contents in a tree structure.",copyHeading:C.Et}}};var Q=l(74260);const W=(0,Q.Z)(v,[["render",S]]),N=W}}]);