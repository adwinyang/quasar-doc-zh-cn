"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[3899],{3899:(n,s,a)=>{a.r(s),a.d(s,{default:()=>S});var o=a(83673);const e=(0,o._)("p",null,[(0,o.Uk)("Accessing "),(0,o._)("code",{class:"doc-token"},"process.env"),(0,o.Uk)(" can help you in many ways:")],-1),t=(0,o._)("ul",null,[(0,o._)("li",null,"differentiating runtime procedure depending on Quasar Mode (SPA/PWA/Cordova/Electron)"),(0,o._)("li",null,"differentiating runtime procedure depending if running a dev or production build"),(0,o._)("li",null,"adding flags to it based on terminal environment variables at build time")],-1),c=(0,o._)("thead",null,[(0,o._)("tr",null,[(0,o._)("th",{class:"text-left"},"Name"),(0,o._)("th",{class:"text-left"},"Type"),(0,o._)("th",{class:"text-left"},"Meaning")])],-1),p=(0,o._)("tbody",null,[(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.DEV")]),(0,o._)("td",null,"Boolean"),(0,o._)("td",null,"Code runs in development mode")]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.PROD")]),(0,o._)("td",null,"Boolean"),(0,o._)("td",null,"Code runs in production mode")]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.DEBUGGING")]),(0,o._)("td",null,"Boolean"),(0,o._)("td",null,[(0,o.Uk)("Code runs in development mode or "),(0,o._)("code",{class:"doc-token"},"--debug"),(0,o.Uk)(" flag was set for production mode")])]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.CLIENT")]),(0,o._)("td",null,"Boolean"),(0,o._)("td",null,"Code runs on client (not on server)")]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.SERVER")]),(0,o._)("td",null,"Boolean"),(0,o._)("td",null,"Code runs on server (not on client)")]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.MODE")]),(0,o._)("td",null,"String"),(0,o._)("td",null,[(0,o.Uk)("Quasar CLI mode ("),(0,o._)("code",{class:"doc-token"},"spa"),(0,o.Uk)(", "),(0,o._)("code",{class:"doc-token"},"pwa"),(0,o.Uk)(", …)")])]),(0,o._)("tr",null,[(0,o._)("td",null,[(0,o._)("code",{class:"doc-token"},"process.env.NODE_ENV")]),(0,o._)("td",null,"String"),(0,o._)("td",null,[(0,o.Uk)("Has two possible values: "),(0,o._)("code",{class:"doc-token"},"production"),(0,o.Uk)(" or "),(0,o._)("code",{class:"doc-token"},"development")])])],-1),l=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token keyword"},"if"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"DEV"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  console"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token template-string"},[(0,o._)("span",{class:"token template-punctuation string"},"`"),(0,o._)("span",{class:"token string"},"I'm on a development build"),(0,o._)("span",{class:"token template-punctuation string"},"`")]),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n\n"),(0,o._)("span",{class:"token comment"},"// process.env.MODE is the <mode> in"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token comment"},'// "quasar dev/build -m <mode>"'),(0,o.Uk)("\n"),(0,o._)("span",{class:"token comment"},"// (defaults to 'spa' if -m parameter is not specified)"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token keyword"},"if"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"MODE"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"==="),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'electron'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token keyword"},"const"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)(" BrowserWindow "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"="),(0,o.Uk)(),(0,o._)("span",{class:"token function"},"require"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'@electron/remote'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token keyword"},"const"),(0,o.Uk)(" win "),(0,o._)("span",{class:"token operator"},"="),(0,o.Uk)(" BrowserWindow"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"getFocusedWindow"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n\n  "),(0,o._)("span",{class:"token keyword"},"if"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("win"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"isMaximized"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n    win"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"unmaximize"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token keyword"},"else"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n    win"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"maximize"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),k=(0,o._)("p",null,[(0,o.Uk)("When compiling your website/app, "),(0,o._)("code",{class:"doc-token"},"if ()"),(0,o.Uk)(" branches depending on process.env are evaluated and if the expression is "),(0,o._)("code",{class:"doc-token"},"false"),(0,o.Uk)(" then they get stripped out of the file. Example:")],-1),u=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token keyword"},"if"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"DEV"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  console"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'dev'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token keyword"},"else"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  console"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'build'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n\n"),(0,o._)("span",{class:"token comment"},'// running with "quasar dev" will result in:'),(0,o.Uk)("\nconsole"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'dev'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token comment"},'// while running with "quasar build" will result in:'),(0,o.Uk)("\nconsole"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'build'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n")])],-1),i=(0,o._)("p",null,[(0,o.Uk)("Notice above that the "),(0,o._)("code",{class:"doc-token"},"if"),(0,o.Uk)("s are evaluated and also completely stripped out at compile-time, resulting in a smaller bundle.")],-1),r=(0,o._)("p",null,"You can combine what you learned in the section above with dynamic imports:",-1),_=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token keyword"},"if"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"MODE"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"==="),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'electron'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token keyword"},"import"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'my-fancy-npm-package'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"then"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token parameter"},[(0,o._)("span",{class:"token keyword"},"package")]),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"=>"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token comment"},'// notice "default" below, which is the prop with which'),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token comment"},"// you can access what your npm imported package exports"),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token keyword"},"package"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("default"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"doSomething"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),d=(0,o._)("p",null,[(0,o.Uk)("You can add your own definitions to "),(0,o._)("code",{class:"doc-token"},"process.env"),(0,o.Uk)(" through "),(0,o._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,o.Uk)(" file.")],-1),U=(0,o._)("p",null,[(0,o.Uk)("But first, there’s two concepts that need to be understood here. The env variables from the terminal that are available in "),(0,o._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,o.Uk)(" file itself and the environment variables that you pass to your UI code.")],-1),g=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token comment"},"// quasar.conf.js"),(0,o.Uk)("\n\n"),(0,o._)("span",{class:"token comment"},"// Accessing terminal variables"),(0,o.Uk)("\nconsole"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"log"),(0,o._)("span",{class:"token punctuation"},"("),(0,o.Uk)("process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)("\n\nmodule"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function-variable function"},"exports"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"="),(0,o.Uk)(),(0,o._)("span",{class:"token keyword"},"function"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token parameter"},"ctx"),(0,o._)("span",{class:"token punctuation"},")"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token keyword"},"return"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token comment"},"// ..."),(0,o.Uk)("\n\n    "),(0,o._)("span",{class:"token literal-property property"},"build"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n      "),(0,o._)("span",{class:"token comment"},"// passing down to UI code from quasar.conf.js"),(0,o.Uk)("\n      "),(0,o._)("span",{class:"token literal-property property"},"env"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n        "),(0,o._)("span",{class:"token constant"},"API"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(" ctx"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("dev\n          "),(0,o._)("span",{class:"token operator"},"?"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'https://dev.api.com'"),(0,o.Uk)("\n          "),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'https://prod.api.com'"),(0,o.Uk)("\n      "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),m=(0,o._)("p",null,[(0,o.Uk)("Then in your website/app you can access "),(0,o._)("code",{class:"doc-token"},"process.env.API"),(0,o.Uk)(" and it’s gonna point to one of those two links above, based on dev or production build type.")],-1),v=(0,o._)("p",null,[(0,o.Uk)("You can even go one step further. Supply it with values taken from the "),(0,o._)("code",{class:"doc-token"},"quasar dev/build"),(0,o.Uk)(" env variables:")],-1),h=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o.Uk)("# we "),(0,o._)("span",{class:"token keyword"},"set"),(0,o.Uk)(" an env variable "),(0,o._)("span",{class:"token keyword"},"in"),(0,o.Uk)(" terminal\n$ "),(0,o._)("span",{class:"token constant"},"MY_API"),(0,o._)("span",{class:"token operator"},"="),(0,o.Uk)("api"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("com quasar build\n\n# then we pick it up "),(0,o._)("span",{class:"token keyword"},"in"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"/"),(0,o.Uk)("quasar"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("conf"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("js\n"),(0,o._)("span",{class:"token literal-property property"},"build"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token literal-property property"},"env"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n    "),(0,o._)("span",{class:"token constant"},"API"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(" ctx"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("dev\n      "),(0,o._)("span",{class:"token operator"},"?"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'https://dev.'"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"+"),(0,o.Uk)(" process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"MY_API"),(0,o.Uk)("\n      "),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'https://prod.'"),(0,o.Uk)(),(0,o._)("span",{class:"token operator"},"+"),(0,o.Uk)(" process"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("env"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token constant"},"MY_API"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),f=(0,o.Uk)("Should you wish to use "),y=(0,o._)("code",{class:"doc-token"},".env",-1),w=(0,o.Uk)(" file(s), you can even use "),b=(0,o.Uk)("dotenv"),j=(0,o.Uk)(" package. The following is just an example that passes env variables from the terminal right down to your UI’s app code:"),C=(0,o._)("pre",{class:"doc-code language-bash"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,o.Uk)("$ "),(0,o._)("span",{class:"token function"},"yarn"),(0,o.Uk)(),(0,o._)("span",{class:"token function"},"add"),(0,o.Uk)(" --dev dotenv\n")])],-1),q=(0,o._)("p",null,[(0,o.Uk)("Then in your "),(0,o._)("code",{class:"doc-token"},"/quasar.conf.js"),(0,o.Uk)(":")],-1),x=(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token literal-property property"},"build"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token literal-property property"},"env"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token function"},"require"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token string"},"'dotenv'"),(0,o._)("span",{class:"token punctuation"},")"),(0,o._)("span",{class:"token punctuation"},"."),(0,o._)("span",{class:"token function"},"config"),(0,o._)("span",{class:"token punctuation"},"("),(0,o._)("span",{class:"token punctuation"},")"),(0,o._)("span",{class:"token punctuation"},"."),(0,o.Uk)("parsed\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])],-1),E=(0,o.Uk)("Be sure to read the "),I=(0,o.Uk)("dotenv documentation"),D=(0,o.Uk)(" and create the necessary .env files in the root of your Quasar CLI project."),A=(0,o._)("ol",null,[(0,o._)("li",null,[(0,o._)("p",null,[(0,o.Uk)("Do not "),(0,o._)("code",{class:"doc-token"},"console.log(process)"),(0,o.Uk)(" or "),(0,o._)("code",{class:"doc-token"},"console.log(process.env)"),(0,o.Uk)(" as this will error out, for security reasons.")])]),(0,o._)("li",null,[(0,o._)("p",null,"Also, say you define:"),(0,o._)("pre",{class:"doc-code language-js"},[(0,o._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,o._)("span",{class:"token literal-property property"},"env"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)("\n  "),(0,o._)("span",{class:"token literal-property property"},"my"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"{"),(0,o.Uk)(),(0,o._)("span",{class:"token literal-property property"},"prop"),(0,o._)("span",{class:"token operator"},":"),(0,o.Uk)(),(0,o._)("span",{class:"token string"},"'value'"),(0,o.Uk)(),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n"),(0,o._)("span",{class:"token punctuation"},"}"),(0,o.Uk)("\n")])]),(0,o._)("p",null,[(0,o.Uk)("…then "),(0,o._)("code",{class:"doc-token"},"console.log(process.env.my)"),(0,o.Uk)(" will also error out. Only the “full path” of your definition ("),(0,o._)("code",{class:"doc-token"},"process.env.my.prop"),(0,o.Uk)(") will get replaced in your code.")])])],-1);function H(n,s,a,H,M,B){const P=(0,o.up)("q-markup-table"),T=(0,o.up)("doc-link"),S=(0,o.up)("doc-page");return(0,o.wg)(),(0,o.j4)(S,{"meta-title":H.metaTitle,title:"Handling process.env","meta-desc":H.metaDesc},{default:(0,o.w5)((()=>[e,t,(0,o._)("h2",{id:"values-supplied-by-quasar-cli",class:"doc-heading doc-h2",onClick:s[0]||(s[0]=n=>H.copyHeading("values-supplied-by-quasar-cli"))},"Values supplied by Quasar CLI"),(0,o.Wm)(P,{"wrap-cells":!0,flat:!0,bordered:!0,style:{width:"fit-content","max-width":"100%"}},{default:(0,o.w5)((()=>[c,p])),_:1}),(0,o._)("h2",{id:"example",class:"doc-heading doc-h2",onClick:s[1]||(s[1]=n=>H.copyHeading("example"))},"Example"),l,(0,o._)("h2",{id:"stripping-out-code",class:"doc-heading doc-h2",onClick:s[2]||(s[2]=n=>H.copyHeading("stripping-out-code"))},"Stripping out code"),k,u,i,(0,o._)("h2",{id:"import-based-on-process-env",class:"doc-heading doc-h2",onClick:s[3]||(s[3]=n=>H.copyHeading("import-based-on-process-env"))},"Import based on process.env"),r,_,(0,o._)("h2",{id:"adding-to-process-env",class:"doc-heading doc-h2",onClick:s[4]||(s[4]=n=>H.copyHeading("adding-to-process-env"))},"Adding to process.env"),d,U,g,m,v,h,(0,o._)("h4",{id:"using-dotenv",class:"doc-heading doc-h4",onClick:s[5]||(s[5]=n=>H.copyHeading("using-dotenv"))},"Using dotenv"),(0,o._)("p",null,[f,y,w,(0,o.Wm)(T,{to:"https://www.npmjs.com/package/dotenv"},{default:(0,o.w5)((()=>[b])),_:1}),j]),C,q,x,(0,o._)("p",null,[E,(0,o.Wm)(T,{to:"https://www.npmjs.com/package/dotenv"},{default:(0,o.w5)((()=>[I])),_:1}),D]),(0,o._)("h2",{id:"caveats",class:"doc-heading doc-h2",onClick:s[6]||(s[6]=n=>H.copyHeading("caveats"))},"Caveats"),A])),_:1},8,["meta-title","meta-desc"])}var M=a(17536);const B={name:"DocMarkdownPage",setup(){return{metaTitle:"Handling process.env",metaDesc:"How to differentiate the runtime procedure based on process.env in a Quasar app.",copyHeading:M.Et}}};var P=a(74260);const T=(0,P.Z)(B,[["render",H]]),S=T}}]);