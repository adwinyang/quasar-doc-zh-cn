"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[17947],{17947:(e,o,t)=>{t.r(o),t.d(o,{default:()=>k});var n=t(83673);const l=(0,n._)("p",null,"The QPullToRefresh is a component that allows the user to pull down in order to refresh page content (or retrieve the newest content).",-1),i=(0,n._)("div",{class:"doc-note doc-note--warning"},[(0,n._)("p",{class:"doc-note__title"},"WARNING"),(0,n._)("p",null,[(0,n.Uk)("In your "),(0,n._)("code",{class:"doc-token"},"@refresh"),(0,n.Uk)(" function, don’t forget to call the passed in "),(0,n._)("code",{class:"doc-token"},"done()"),(0,n.Uk)(" function when you have finished loading more data.")])],-1),c=(0,n._)("p",null,"To refresh, pull down (with mouse or through finger touch) on the content below when the inner scroll position is the top.",-1),s={class:"doc-note doc-note--tip"},a=(0,n._)("p",{class:"doc-note__title"},"Scrolling container",-1),r=(0,n.Uk)("Please read "),d=(0,n.Uk)("here"),u=(0,n.Uk)(" about how Quasar determines the container to attach scrolling events to."),h=(0,n._)("ul",null,[(0,n._)("li",null,"If using a QLayout, then it’s recommended that you put QPullToRefresh as direct child of QPage and wrap your page content with it."),(0,n._)("li",null,[(0,n.Uk)("If you change the parent of this component, don’t forget to call "),(0,n._)("code",{class:"doc-token"},"updateScrollTarget()"),(0,n.Uk)(" on the QPullToRefresh Vue reference.")]),(0,n._)("li",null,[(0,n.Uk)("QPullToRefresh also allows text selection, so if your content also has images, you might want to add "),(0,n._)("code",{class:"doc-token"},'draggable="false"'),(0,n.Uk)(" to them, otherwise the native browser behavior might interfere in a negative way.")])],-1);function p(e,o,t,p,g,m){const f=(0,n.up)("doc-api"),_=(0,n.up)("doc-example"),k=(0,n.up)("doc-link"),w=(0,n.up)("doc-page");return(0,n.wg)(),(0,n.j4)(w,{"meta-title":p.metaTitle,title:"Pull to refresh",related:p.related,toc:p.toc,"meta-desc":p.metaDesc},{default:(0,n.w5)((()=>[l,(0,n._)("h2",{id:"qpulltorefresh-api",class:"doc-heading doc-h2",onClick:o[0]||(o[0]=e=>p.copyHeading("qpulltorefresh-api"))},"QPullToRefresh API"),(0,n.Wm)(f,{file:"QPullToRefresh"}),(0,n._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:o[1]||(o[1]=e=>p.copyHeading("usage"))},"Usage"),(0,n._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:o[2]||(o[2]=e=>p.copyHeading("basic"))},"Basic"),i,c,(0,n.Wm)(_,{title:"Basic",file:"QPullToRefresh/Basic"}),(0,n._)("h3",{id:"custom-icon",class:"doc-heading doc-h3",onClick:o[3]||(o[3]=e=>p.copyHeading("custom-icon"))},"Custom icon"),(0,n.Wm)(_,{title:"Custom icon",file:"QPullToRefresh/Icon"}),(0,n._)("h3",{id:"custom-coloring",class:"doc-heading doc-h3",onClick:o[4]||(o[4]=e=>p.copyHeading("custom-coloring"))},"Custom coloring"),(0,n.Wm)(_,{title:"Custom coloring",file:"QPullToRefresh/CustomColoring"}),(0,n._)("h2",{id:"tips",class:"doc-heading doc-h2",onClick:o[5]||(o[5]=e=>p.copyHeading("tips"))},"Tips"),(0,n._)("div",s,[a,(0,n._)("p",null,[r,(0,n.Wm)(k,{to:"/vue-components/scroll-observer#determining-scrolling-container"},{default:(0,n.w5)((()=>[d])),_:1}),u])]),h])),_:1},8,["meta-title","related","toc","meta-desc"])}var g=t(17536);const m={name:"DocMarkdownPage",setup(){return{metaTitle:"Pull to refresh",metaDesc:"The QPullToRefresh Vue component allows the user to pull down in order to refresh or retrieve the newest content on a page.",related:[{name:"无限滚动",category:"Vue 组件",path:"/vue-components/infinite-scroll"},{name:"交叉点",category:"Vue 组件",path:"/vue-components/intersection"},{name:"图标",category:"Vue 组件",path:"/vue-components/icon"}],toc:[{id:"qpulltorefresh-api",title:"QPullToRefresh API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"custom-icon",title:"Custom icon",sub:!0},{id:"custom-coloring",title:"Custom coloring",sub:!0},{id:"tips",title:"Tips"}],copyHeading:g.Et}}};var f=t(74260);const _=(0,f.Z)(m,[["render",p]]),k=_}}]);