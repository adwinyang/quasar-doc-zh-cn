"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[65479],{65479:(n,e,o)=>{o.r(e),o.d(e,{default:()=>R});var a=o(83673);const s=(0,a._)("p",null,"When you add the Electron mode in a Quasar project for the first time you will get the latest version of the Electron package. At some point in time, you will want to upgrade the Electron version.",-1),t=(0,a._)("p",null,"Before upgrading Electron, please consult its release notes. Are there breaking changes?",-1),c=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a._)("span",{class:"token comment"},"# from the root of your Quasar project"),(0,a.Uk)("\n$ "),(0,a._)("span",{class:"token function"},"yarn"),(0,a.Uk)(" upgrade electron@latest\n"),(0,a._)("span",{class:"token comment"},"# or: npm install electron@latest"),(0,a.Uk)("\n")])],-1),l=(0,a._)("p",null,"The Electron mode for Quasar v2 is an almost complete overhaul of the previous version, significantly improving the developer experience. Some of the changes here are required in order to ensure compatibility with the latest developments in the Electron world (so bulletproofing for upcoming upstream changes).",-1),p=(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("strong",null,"Out of the box support for Typescript"),(0,a.Uk)(". Just rename electron-main.js and electron-preload.js to electron-main.ts and electron-preload.ts.")]),(0,a._)("li",null,[(0,a.Uk)("Support for Electron 11 and preparing out of the box support for upcoming changes in Electron 12+ (without you needing to change anything in the future). One of changes are that we’ll be using "),(0,a._)("code",{class:"doc-token"},"contextIsolation"),(0,a.Uk)(" instead of the deprecated "),(0,a._)("code",{class:"doc-token"},"Node Integration"),(0,a.Uk)(".")]),(0,a._)("li",null,[(0,a.Uk)("The preload script no longer has the old limitations. You can import other js files with a relative path because the script is now bundled and passed through Babel (so you can use the "),(0,a._)("code",{class:"doc-token"},"import X from Y"),(0,a.Uk)(" syntax too). You can also enable linting for it.")]),(0,a._)("li",null,"You can enable linting for the main thread and the preload script too."),(0,a._)("li",null,"We’ve removed the default electron-main.dev.js support as it seems that it’s not needed anymore. However, you can add it back by creating it and referencing it from electron-main (it’s no longer detected by Quasar CLI automatically – because we don’t need to; more on this later).")],-1),r=(0,a._)("pre",{class:"doc-code language-bash"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-bash"},[(0,a._)("span",{class:"token comment"},"# old structure"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token builtin class-name"},"."),(0,a.Uk)("\n└── src-electron/\n    ├── icons/                 "),(0,a._)("span",{class:"token comment"},"# Icons of your app for all platforms"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   ├── icon.icns             "),(0,a._)("span",{class:"token comment"},"# Icon file for Darwin (MacOS) platform"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   ├── icon.ico              "),(0,a._)("span",{class:"token comment"},"# Icon file for win32 (Windows) platform"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   └── linux-512x512.png     "),(0,a._)("span",{class:"token comment"},"# Icon file for Linux platform (when using electron-builder)"),(0,a.Uk)("\n    └── main-process/\n        ├── electron-preload.js   "),(0,a._)("span",{class:"token comment"},"# Electron preload script (injects Node.js stuff into renderer thread)"),(0,a.Uk)("\n        ├── electron-main.dev.js  "),(0,a._)("span",{class:"token comment"},"# Main thread code (preceded by dev code only)"),(0,a.Uk)("\n        └── electron-main.js      "),(0,a._)("span",{class:"token comment"},"# Main thread code (production code)"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"# NEW structure"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token builtin class-name"},"."),(0,a.Uk)("\n└── src-electron/\n    ├── icons/                 "),(0,a._)("span",{class:"token comment"},"# Icons of your app for all platforms"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   ├── icon.icns             "),(0,a._)("span",{class:"token comment"},"# Icon file for Darwin (MacOS) platform"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   ├── icon.ico              "),(0,a._)("span",{class:"token comment"},"# Icon file for win32 (Windows) platform"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token operator"},"|"),(0,a.Uk)("   └── icon.png              "),(0,a._)("span",{class:"token comment"},"# Tray icon file for all platforms (especially Linux)"),(0,a.Uk)("\n    ├── electron-preload.js   "),(0,a._)("span",{class:"token comment"},"# (or .ts) Electron preload script (injects Node.js stuff into renderer thread)"),(0,a.Uk)("\n    └── electron-main.js      "),(0,a._)("span",{class:"token comment"},"# (or .ts) Main thread code"),(0,a.Uk)("\n")])],-1),i=(0,a._)("p",null,[(0,a.Uk)("Notice that there’s no "),(0,a._)("code",{class:"doc-token"},"electron-main.dev.js"),(0,a.Uk)(" file anymore (not needed anymore) and that the "),(0,a._)("code",{class:"doc-token"},"electron-preload/main.js"),(0,a.Uk)(" files need to be moved directly under "),(0,a._)("code",{class:"doc-token"},"/src-electron"),(0,a.Uk)(".")],-1),k=(0,a._)("p",null,"In order for us to be forward compatible with future versions of Electron, you’ll need to do some small (but important!) changes:",-1),u=(0,a._)("pre",{class:"doc-code language-js"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,a._)("span",{class:"token comment"},"// OLD way"),(0,a.Uk)("\nmainWindow "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"new"),(0,a.Uk)(),(0,a._)("span",{class:"token class-name"},"BrowserWindow"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token comment"},"// ..."),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token literal-property property"},"webPreferences"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token literal-property property"},"nodeIntegration"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(" process"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("env"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token constant"},"QUASAR_NODE_INTEGRATION"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token literal-property property"},"nodeIntegrationInWorker"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(" process"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("env"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token constant"},"QUASAR_NODE_INTEGRATION"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// preload: path.resolve(__dirname, 'electron-preload.js')"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"// NEW way"),(0,a.Uk)("\nmainWindow "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"new"),(0,a.Uk)(),(0,a._)("span",{class:"token class-name"},"BrowserWindow"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token comment"},"// ..."),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token literal-property property"},"webPreferences"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// we enable contextIsolation (Electron 12+ has it enabled by default anyway)"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token literal-property property"},"contextIsolation"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token boolean"},"true"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// we use a new way to reference the preload script"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// (it's going to be needed, so add it and create the file if it's not there already)"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token literal-property property"},"preload"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(" path"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"resolve"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("__dirname"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)(" process"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("env"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token constant"},"QUASAR_ELECTRON_PRELOAD"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n")])],-1),d=(0,a._)("p",null,"You will need this file if you don’t have it already. So create it if it’s missing. Without it you won’t be able to use the power of Node.js in your renderer thread.",-1),_=(0,a.Uk)("More info: "),m=(0,a.Uk)("preload script"),U=(0,a.Uk)("."),h=(0,a._)("div",{class:"doc-note doc-note--danger"},[(0,a._)("p",{class:"doc-note__title"},"WARNING"),(0,a._)("p",null,[(0,a.Uk)("You will need to transfer all the Node.js stuff away from your renderer thread (the UI code from /src) and into the preload script. Provide the same functionality through the "),(0,a._)("code",{class:"doc-token"},"contextBridge"),(0,a.Uk)(" as seen below.")])],-1),g=(0,a._)("p",null,[(0,a.Uk)("This is the default content of "),(0,a._)("code",{class:"doc-token"},"electron-preload.js"),(0,a.Uk)(":")],-1),f=(0,a._)("pre",{class:"doc-code language-js"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,a._)("span",{class:"token comment"},'/**\n * This file is used specifically for security reasons.\n * Here you can access Nodejs stuff and inject functionality into\n * the renderer thread (accessible there through the "window" object)\n *\n * WARNING!\n * If you import anything from node_modules, then make sure that the package is specified\n * in package.json > "dependencies" and NOT in "devDependencies"\n *\n * Example (injects window.myAPI.doAThing() into renderer thread):\n *\n *   const { contextBridge } = require(\'electron\')\n *\n *   contextBridge.exposeInMainWorld(\'myAPI\', {\n *     doAThing: () => {}\n *   })\n */'),(0,a.Uk)("\n")])],-1),w=(0,a._)("pre",{class:"doc-code language-js"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,a._)("span",{class:"token comment"},"// OLD way"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token literal-property property"},"electron"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token comment"},"// it's gone now (upcoming upstream breaking change)"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token comment"},"// replaced by a change in electron-main.js documented earlier"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token literal-property property"},"nodeIntegration"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token boolean"},"true"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"// remove me!"),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token comment"},"// renamed to chainWebpackMain"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"chainWebpack"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"chain"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"/* ... */"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token comment"},"// renamed to extendWebpackMain"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"extendWebpack"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"cfg"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"/* ... */"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n\n"),(0,a._)("span",{class:"token comment"},"// NEW way"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token literal-property property"},"electron"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token comment"},"// was renamed from chainWebpack()"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"chainWebpackMain"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"chain"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// example for its content (adds linting)"),(0,a.Uk)("\n    chain"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"plugin"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token string"},"'eslint-webpack-plugin'"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n      "),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"use"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("ESLintPlugin"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token literal-property property"},"extensions"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a._)("span",{class:"token string"},"'js'"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token comment"},"// was renamed from extendWebpack()"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"extendWebpackMain"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"cfg"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"/* ... */"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token comment"},"// New!"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"chainWebpackPreload"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"chain"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// example (adds linting)"),(0,a.Uk)("\n    chain"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"plugin"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token string"},"'eslint-webpack-plugin'"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n      "),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"use"),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("ESLintPlugin"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token literal-property property"},"extensions"),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"["),(0,a._)("span",{class:"token string"},"'js'"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},"]"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token comment"},"// New!"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token function"},"extendWebpackPreload"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token parameter"},"cfg"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"/* ... */"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n")])],-1),y=(0,a.Uk)("The "),b=(0,a.Uk)("$q object"),v=(0,a.Uk)(" no longer contains the "),j=(0,a._)("code",{class:"doc-token"},"electron",-1),W=(0,a.Uk)(" property. You will need to use the "),E=(0,a.Uk)("preload script"),I=(0,a.Uk)(" to access it and provide it to the renderer thread."),N=(0,a.Uk)("Furthermore, the "),x=(0,a.Uk)("openURL"),T=(0,a.Uk)(" util can no longer tap into Electron to open a new window. You will need to provide your own util from the preload script."),A=(0,a._)("div",{class:"doc-note doc-note--danger"},[(0,a._)("p",{class:"doc-note__title"},"WARNING"),(0,a._)("p",null,[(0,a.Uk)("You will need to transfer all the Node.js stuff away from your renderer thread (the UI code from /src) and into the preload script. Provide the same functionality through the "),(0,a._)("code",{class:"doc-token"},"contextBridge"),(0,a.Uk)(" as seen in the preload script section above.")])],-1),C=(0,a._)("p",null,"You may also want the following code in your electron-main.js to auto-open devtools while on dev mode (or prod with debugging enabled) and to disable devtools on production builds (without debugging enabled):",-1),D=(0,a._)("pre",{class:"doc-code language-js"},[(0,a._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-js"},[(0,a._)("span",{class:"token keyword"},"function"),(0,a.Uk)(),(0,a._)("span",{class:"token function"},"createWindow"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  mainWindow "),(0,a._)("span",{class:"token operator"},"="),(0,a.Uk)(),(0,a._)("span",{class:"token keyword"},"new"),(0,a.Uk)(),(0,a._)("span",{class:"token class-name"},"BrowserWindow"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)(),(0,a._)("span",{class:"token comment"},"/* ... */"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n\n  "),(0,a._)("span",{class:"token keyword"},"if"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a.Uk)("process"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("env"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token constant"},"DEBUGGING"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// if on DEV or Production with debug enabled"),(0,a.Uk)("\n    mainWindow"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("webContents"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"openDevTools"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token keyword"},"else"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token comment"},"// we're on production; no access to devtools pls"),(0,a.Uk)("\n    mainWindow"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("webContents"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"on"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token string"},"'devtools-opened'"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)(),(0,a._)("span",{class:"token operator"},"=>"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n      mainWindow"),(0,a._)("span",{class:"token punctuation"},"."),(0,a.Uk)("webContents"),(0,a._)("span",{class:"token punctuation"},"."),(0,a._)("span",{class:"token function"},"closeDevTools"),(0,a._)("span",{class:"token punctuation"},"("),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},")"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n")])],-1);function q(n,e,o,q,H,O){const P=(0,a.up)("doc-link"),M=(0,a.up)("doc-page");return(0,a.wg)(),(0,a.j4)(M,{"meta-title":q.metaTitle,title:"Upgrade guide on Electron","meta-desc":q.metaDesc},{default:(0,a.w5)((()=>[(0,a._)("h2",{id:"upgrading-electron",class:"doc-heading doc-h2",onClick:e[0]||(e[0]=n=>q.copyHeading("upgrading-electron"))},"Upgrading Electron"),s,t,c,(0,a._)("h2",{id:"upgrading-from-quasar-v1",class:"doc-heading doc-h2",onClick:e[1]||(e[1]=n=>q.copyHeading("upgrading-from-quasar-v1"))},"Upgrading from Quasar v1"),l,(0,a._)("h3",{id:"high-overview-of-the-improvements",class:"doc-heading doc-h3",onClick:e[2]||(e[2]=n=>q.copyHeading("high-overview-of-the-improvements"))},"High overview of the improvements"),p,(0,a._)("h3",{id:"the-src-electron-folder",class:"doc-heading doc-h3",onClick:e[3]||(e[3]=n=>q.copyHeading("the-src-electron-folder"))},"The /src-electron folder"),r,i,(0,a._)("h3",{id:"the-electron-main-js-file",class:"doc-heading doc-h3",onClick:e[4]||(e[4]=n=>q.copyHeading("the-electron-main-js-file"))},"The electron-main.js file"),k,u,(0,a._)("h3",{id:"the-electron-preload-js-file",class:"doc-heading doc-h3",onClick:e[5]||(e[5]=n=>q.copyHeading("the-electron-preload-js-file"))},"The electron-preload.js file"),d,(0,a._)("p",null,[_,(0,a.Wm)(P,{to:"/quasar-cli/developing-electron-apps/electron-preload-script"},{default:(0,a.w5)((()=>[m])),_:1}),U]),h,g,f,(0,a._)("h3",{id:"quasar-conf-changes",class:"doc-heading doc-h3",onClick:e[6]||(e[6]=n=>q.copyHeading("quasar-conf-changes"))},"Quasar.conf changes"),w,(0,a._)("h3",{id:"renderer-thread-src-",class:"doc-heading doc-h3",onClick:e[7]||(e[7]=n=>q.copyHeading("renderer-thread-src-"))},"Renderer thread (/src)"),(0,a._)("p",null,[y,(0,a.Wm)(P,{to:"/options/the-q-object"},{default:(0,a.w5)((()=>[b])),_:1}),v,j,W,(0,a.Wm)(P,{to:"/quasar-cli/developing-electron-apps/electron-preload-script"},{default:(0,a.w5)((()=>[E])),_:1}),I]),(0,a._)("p",null,[N,(0,a.Wm)(P,{to:"/quasar-utils/other-utils#open-external-url"},{default:(0,a.w5)((()=>[x])),_:1}),T]),A,(0,a._)("h3",{id:"browser-devtools",class:"doc-heading doc-h3",onClick:e[8]||(e[8]=n=>q.copyHeading("browser-devtools"))},"Browser Devtools"),C,D])),_:1},8,["meta-title","meta-desc"])}var H=o(17536);const O={name:"DocMarkdownPage",setup(){return{metaTitle:"Upgrade guide on Electron",metaDesc:"Upgrading instructions when dealing with Electron in Quasar.",copyHeading:H.Et}}};var P=o(74260);const M=(0,P.Z)(O,[["render",q]]),R=M}}]);