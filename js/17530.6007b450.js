"use strict";(globalThis["webpackChunkquasar_dev"]=globalThis["webpackChunkquasar_dev"]||[]).push([[17530],{17530:(e,t,a)=>{a.r(t),a.d(t,{default:()=>L});var n=a(83673);const o=(0,n._)("p",null,"The QList and QItem are a group of components which can work together to present multiple line items vertically as a single continuous element. They are best suited for displaying similar data types as rows of information, such as a contact list, a playlist or menu. Each row is called an Item. QItem can also be used outside of a QList too.",-1),s=(0,n.Uk)("Lists can encapsulate Items or Item-like components, for example "),i=(0,n.Uk)("QExpansionItem"),l=(0,n.Uk)(" or "),c=(0,n.Uk)("QSlideItem"),p=(0,n.Uk)(". Also "),d=(0,n.Uk)("QSeparator"),m=(0,n.Uk)(" can be used to split up sections, where needed."),u=(0,n._)("p",null,"List Items have the following pre-built child components:",-1),r=(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("strong",null,"QItemSection"),(0,n.Uk)(" - An item section can have several uses for particular content. They are controlled via the "),(0,n._)("code",{class:"doc-token"},"avatar"),(0,n.Uk)(", "),(0,n._)("code",{class:"doc-token"},"thumbnail"),(0,n.Uk)(" and "),(0,n._)("code",{class:"doc-token"},"side"),(0,n.Uk)(" props. With no props, it will render the main section of your QItem (which spans to the fullest of available space).")]),(0,n._)("li",null,[(0,n._)("strong",null,"QItemLabel"),(0,n.Uk)(" - An item label is useful for predefined text content type within a QItemSection, or for header-like content of the QList itself.")])],-1),k=(0,n._)("div",{class:"doc-note doc-note--tip"},[(0,n._)("p",{class:"doc-note__title"},"TIP"),(0,n._)("p",null,[(0,n.Uk)("When you have multi-line items, you could use "),(0,n._)("code",{class:"doc-token"},"top"),(0,n.Uk)(" property on QItemSection side/avatar to align the sections to top, overriding default middle alignment.")])],-1),_=(0,n._)("div",{class:"doc-note doc-note--warning"},[(0,n._)("p",{class:"doc-note__title"},"WARNING"),(0,n._)("p",null,[(0,n.Uk)("Notice you can handle label overflow with "),(0,n._)("code",{class:"doc-token"},"lines"),(0,n.Uk)(" prop, telling it how many lines it can span. However, this feature uses Webkit specific CSS so won’t work in IE/Edge.")])],-1),h=(0,n._)("p",null,[(0,n.Uk)("For demoing purposes in the example below, we’re using the "),(0,n._)("code",{class:"doc-token"},"active"),(0,n.Uk)(" prop instead of QItem’s router props ("),(0,n._)("code",{class:"doc-token"},"to"),(0,n.Uk)(", "),(0,n._)("code",{class:"doc-token"},"exact"),(0,n.Uk)("). UMD doesn’t have Vue Router so you wouldn’t be able to play with it in Codepen/jsFiddle.")],-1),g={class:"doc-note doc-note--tip"},I=(0,n._)("p",{class:"doc-note__title"},"TIP",-1),v=(0,n.Uk)("For more complex menus, consider also using "),Q=(0,n.Uk)("QExpansionItem"),f=(0,n.Uk)("."),U=(0,n._)("p",null,[(0,n.Uk)("You can use QItems together with Vue Router through "),(0,n._)("code",{class:"doc-token"},"<router-link>"),(0,n.Uk)(" properties bound to it. These allow for listening to the current app route and also triggering a route when clicked/tapped.")],-1),b=(0,n._)("pre",{class:"doc-code language-html"},[(0,n._)("code",{class:"doc-code__inner doc-code__inner--prerendered language-html"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"<"),(0,n.Uk)("q-item")]),(0,n.Uk)(),(0,n._)("span",{class:"token attr-name"},"to"),(0,n._)("span",{class:"token attr-value"},[(0,n._)("span",{class:"token punctuation attr-equals"},"="),(0,n._)("span",{class:"token punctuation"},'"'),(0,n.Uk)("/inbox"),(0,n._)("span",{class:"token punctuation"},'"')]),(0,n.Uk)(),(0,n._)("span",{class:"token attr-name"},"exact"),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n  "),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"<"),(0,n.Uk)("q-item-section")]),(0,n.Uk)(),(0,n._)("span",{class:"token attr-name"},"avatar"),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n    "),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"<"),(0,n.Uk)("q-icon")]),(0,n.Uk)(),(0,n._)("span",{class:"token attr-name"},"name"),(0,n._)("span",{class:"token attr-value"},[(0,n._)("span",{class:"token punctuation attr-equals"},"="),(0,n._)("span",{class:"token punctuation"},'"'),(0,n.Uk)("inbox"),(0,n._)("span",{class:"token punctuation"},'"')]),(0,n.Uk)(),(0,n._)("span",{class:"token punctuation"},"/>")]),(0,n.Uk)("\n  "),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"</"),(0,n.Uk)("q-item-section")]),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n\n  "),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"<"),(0,n.Uk)("q-item-section")]),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n    Inbox\n  "),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"</"),(0,n.Uk)("q-item-section")]),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n"),(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token tag"},[(0,n._)("span",{class:"token punctuation"},"</"),(0,n.Uk)("q-item")]),(0,n._)("span",{class:"token punctuation"},">")]),(0,n.Uk)("\n")])],-1);function w(e,t,a,w,y,q){const x=(0,n.up)("doc-link"),W=(0,n.up)("doc-api"),L=(0,n.up)("doc-example"),S=(0,n.up)("doc-page");return(0,n.wg)(),(0,n.j4)(S,{"meta-title":w.metaTitle,title:"List and List Items",related:w.related,toc:w.toc,"meta-desc":w.metaDesc},{default:(0,n.w5)((()=>[o,(0,n._)("p",null,[s,(0,n.Wm)(x,{to:"/vue-components/expansion-item"},{default:(0,n.w5)((()=>[i])),_:1}),l,(0,n.Wm)(x,{to:"/vue-components/slide-item"},{default:(0,n.w5)((()=>[c])),_:1}),p,(0,n.Wm)(x,{to:"/vue-components/separator"},{default:(0,n.w5)((()=>[d])),_:1}),m]),u,r,(0,n._)("h2",{id:"qlist-api",class:"doc-heading doc-h2",onClick:t[0]||(t[0]=e=>w.copyHeading("qlist-api"))},"QList API"),(0,n.Wm)(W,{file:"QList"}),(0,n._)("h2",{id:"qitem-api",class:"doc-heading doc-h2",onClick:t[1]||(t[1]=e=>w.copyHeading("qitem-api"))},"QItem API"),(0,n.Wm)(W,{file:"QItem"}),(0,n._)("h2",{id:"qitemsection-api",class:"doc-heading doc-h2",onClick:t[2]||(t[2]=e=>w.copyHeading("qitemsection-api"))},"QItemSection API"),(0,n.Wm)(W,{file:"QItemSection"}),(0,n._)("h2",{id:"qitemlabel-api",class:"doc-heading doc-h2",onClick:t[3]||(t[3]=e=>w.copyHeading("qitemlabel-api"))},"QItemLabel API"),(0,n.Wm)(W,{file:"QItemLabel"}),(0,n._)("h2",{id:"usage",class:"doc-heading doc-h2",onClick:t[4]||(t[4]=e=>w.copyHeading("usage"))},"Usage"),(0,n._)("h3",{id:"basic",class:"doc-heading doc-h3",onClick:t[5]||(t[5]=e=>w.copyHeading("basic"))},"Basic"),(0,n.Wm)(L,{title:"Basic",file:"QItem/Basic"}),(0,n.Wm)(L,{title:"On a dark background",file:"QItem/Dark",dark:""}),(0,n.Wm)(L,{title:"Dense",file:"QItem/Dense"}),(0,n._)("h3",{id:"qitemsection",class:"doc-heading doc-h3",onClick:t[6]||(t[6]=e=>w.copyHeading("qitemsection"))},"QItemSection"),(0,n.Wm)(L,{title:"Left avatar/thumbnail QItemSection",file:"QItem/AvatarLeft"}),(0,n.Wm)(L,{title:"Right avatar/thumbnail QItemSection",file:"QItem/AvatarRight"}),k,(0,n.Wm)(L,{title:"Side QItemSection",file:"QItem/SideSection"}),(0,n._)("h3",{id:"active-state",class:"doc-heading doc-h3",onClick:t[7]||(t[7]=e=>w.copyHeading("active-state"))},"Active state"),(0,n.Wm)(L,{title:"Active prop",file:"QItem/ActiveState"}),(0,n._)("h3",{id:"qitemlabel",class:"doc-heading doc-h3",onClick:t[8]||(t[8]=e=>w.copyHeading("qitemlabel"))},"QItemLabel"),_,(0,n.Wm)(L,{title:"ItemLabel",file:"QItem/ItemLabel"}),(0,n._)("h3",{id:"more-involved-examples",class:"doc-heading doc-h3",onClick:t[9]||(t[9]=e=>w.copyHeading("more-involved-examples"))},"More involved examples"),(0,n.Wm)(L,{title:"Contact list",file:"QItem/ExampleContacts"}),(0,n.Wm)(L,{title:"Settings",file:"QItem/ExampleSettings"}),(0,n.Wm)(L,{title:"Emails",file:"QItem/ExampleEmails"}),(0,n.Wm)(L,{title:"Folder listing",file:"QItem/ExampleFolders"}),h,(0,n.Wm)(L,{title:"Menu",file:"QItem/ExampleMenu"}),(0,n._)("div",g,[I,(0,n._)("p",null,[v,(0,n.Wm)(x,{to:"/vue-components/expansion-item"},{default:(0,n.w5)((()=>[Q])),_:1}),f])]),(0,n._)("h3",{id:"connecting-to-vue-router",class:"doc-heading doc-h3",onClick:t[10]||(t[10]=e=>w.copyHeading("connecting-to-vue-router"))},"Connecting to Vue Router"),U,b])),_:1},8,["meta-title","related","toc","meta-desc"])}var y=a(17536);const q={name:"DocMarkdownPage",setup(){return{metaTitle:"List and List Items",metaDesc:"How to use the QList, QItem, QItemSection and QItemLabel Vue components.",related:[{name:"扩展项",category:"Vue 组件",path:"/vue-components/expansion-item"},{name:"滑动项",category:"Vue 组件",path:"/vue-components/slide-item"},{name:"分割线",category:"Vue 组件",path:"/vue-components/separator"}],toc:[{id:"qlist-api",title:"QList API"},{id:"qitem-api",title:"QItem API"},{id:"qitemsection-api",title:"QItemSection API"},{id:"qitemlabel-api",title:"QItemLabel API"},{id:"usage",title:"Usage"},{id:"basic",title:"Basic",sub:!0},{id:"qitemsection",title:"QItemSection",sub:!0},{id:"active-state",title:"Active state",sub:!0},{id:"qitemlabel",title:"QItemLabel",sub:!0},{id:"more-involved-examples",title:"More involved examples",sub:!0},{id:"connecting-to-vue-router",title:"Connecting to Vue Router",sub:!0}],copyHeading:y.Et}}};var x=a(74260);const W=(0,x.Z)(q,[["render",w]]),L=W}}]);